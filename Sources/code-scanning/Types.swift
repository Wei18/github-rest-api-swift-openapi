// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif
/// A type that performs HTTP operations defined by the OpenAPI document.
public protocol APIProtocol: Sendable {
    /// List code scanning alerts for an organization
    ///
    /// Lists code scanning alerts for the default branch for all eligible repositories in an organization. Eligible repositories are repositories that are owned by organizations that you own or for which you are a security manager. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."
    ///
    /// The authenticated user must be an owner or security manager for the organization to use this endpoint.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` or `repo`s cope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /orgs/{org}/code-scanning/alerts`.
    /// - Remark: Generated from `#/paths//orgs/{org}/code-scanning/alerts/get(code-scanning/list-alerts-for-org)`.
    func code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org(_ input: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.Input) async throws -> Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.Output
    /// List code scanning alerts for a repository
    ///
    /// Lists code scanning alerts.
    ///
    /// The response includes a `most_recent_instance` object.
    /// This provides details of the most recent instance of this alert
    /// for the default branch (or for the specified Git reference if you used `ref` in the request).
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/alerts`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/get(code-scanning/list-alerts-for-repo)`.
    func code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo(_ input: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo.Input) async throws -> Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo.Output
    /// Get a code scanning alert
    ///
    /// Gets a single code scanning alert.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/get(code-scanning/get-alert)`.
    func code_hyphen_scanning_sol_get_hyphen_alert(_ input: Operations.code_hyphen_scanning_sol_get_hyphen_alert.Input) async throws -> Operations.code_hyphen_scanning_sol_get_hyphen_alert.Output
    /// Update a code scanning alert
    ///
    /// Updates the status of a single code scanning alert.
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/patch(code-scanning/update-alert)`.
    func code_hyphen_scanning_sol_update_hyphen_alert(_ input: Operations.code_hyphen_scanning_sol_update_hyphen_alert.Input) async throws -> Operations.code_hyphen_scanning_sol_update_hyphen_alert.Output
    /// List instances of a code scanning alert
    ///
    /// Lists all instances of the specified code scanning alert.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances/get(code-scanning/list-alert-instances)`.
    func code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances(_ input: Operations.code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances.Input) async throws -> Operations.code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances.Output
    /// List code scanning analyses for a repository
    ///
    /// Lists the details of all code scanning analyses for a repository,
    /// starting with the most recent.
    /// The response is paginated and you can use the `page` and `per_page` parameters
    /// to list the analyses you're interested in.
    /// By default 30 analyses are listed per page.
    ///
    /// The `rules_count` field in the response give the number of rules
    /// that were run in the analysis.
    /// For very old analyses this data is not available,
    /// and `0` is returned in this field.
    ///
    /// > [!WARNING]
    /// > **Deprecation notice:** The `tool_name` field is deprecated and will, in future, not be included in the response for this endpoint. The example response reflects this change. The tool name can now be found inside the `tool` field.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/analyses`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/get(code-scanning/list-recent-analyses)`.
    func code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses(_ input: Operations.code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses.Input) async throws -> Operations.code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses.Output
    /// Get a code scanning analysis for a repository
    ///
    /// Gets a specified code scanning analysis for a repository.
    ///
    /// The default JSON response contains fields that describe the analysis.
    /// This includes the Git reference and commit SHA to which the analysis relates,
    /// the datetime of the analysis, the name of the code scanning tool,
    /// and the number of alerts.
    ///
    /// The `rules_count` field in the default response give the number of rules
    /// that were run in the analysis.
    /// For very old analyses this data is not available,
    /// and `0` is returned in this field.
    ///
    /// This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."
    ///
    /// - **`application/sarif+json`**: Instead of returning a summary of the analysis, this endpoint returns a subset of the analysis data that was uploaded. The data is formatted as [SARIF version 2.1.0](https://docs.oasis-open.org/sarif/sarif/v2.1.0/cs01/sarif-v2.1.0-cs01.html). It also returns additional data such as the `github/alertNumber` and `github/alertUrl` properties.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/get(code-scanning/get-analysis)`.
    func code_hyphen_scanning_sol_get_hyphen_analysis(_ input: Operations.code_hyphen_scanning_sol_get_hyphen_analysis.Input) async throws -> Operations.code_hyphen_scanning_sol_get_hyphen_analysis.Output
    /// Delete a code scanning analysis from a repository
    ///
    /// Deletes a specified code scanning analysis from a repository.
    ///
    /// You can delete one analysis at a time.
    /// To delete a series of analyses, start with the most recent analysis and work backwards.
    /// Conceptually, the process is similar to the undo function in a text editor.
    ///
    /// When you list the analyses for a repository,
    /// one or more will be identified as deletable in the response:
    ///
    /// ```
    /// "deletable": true
    /// ```
    ///
    /// An analysis is deletable when it's the most recent in a set of analyses.
    /// Typically, a repository will have multiple sets of analyses
    /// for each enabled code scanning tool,
    /// where a set is determined by a unique combination of analysis values:
    ///
    /// * `ref`
    /// * `tool`
    /// * `category`
    ///
    /// If you attempt to delete an analysis that is not the most recent in a set,
    /// you'll get a 400 response with the message:
    ///
    /// ```
    /// Analysis specified is not deletable.
    /// ```
    ///
    /// The response from a successful `DELETE` operation provides you with
    /// two alternative URLs for deleting the next analysis in the set:
    /// `next_analysis_url` and `confirm_delete_url`.
    /// Use the `next_analysis_url` URL if you want to avoid accidentally deleting the final analysis
    /// in a set. This is a useful option if you want to preserve at least one analysis
    /// for the specified tool in your repository.
    /// Use the `confirm_delete_url` URL if you are content to remove all analyses for a tool.
    /// When you delete the last analysis in a set, the value of `next_analysis_url` and `confirm_delete_url`
    /// in the 200 response is `null`.
    ///
    /// As an example of the deletion process,
    /// let's imagine that you added a workflow that configured a particular code scanning tool
    /// to analyze the code in a repository. This tool has added 15 analyses:
    /// 10 on the default branch, and another 5 on a topic branch.
    /// You therefore have two separate sets of analyses for this tool.
    /// You've now decided that you want to remove all of the analyses for the tool.
    /// To do this you must make 15 separate deletion requests.
    /// To start, you must find an analysis that's identified as deletable.
    /// Each set of analyses always has one that's identified as deletable.
    /// Having found the deletable analysis for one of the two sets,
    /// delete this analysis and then continue deleting the next analysis in the set until they're all deleted.
    /// Then repeat the process for the second set.
    /// The procedure therefore consists of a nested loop:
    ///
    /// **Outer loop**:
    /// * List the analyses for the repository, filtered by tool.
    /// * Parse this list to find a deletable analysis. If found:
    ///
    ///   **Inner loop**:
    ///   * Delete the identified analysis.
    ///   * Parse the response for the value of `confirm_delete_url` and, if found, use this in the next iteration.
    ///
    /// The above process assumes that you want to remove all trace of the tool's analyses from the GitHub user interface, for the specified repository, and it therefore uses the `confirm_delete_url` value. Alternatively, you could use the `next_analysis_url` value, which would leave the last analysis in each set undeleted to avoid removing a tool's analysis entirely.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/delete(code-scanning/delete-analysis)`.
    func code_hyphen_scanning_sol_delete_hyphen_analysis(_ input: Operations.code_hyphen_scanning_sol_delete_hyphen_analysis.Input) async throws -> Operations.code_hyphen_scanning_sol_delete_hyphen_analysis.Output
    /// List CodeQL databases for a repository
    ///
    /// Lists the CodeQL databases that are available in a repository.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/codeql/databases`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/databases/get(code-scanning/list-codeql-databases)`.
    func code_hyphen_scanning_sol_list_hyphen_codeql_hyphen_databases(_ input: Operations.code_hyphen_scanning_sol_list_hyphen_codeql_hyphen_databases.Input) async throws -> Operations.code_hyphen_scanning_sol_list_hyphen_codeql_hyphen_databases.Output
    /// Get a CodeQL database for a repository
    ///
    /// Gets a CodeQL database for a language in a repository.
    ///
    /// By default this endpoint returns JSON metadata about the CodeQL database. To
    /// download the CodeQL database binary content, set the `Accept` header of the request
    /// to [`application/zip`](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types), and make sure
    /// your HTTP client is configured to follow redirects or use the `Location` header
    /// to make a second request to get the redirect URL.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/databases/{language}/get(code-scanning/get-codeql-database)`.
    func code_hyphen_scanning_sol_get_hyphen_codeql_hyphen_database(_ input: Operations.code_hyphen_scanning_sol_get_hyphen_codeql_hyphen_database.Input) async throws -> Operations.code_hyphen_scanning_sol_get_hyphen_codeql_hyphen_database.Output
    /// Create a CodeQL variant analysis
    ///
    /// Creates a new CodeQL variant analysis, which will run a CodeQL query against one or more repositories.
    ///
    /// Get started by learning more about [running CodeQL queries at scale with Multi-Repository Variant Analysis](https://docs.github.com/code-security/codeql-for-vs-code/getting-started-with-codeql-for-vs-code/running-codeql-queries-at-scale-with-multi-repository-variant-analysis).
    ///
    /// Use the `owner` and `repo` parameters in the URL to specify the controller repository that
    /// will be used for running GitHub Actions workflows and storing the results of the CodeQL variant analysis.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.
    ///
    /// - Remark: HTTP `POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/post(code-scanning/create-variant-analysis)`.
    func code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis(_ input: Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Input) async throws -> Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Output
    /// Get the summary of a CodeQL variant analysis
    ///
    /// Gets the summary of a CodeQL variant analysis.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/get(code-scanning/get-variant-analysis)`.
    func code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis(_ input: Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis.Input) async throws -> Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis.Output
    /// Get the analysis status of a repository in a CodeQL variant analysis
    ///
    /// Gets the analysis status of a repository in a CodeQL variant analysis.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}/get(code-scanning/get-variant-analysis-repo-task)`.
    func code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task(_ input: Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task.Input) async throws -> Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task.Output
    /// Get a code scanning default setup configuration
    ///
    /// Gets a code scanning default setup configuration.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/default-setup`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/default-setup/get(code-scanning/get-default-setup)`.
    func code_hyphen_scanning_sol_get_hyphen_default_hyphen_setup(_ input: Operations.code_hyphen_scanning_sol_get_hyphen_default_hyphen_setup.Input) async throws -> Operations.code_hyphen_scanning_sol_get_hyphen_default_hyphen_setup.Output
    /// Update a code scanning default setup configuration
    ///
    /// Updates a code scanning default setup configuration.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `PATCH /repos/{owner}/{repo}/code-scanning/default-setup`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/default-setup/patch(code-scanning/update-default-setup)`.
    func code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup(_ input: Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.Input) async throws -> Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.Output
    /// Upload an analysis as SARIF data
    ///
    /// Uploads SARIF data containing the results of a code scanning analysis to make the results available in a repository. For troubleshooting information, see "[Troubleshooting SARIF uploads](https://docs.github.com/code-security/code-scanning/troubleshooting-sarif)."
    ///
    /// There are two places where you can upload code scanning results.
    ///  - If you upload to a pull request, for example `--ref refs/pull/42/merge` or `--ref refs/pull/42/head`, then the results appear as alerts in a pull request check. For more information, see "[Triaging code scanning alerts in pull requests](/code-security/secure-coding/triaging-code-scanning-alerts-in-pull-requests)."
    ///  - If you upload to a branch, for example `--ref refs/heads/my-branch`, then the results appear in the **Security** tab for your repository. For more information, see "[Managing code scanning alerts for your repository](/code-security/secure-coding/managing-code-scanning-alerts-for-your-repository#viewing-the-alerts-for-a-repository)."
    ///
    /// You must compress the SARIF-formatted analysis data that you want to upload, using `gzip`, and then encode it as a Base64 format string. For example:
    ///
    /// ```
    /// gzip -c analysis-data.sarif | base64 -w0
    /// ```
    ///
    /// SARIF upload supports a maximum number of entries per the following data objects, and an analysis will be rejected if any of these objects is above its maximum value. For some objects, there are additional values over which the entries will be ignored while keeping the most important entries whenever applicable.
    /// To get the most out of your analysis when it includes data above the supported limits, try to optimize the analysis configuration. For example, for the CodeQL tool, identify and remove the most noisy queries. For more information, see "[SARIF results exceed one or more limits](https://docs.github.com/code-security/code-scanning/troubleshooting-sarif/results-exceed-limit)."
    ///
    ///
    /// | **SARIF data**                   | **Maximum values** | **Additional limits**                                                            |
    /// |----------------------------------|:------------------:|----------------------------------------------------------------------------------|
    /// | Runs per file                    |         20         |                                                                                  |
    /// | Results per run                  |       25,000       | Only the top 5,000 results will be included, prioritized by severity.            |
    /// | Rules per run                    |       25,000       |                                                                                  |
    /// | Tool extensions per run          |        100         |                                                                                  |
    /// | Thread Flow Locations per result |       10,000       | Only the top 1,000 Thread Flow Locations will be included, using prioritization. |
    /// | Location per result	             |       1,000        | Only 100 locations will be included.                                             |
    /// | Tags per rule	                   |         20         | Only 10 tags will be included.                                                   |
    ///
    ///
    /// The `202 Accepted` response includes an `id` value.
    /// You can use this ID to check the status of the upload by using it in the `/sarifs/{sarif_id}` endpoint.
    /// For more information, see "[Get information about a SARIF upload](/rest/code-scanning/code-scanning#get-information-about-a-sarif-upload)."
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// This endpoint is limited to 1,000 requests per hour for each user or app installation calling it.
    ///
    /// - Remark: HTTP `POST /repos/{owner}/{repo}/code-scanning/sarifs`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/sarifs/post(code-scanning/upload-sarif)`.
    func code_hyphen_scanning_sol_upload_hyphen_sarif(_ input: Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Input) async throws -> Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Output
    /// Get information about a SARIF upload
    ///
    /// Gets information about a SARIF upload, including the status and the URL of the analysis that was uploaded so that you can retrieve details of the analysis. For more information, see "[Get a code scanning analysis for a repository](/rest/code-scanning/code-scanning#get-a-code-scanning-analysis-for-a-repository)."
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}/get(code-scanning/get-sarif)`.
    func code_hyphen_scanning_sol_get_hyphen_sarif(_ input: Operations.code_hyphen_scanning_sol_get_hyphen_sarif.Input) async throws -> Operations.code_hyphen_scanning_sol_get_hyphen_sarif.Output
}

/// Convenience overloads for operation inputs.
extension APIProtocol {
    /// List code scanning alerts for an organization
    ///
    /// Lists code scanning alerts for the default branch for all eligible repositories in an organization. Eligible repositories are repositories that are owned by organizations that you own or for which you are a security manager. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."
    ///
    /// The authenticated user must be an owner or security manager for the organization to use this endpoint.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` or `repo`s cope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /orgs/{org}/code-scanning/alerts`.
    /// - Remark: Generated from `#/paths//orgs/{org}/code-scanning/alerts/get(code-scanning/list-alerts-for-org)`.
    public func code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org(
        path: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.Input.Path,
        query: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.Input.Query = .init(),
        headers: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.Input.Headers = .init()
    ) async throws -> Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.Output {
        try await code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org(Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// List code scanning alerts for a repository
    ///
    /// Lists code scanning alerts.
    ///
    /// The response includes a `most_recent_instance` object.
    /// This provides details of the most recent instance of this alert
    /// for the default branch (or for the specified Git reference if you used `ref` in the request).
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/alerts`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/get(code-scanning/list-alerts-for-repo)`.
    public func code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo(
        path: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo.Input.Path,
        query: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo.Input.Query = .init(),
        headers: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo.Input.Headers = .init()
    ) async throws -> Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo.Output {
        try await code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo(Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Get a code scanning alert
    ///
    /// Gets a single code scanning alert.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/get(code-scanning/get-alert)`.
    public func code_hyphen_scanning_sol_get_hyphen_alert(
        path: Operations.code_hyphen_scanning_sol_get_hyphen_alert.Input.Path,
        headers: Operations.code_hyphen_scanning_sol_get_hyphen_alert.Input.Headers = .init()
    ) async throws -> Operations.code_hyphen_scanning_sol_get_hyphen_alert.Output {
        try await code_hyphen_scanning_sol_get_hyphen_alert(Operations.code_hyphen_scanning_sol_get_hyphen_alert.Input(
            path: path,
            headers: headers
        ))
    }
    /// Update a code scanning alert
    ///
    /// Updates the status of a single code scanning alert.
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/patch(code-scanning/update-alert)`.
    public func code_hyphen_scanning_sol_update_hyphen_alert(
        path: Operations.code_hyphen_scanning_sol_update_hyphen_alert.Input.Path,
        headers: Operations.code_hyphen_scanning_sol_update_hyphen_alert.Input.Headers = .init(),
        body: Operations.code_hyphen_scanning_sol_update_hyphen_alert.Input.Body
    ) async throws -> Operations.code_hyphen_scanning_sol_update_hyphen_alert.Output {
        try await code_hyphen_scanning_sol_update_hyphen_alert(Operations.code_hyphen_scanning_sol_update_hyphen_alert.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// List instances of a code scanning alert
    ///
    /// Lists all instances of the specified code scanning alert.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances/get(code-scanning/list-alert-instances)`.
    public func code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances(
        path: Operations.code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances.Input.Path,
        query: Operations.code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances.Input.Query = .init(),
        headers: Operations.code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances.Input.Headers = .init()
    ) async throws -> Operations.code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances.Output {
        try await code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances(Operations.code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// List code scanning analyses for a repository
    ///
    /// Lists the details of all code scanning analyses for a repository,
    /// starting with the most recent.
    /// The response is paginated and you can use the `page` and `per_page` parameters
    /// to list the analyses you're interested in.
    /// By default 30 analyses are listed per page.
    ///
    /// The `rules_count` field in the response give the number of rules
    /// that were run in the analysis.
    /// For very old analyses this data is not available,
    /// and `0` is returned in this field.
    ///
    /// > [!WARNING]
    /// > **Deprecation notice:** The `tool_name` field is deprecated and will, in future, not be included in the response for this endpoint. The example response reflects this change. The tool name can now be found inside the `tool` field.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/analyses`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/get(code-scanning/list-recent-analyses)`.
    public func code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses(
        path: Operations.code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses.Input.Path,
        query: Operations.code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses.Input.Query = .init(),
        headers: Operations.code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses.Input.Headers = .init()
    ) async throws -> Operations.code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses.Output {
        try await code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses(Operations.code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Get a code scanning analysis for a repository
    ///
    /// Gets a specified code scanning analysis for a repository.
    ///
    /// The default JSON response contains fields that describe the analysis.
    /// This includes the Git reference and commit SHA to which the analysis relates,
    /// the datetime of the analysis, the name of the code scanning tool,
    /// and the number of alerts.
    ///
    /// The `rules_count` field in the default response give the number of rules
    /// that were run in the analysis.
    /// For very old analyses this data is not available,
    /// and `0` is returned in this field.
    ///
    /// This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."
    ///
    /// - **`application/sarif+json`**: Instead of returning a summary of the analysis, this endpoint returns a subset of the analysis data that was uploaded. The data is formatted as [SARIF version 2.1.0](https://docs.oasis-open.org/sarif/sarif/v2.1.0/cs01/sarif-v2.1.0-cs01.html). It also returns additional data such as the `github/alertNumber` and `github/alertUrl` properties.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/get(code-scanning/get-analysis)`.
    public func code_hyphen_scanning_sol_get_hyphen_analysis(
        path: Operations.code_hyphen_scanning_sol_get_hyphen_analysis.Input.Path,
        headers: Operations.code_hyphen_scanning_sol_get_hyphen_analysis.Input.Headers = .init()
    ) async throws -> Operations.code_hyphen_scanning_sol_get_hyphen_analysis.Output {
        try await code_hyphen_scanning_sol_get_hyphen_analysis(Operations.code_hyphen_scanning_sol_get_hyphen_analysis.Input(
            path: path,
            headers: headers
        ))
    }
    /// Delete a code scanning analysis from a repository
    ///
    /// Deletes a specified code scanning analysis from a repository.
    ///
    /// You can delete one analysis at a time.
    /// To delete a series of analyses, start with the most recent analysis and work backwards.
    /// Conceptually, the process is similar to the undo function in a text editor.
    ///
    /// When you list the analyses for a repository,
    /// one or more will be identified as deletable in the response:
    ///
    /// ```
    /// "deletable": true
    /// ```
    ///
    /// An analysis is deletable when it's the most recent in a set of analyses.
    /// Typically, a repository will have multiple sets of analyses
    /// for each enabled code scanning tool,
    /// where a set is determined by a unique combination of analysis values:
    ///
    /// * `ref`
    /// * `tool`
    /// * `category`
    ///
    /// If you attempt to delete an analysis that is not the most recent in a set,
    /// you'll get a 400 response with the message:
    ///
    /// ```
    /// Analysis specified is not deletable.
    /// ```
    ///
    /// The response from a successful `DELETE` operation provides you with
    /// two alternative URLs for deleting the next analysis in the set:
    /// `next_analysis_url` and `confirm_delete_url`.
    /// Use the `next_analysis_url` URL if you want to avoid accidentally deleting the final analysis
    /// in a set. This is a useful option if you want to preserve at least one analysis
    /// for the specified tool in your repository.
    /// Use the `confirm_delete_url` URL if you are content to remove all analyses for a tool.
    /// When you delete the last analysis in a set, the value of `next_analysis_url` and `confirm_delete_url`
    /// in the 200 response is `null`.
    ///
    /// As an example of the deletion process,
    /// let's imagine that you added a workflow that configured a particular code scanning tool
    /// to analyze the code in a repository. This tool has added 15 analyses:
    /// 10 on the default branch, and another 5 on a topic branch.
    /// You therefore have two separate sets of analyses for this tool.
    /// You've now decided that you want to remove all of the analyses for the tool.
    /// To do this you must make 15 separate deletion requests.
    /// To start, you must find an analysis that's identified as deletable.
    /// Each set of analyses always has one that's identified as deletable.
    /// Having found the deletable analysis for one of the two sets,
    /// delete this analysis and then continue deleting the next analysis in the set until they're all deleted.
    /// Then repeat the process for the second set.
    /// The procedure therefore consists of a nested loop:
    ///
    /// **Outer loop**:
    /// * List the analyses for the repository, filtered by tool.
    /// * Parse this list to find a deletable analysis. If found:
    ///
    ///   **Inner loop**:
    ///   * Delete the identified analysis.
    ///   * Parse the response for the value of `confirm_delete_url` and, if found, use this in the next iteration.
    ///
    /// The above process assumes that you want to remove all trace of the tool's analyses from the GitHub user interface, for the specified repository, and it therefore uses the `confirm_delete_url` value. Alternatively, you could use the `next_analysis_url` value, which would leave the last analysis in each set undeleted to avoid removing a tool's analysis entirely.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/delete(code-scanning/delete-analysis)`.
    public func code_hyphen_scanning_sol_delete_hyphen_analysis(
        path: Operations.code_hyphen_scanning_sol_delete_hyphen_analysis.Input.Path,
        query: Operations.code_hyphen_scanning_sol_delete_hyphen_analysis.Input.Query = .init(),
        headers: Operations.code_hyphen_scanning_sol_delete_hyphen_analysis.Input.Headers = .init()
    ) async throws -> Operations.code_hyphen_scanning_sol_delete_hyphen_analysis.Output {
        try await code_hyphen_scanning_sol_delete_hyphen_analysis(Operations.code_hyphen_scanning_sol_delete_hyphen_analysis.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// List CodeQL databases for a repository
    ///
    /// Lists the CodeQL databases that are available in a repository.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/codeql/databases`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/databases/get(code-scanning/list-codeql-databases)`.
    public func code_hyphen_scanning_sol_list_hyphen_codeql_hyphen_databases(
        path: Operations.code_hyphen_scanning_sol_list_hyphen_codeql_hyphen_databases.Input.Path,
        headers: Operations.code_hyphen_scanning_sol_list_hyphen_codeql_hyphen_databases.Input.Headers = .init()
    ) async throws -> Operations.code_hyphen_scanning_sol_list_hyphen_codeql_hyphen_databases.Output {
        try await code_hyphen_scanning_sol_list_hyphen_codeql_hyphen_databases(Operations.code_hyphen_scanning_sol_list_hyphen_codeql_hyphen_databases.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get a CodeQL database for a repository
    ///
    /// Gets a CodeQL database for a language in a repository.
    ///
    /// By default this endpoint returns JSON metadata about the CodeQL database. To
    /// download the CodeQL database binary content, set the `Accept` header of the request
    /// to [`application/zip`](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types), and make sure
    /// your HTTP client is configured to follow redirects or use the `Location` header
    /// to make a second request to get the redirect URL.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/databases/{language}/get(code-scanning/get-codeql-database)`.
    public func code_hyphen_scanning_sol_get_hyphen_codeql_hyphen_database(
        path: Operations.code_hyphen_scanning_sol_get_hyphen_codeql_hyphen_database.Input.Path,
        headers: Operations.code_hyphen_scanning_sol_get_hyphen_codeql_hyphen_database.Input.Headers = .init()
    ) async throws -> Operations.code_hyphen_scanning_sol_get_hyphen_codeql_hyphen_database.Output {
        try await code_hyphen_scanning_sol_get_hyphen_codeql_hyphen_database(Operations.code_hyphen_scanning_sol_get_hyphen_codeql_hyphen_database.Input(
            path: path,
            headers: headers
        ))
    }
    /// Create a CodeQL variant analysis
    ///
    /// Creates a new CodeQL variant analysis, which will run a CodeQL query against one or more repositories.
    ///
    /// Get started by learning more about [running CodeQL queries at scale with Multi-Repository Variant Analysis](https://docs.github.com/code-security/codeql-for-vs-code/getting-started-with-codeql-for-vs-code/running-codeql-queries-at-scale-with-multi-repository-variant-analysis).
    ///
    /// Use the `owner` and `repo` parameters in the URL to specify the controller repository that
    /// will be used for running GitHub Actions workflows and storing the results of the CodeQL variant analysis.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.
    ///
    /// - Remark: HTTP `POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/post(code-scanning/create-variant-analysis)`.
    public func code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis(
        path: Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Input.Path,
        headers: Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Input.Headers = .init(),
        body: Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Input.Body
    ) async throws -> Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Output {
        try await code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis(Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Get the summary of a CodeQL variant analysis
    ///
    /// Gets the summary of a CodeQL variant analysis.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/get(code-scanning/get-variant-analysis)`.
    public func code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis(
        path: Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis.Input.Path,
        headers: Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis.Input.Headers = .init()
    ) async throws -> Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis.Output {
        try await code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis(Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get the analysis status of a repository in a CodeQL variant analysis
    ///
    /// Gets the analysis status of a repository in a CodeQL variant analysis.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}/get(code-scanning/get-variant-analysis-repo-task)`.
    public func code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task(
        path: Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task.Input.Path,
        headers: Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task.Input.Headers = .init()
    ) async throws -> Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task.Output {
        try await code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task(Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task.Input(
            path: path,
            headers: headers
        ))
    }
    /// Get a code scanning default setup configuration
    ///
    /// Gets a code scanning default setup configuration.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/default-setup`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/default-setup/get(code-scanning/get-default-setup)`.
    public func code_hyphen_scanning_sol_get_hyphen_default_hyphen_setup(
        path: Operations.code_hyphen_scanning_sol_get_hyphen_default_hyphen_setup.Input.Path,
        headers: Operations.code_hyphen_scanning_sol_get_hyphen_default_hyphen_setup.Input.Headers = .init()
    ) async throws -> Operations.code_hyphen_scanning_sol_get_hyphen_default_hyphen_setup.Output {
        try await code_hyphen_scanning_sol_get_hyphen_default_hyphen_setup(Operations.code_hyphen_scanning_sol_get_hyphen_default_hyphen_setup.Input(
            path: path,
            headers: headers
        ))
    }
    /// Update a code scanning default setup configuration
    ///
    /// Updates a code scanning default setup configuration.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `PATCH /repos/{owner}/{repo}/code-scanning/default-setup`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/default-setup/patch(code-scanning/update-default-setup)`.
    public func code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup(
        path: Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.Input.Path,
        headers: Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.Input.Headers = .init(),
        body: Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.Input.Body
    ) async throws -> Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.Output {
        try await code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup(Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Upload an analysis as SARIF data
    ///
    /// Uploads SARIF data containing the results of a code scanning analysis to make the results available in a repository. For troubleshooting information, see "[Troubleshooting SARIF uploads](https://docs.github.com/code-security/code-scanning/troubleshooting-sarif)."
    ///
    /// There are two places where you can upload code scanning results.
    ///  - If you upload to a pull request, for example `--ref refs/pull/42/merge` or `--ref refs/pull/42/head`, then the results appear as alerts in a pull request check. For more information, see "[Triaging code scanning alerts in pull requests](/code-security/secure-coding/triaging-code-scanning-alerts-in-pull-requests)."
    ///  - If you upload to a branch, for example `--ref refs/heads/my-branch`, then the results appear in the **Security** tab for your repository. For more information, see "[Managing code scanning alerts for your repository](/code-security/secure-coding/managing-code-scanning-alerts-for-your-repository#viewing-the-alerts-for-a-repository)."
    ///
    /// You must compress the SARIF-formatted analysis data that you want to upload, using `gzip`, and then encode it as a Base64 format string. For example:
    ///
    /// ```
    /// gzip -c analysis-data.sarif | base64 -w0
    /// ```
    ///
    /// SARIF upload supports a maximum number of entries per the following data objects, and an analysis will be rejected if any of these objects is above its maximum value. For some objects, there are additional values over which the entries will be ignored while keeping the most important entries whenever applicable.
    /// To get the most out of your analysis when it includes data above the supported limits, try to optimize the analysis configuration. For example, for the CodeQL tool, identify and remove the most noisy queries. For more information, see "[SARIF results exceed one or more limits](https://docs.github.com/code-security/code-scanning/troubleshooting-sarif/results-exceed-limit)."
    ///
    ///
    /// | **SARIF data**                   | **Maximum values** | **Additional limits**                                                            |
    /// |----------------------------------|:------------------:|----------------------------------------------------------------------------------|
    /// | Runs per file                    |         20         |                                                                                  |
    /// | Results per run                  |       25,000       | Only the top 5,000 results will be included, prioritized by severity.            |
    /// | Rules per run                    |       25,000       |                                                                                  |
    /// | Tool extensions per run          |        100         |                                                                                  |
    /// | Thread Flow Locations per result |       10,000       | Only the top 1,000 Thread Flow Locations will be included, using prioritization. |
    /// | Location per result	             |       1,000        | Only 100 locations will be included.                                             |
    /// | Tags per rule	                   |         20         | Only 10 tags will be included.                                                   |
    ///
    ///
    /// The `202 Accepted` response includes an `id` value.
    /// You can use this ID to check the status of the upload by using it in the `/sarifs/{sarif_id}` endpoint.
    /// For more information, see "[Get information about a SARIF upload](/rest/code-scanning/code-scanning#get-information-about-a-sarif-upload)."
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// This endpoint is limited to 1,000 requests per hour for each user or app installation calling it.
    ///
    /// - Remark: HTTP `POST /repos/{owner}/{repo}/code-scanning/sarifs`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/sarifs/post(code-scanning/upload-sarif)`.
    public func code_hyphen_scanning_sol_upload_hyphen_sarif(
        path: Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Input.Path,
        headers: Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Input.Headers = .init(),
        body: Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Input.Body
    ) async throws -> Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Output {
        try await code_hyphen_scanning_sol_upload_hyphen_sarif(Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// Get information about a SARIF upload
    ///
    /// Gets information about a SARIF upload, including the status and the URL of the analysis that was uploaded so that you can retrieve details of the analysis. For more information, see "[Get a code scanning analysis for a repository](/rest/code-scanning/code-scanning#get-a-code-scanning-analysis-for-a-repository)."
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}/get(code-scanning/get-sarif)`.
    public func code_hyphen_scanning_sol_get_hyphen_sarif(
        path: Operations.code_hyphen_scanning_sol_get_hyphen_sarif.Input.Path,
        headers: Operations.code_hyphen_scanning_sol_get_hyphen_sarif.Input.Headers = .init()
    ) async throws -> Operations.code_hyphen_scanning_sol_get_hyphen_sarif.Output {
        try await code_hyphen_scanning_sol_get_hyphen_sarif(Operations.code_hyphen_scanning_sol_get_hyphen_sarif.Input(
            path: path,
            headers: headers
        ))
    }
}

/// Server URLs defined in the OpenAPI document.
public enum Servers {
    public static func server1() throws -> Foundation.URL {
        try Foundation.URL(
            validatingOpenAPIServerURL: "https://api.github.com",
            variables: []
        )
    }
}

/// Types generated from the components section of the OpenAPI document.
public enum Components {
    /// Types generated from the `#/components/schemas` section of the OpenAPI document.
    public enum Schemas {
        /// A GitHub user.
        ///
        /// - Remark: Generated from `#/components/schemas/simple-user`.
        public struct simple_hyphen_user: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/simple-user/name`.
            public var name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/simple-user/email`.
            public var email: Swift.String?
            /// - Remark: Generated from `#/components/schemas/simple-user/login`.
            public var login: Swift.String
            /// - Remark: Generated from `#/components/schemas/simple-user/id`.
            public var id: Swift.Int64
            /// - Remark: Generated from `#/components/schemas/simple-user/node_id`.
            public var node_id: Swift.String
            /// - Remark: Generated from `#/components/schemas/simple-user/avatar_url`.
            public var avatar_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/simple-user/gravatar_id`.
            public var gravatar_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/simple-user/url`.
            public var url: Swift.String
            /// - Remark: Generated from `#/components/schemas/simple-user/html_url`.
            public var html_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/simple-user/followers_url`.
            public var followers_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/simple-user/following_url`.
            public var following_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/simple-user/gists_url`.
            public var gists_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/simple-user/starred_url`.
            public var starred_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/simple-user/subscriptions_url`.
            public var subscriptions_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/simple-user/organizations_url`.
            public var organizations_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/simple-user/repos_url`.
            public var repos_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/simple-user/events_url`.
            public var events_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/simple-user/received_events_url`.
            public var received_events_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/simple-user/type`.
            public var _type: Swift.String
            /// - Remark: Generated from `#/components/schemas/simple-user/site_admin`.
            public var site_admin: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/simple-user/starred_at`.
            public var starred_at: Swift.String?
            /// Creates a new `simple_hyphen_user`.
            ///
            /// - Parameters:
            ///   - name:
            ///   - email:
            ///   - login:
            ///   - id:
            ///   - node_id:
            ///   - avatar_url:
            ///   - gravatar_id:
            ///   - url:
            ///   - html_url:
            ///   - followers_url:
            ///   - following_url:
            ///   - gists_url:
            ///   - starred_url:
            ///   - subscriptions_url:
            ///   - organizations_url:
            ///   - repos_url:
            ///   - events_url:
            ///   - received_events_url:
            ///   - _type:
            ///   - site_admin:
            ///   - starred_at:
            public init(
                name: Swift.String? = nil,
                email: Swift.String? = nil,
                login: Swift.String,
                id: Swift.Int64,
                node_id: Swift.String,
                avatar_url: Swift.String,
                gravatar_id: Swift.String? = nil,
                url: Swift.String,
                html_url: Swift.String,
                followers_url: Swift.String,
                following_url: Swift.String,
                gists_url: Swift.String,
                starred_url: Swift.String,
                subscriptions_url: Swift.String,
                organizations_url: Swift.String,
                repos_url: Swift.String,
                events_url: Swift.String,
                received_events_url: Swift.String,
                _type: Swift.String,
                site_admin: Swift.Bool,
                starred_at: Swift.String? = nil
            ) {
                self.name = name
                self.email = email
                self.login = login
                self.id = id
                self.node_id = node_id
                self.avatar_url = avatar_url
                self.gravatar_id = gravatar_id
                self.url = url
                self.html_url = html_url
                self.followers_url = followers_url
                self.following_url = following_url
                self.gists_url = gists_url
                self.starred_url = starred_url
                self.subscriptions_url = subscriptions_url
                self.organizations_url = organizations_url
                self.repos_url = repos_url
                self.events_url = events_url
                self.received_events_url = received_events_url
                self._type = _type
                self.site_admin = site_admin
                self.starred_at = starred_at
            }
            public enum CodingKeys: String, CodingKey {
                case name
                case email
                case login
                case id
                case node_id
                case avatar_url
                case gravatar_id
                case url
                case html_url
                case followers_url
                case following_url
                case gists_url
                case starred_url
                case subscriptions_url
                case organizations_url
                case repos_url
                case events_url
                case received_events_url
                case _type = "type"
                case site_admin
                case starred_at
            }
        }
        /// Basic Error
        ///
        /// - Remark: Generated from `#/components/schemas/basic-error`.
        public struct basic_hyphen_error: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/basic-error/message`.
            public var message: Swift.String?
            /// - Remark: Generated from `#/components/schemas/basic-error/documentation_url`.
            public var documentation_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/basic-error/url`.
            public var url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/basic-error/status`.
            public var status: Swift.String?
            /// Creates a new `basic_hyphen_error`.
            ///
            /// - Parameters:
            ///   - message:
            ///   - documentation_url:
            ///   - url:
            ///   - status:
            public init(
                message: Swift.String? = nil,
                documentation_url: Swift.String? = nil,
                url: Swift.String? = nil,
                status: Swift.String? = nil
            ) {
                self.message = message
                self.documentation_url = documentation_url
                self.url = url
                self.status = status
            }
            public enum CodingKeys: String, CodingKey {
                case message
                case documentation_url
                case url
                case status
            }
        }
        /// A GitHub user.
        ///
        /// - Remark: Generated from `#/components/schemas/nullable-simple-user`.
        public struct nullable_hyphen_simple_hyphen_user: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/nullable-simple-user/name`.
            public var name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/nullable-simple-user/email`.
            public var email: Swift.String?
            /// - Remark: Generated from `#/components/schemas/nullable-simple-user/login`.
            public var login: Swift.String
            /// - Remark: Generated from `#/components/schemas/nullable-simple-user/id`.
            public var id: Swift.Int64
            /// - Remark: Generated from `#/components/schemas/nullable-simple-user/node_id`.
            public var node_id: Swift.String
            /// - Remark: Generated from `#/components/schemas/nullable-simple-user/avatar_url`.
            public var avatar_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/nullable-simple-user/gravatar_id`.
            public var gravatar_id: Swift.String?
            /// - Remark: Generated from `#/components/schemas/nullable-simple-user/url`.
            public var url: Swift.String
            /// - Remark: Generated from `#/components/schemas/nullable-simple-user/html_url`.
            public var html_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/nullable-simple-user/followers_url`.
            public var followers_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/nullable-simple-user/following_url`.
            public var following_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/nullable-simple-user/gists_url`.
            public var gists_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/nullable-simple-user/starred_url`.
            public var starred_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/nullable-simple-user/subscriptions_url`.
            public var subscriptions_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/nullable-simple-user/organizations_url`.
            public var organizations_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/nullable-simple-user/repos_url`.
            public var repos_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/nullable-simple-user/events_url`.
            public var events_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/nullable-simple-user/received_events_url`.
            public var received_events_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/nullable-simple-user/type`.
            public var _type: Swift.String
            /// - Remark: Generated from `#/components/schemas/nullable-simple-user/site_admin`.
            public var site_admin: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/nullable-simple-user/starred_at`.
            public var starred_at: Swift.String?
            /// Creates a new `nullable_hyphen_simple_hyphen_user`.
            ///
            /// - Parameters:
            ///   - name:
            ///   - email:
            ///   - login:
            ///   - id:
            ///   - node_id:
            ///   - avatar_url:
            ///   - gravatar_id:
            ///   - url:
            ///   - html_url:
            ///   - followers_url:
            ///   - following_url:
            ///   - gists_url:
            ///   - starred_url:
            ///   - subscriptions_url:
            ///   - organizations_url:
            ///   - repos_url:
            ///   - events_url:
            ///   - received_events_url:
            ///   - _type:
            ///   - site_admin:
            ///   - starred_at:
            public init(
                name: Swift.String? = nil,
                email: Swift.String? = nil,
                login: Swift.String,
                id: Swift.Int64,
                node_id: Swift.String,
                avatar_url: Swift.String,
                gravatar_id: Swift.String? = nil,
                url: Swift.String,
                html_url: Swift.String,
                followers_url: Swift.String,
                following_url: Swift.String,
                gists_url: Swift.String,
                starred_url: Swift.String,
                subscriptions_url: Swift.String,
                organizations_url: Swift.String,
                repos_url: Swift.String,
                events_url: Swift.String,
                received_events_url: Swift.String,
                _type: Swift.String,
                site_admin: Swift.Bool,
                starred_at: Swift.String? = nil
            ) {
                self.name = name
                self.email = email
                self.login = login
                self.id = id
                self.node_id = node_id
                self.avatar_url = avatar_url
                self.gravatar_id = gravatar_id
                self.url = url
                self.html_url = html_url
                self.followers_url = followers_url
                self.following_url = following_url
                self.gists_url = gists_url
                self.starred_url = starred_url
                self.subscriptions_url = subscriptions_url
                self.organizations_url = organizations_url
                self.repos_url = repos_url
                self.events_url = events_url
                self.received_events_url = received_events_url
                self._type = _type
                self.site_admin = site_admin
                self.starred_at = starred_at
            }
            public enum CodingKeys: String, CodingKey {
                case name
                case email
                case login
                case id
                case node_id
                case avatar_url
                case gravatar_id
                case url
                case html_url
                case followers_url
                case following_url
                case gists_url
                case starred_url
                case subscriptions_url
                case organizations_url
                case repos_url
                case events_url
                case received_events_url
                case _type = "type"
                case site_admin
                case starred_at
            }
        }
        /// Scim Error
        ///
        /// - Remark: Generated from `#/components/schemas/scim-error`.
        public struct scim_hyphen_error: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/scim-error/message`.
            public var message: Swift.String?
            /// - Remark: Generated from `#/components/schemas/scim-error/documentation_url`.
            public var documentation_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/scim-error/detail`.
            public var detail: Swift.String?
            /// - Remark: Generated from `#/components/schemas/scim-error/status`.
            public var status: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/scim-error/scimType`.
            public var scimType: Swift.String?
            /// - Remark: Generated from `#/components/schemas/scim-error/schemas`.
            public var schemas: [Swift.String]?
            /// Creates a new `scim_hyphen_error`.
            ///
            /// - Parameters:
            ///   - message:
            ///   - documentation_url:
            ///   - detail:
            ///   - status:
            ///   - scimType:
            ///   - schemas:
            public init(
                message: Swift.String? = nil,
                documentation_url: Swift.String? = nil,
                detail: Swift.String? = nil,
                status: Swift.Int? = nil,
                scimType: Swift.String? = nil,
                schemas: [Swift.String]? = nil
            ) {
                self.message = message
                self.documentation_url = documentation_url
                self.detail = detail
                self.status = status
                self.scimType = scimType
                self.schemas = schemas
            }
            public enum CodingKeys: String, CodingKey {
                case message
                case documentation_url
                case detail
                case status
                case scimType
                case schemas
            }
        }
        /// The security alert number.
        ///
        /// - Remark: Generated from `#/components/schemas/alert-number`.
        public typealias alert_hyphen_number = Swift.Int
        /// The REST API URL of the alert resource.
        ///
        /// - Remark: Generated from `#/components/schemas/alert-url`.
        public typealias alert_hyphen_url = Swift.String
        /// The GitHub URL of the alert resource.
        ///
        /// - Remark: Generated from `#/components/schemas/alert-html-url`.
        public typealias alert_hyphen_html_hyphen_url = Swift.String
        /// The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
        ///
        /// - Remark: Generated from `#/components/schemas/alert-created-at`.
        public typealias alert_hyphen_created_hyphen_at = Foundation.Date
        /// The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
        ///
        /// - Remark: Generated from `#/components/schemas/alert-updated-at`.
        public typealias alert_hyphen_updated_hyphen_at = Foundation.Date
        /// The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
        ///
        /// - Remark: Generated from `#/components/schemas/alert-dismissed-at`.
        public typealias alert_hyphen_dismissed_hyphen_at = Foundation.Date
        /// The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
        ///
        /// - Remark: Generated from `#/components/schemas/alert-fixed-at`.
        public typealias alert_hyphen_fixed_hyphen_at = Foundation.Date
        /// A GitHub repository.
        ///
        /// - Remark: Generated from `#/components/schemas/simple-repository`.
        public struct simple_hyphen_repository: Codable, Hashable, Sendable {
            /// A unique identifier of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/id`.
            public var id: Swift.Int64
            /// The GraphQL identifier of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/node_id`.
            public var node_id: Swift.String
            /// The name of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/name`.
            public var name: Swift.String
            /// The full, globally unique, name of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/full_name`.
            public var full_name: Swift.String
            /// - Remark: Generated from `#/components/schemas/simple-repository/owner`.
            public var owner: Components.Schemas.simple_hyphen_user
            /// Whether the repository is private.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/private`.
            public var _private: Swift.Bool
            /// The URL to view the repository on GitHub.com.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/html_url`.
            public var html_url: Swift.String
            /// The repository description.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/description`.
            public var description: Swift.String?
            /// Whether the repository is a fork.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/fork`.
            public var fork: Swift.Bool
            /// The URL to get more information about the repository from the GitHub API.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/url`.
            public var url: Swift.String
            /// A template for the API URL to download the repository as an archive.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/archive_url`.
            public var archive_url: Swift.String
            /// A template for the API URL to list the available assignees for issues in the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/assignees_url`.
            public var assignees_url: Swift.String
            /// A template for the API URL to create or retrieve a raw Git blob in the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/blobs_url`.
            public var blobs_url: Swift.String
            /// A template for the API URL to get information about branches in the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/branches_url`.
            public var branches_url: Swift.String
            /// A template for the API URL to get information about collaborators of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/collaborators_url`.
            public var collaborators_url: Swift.String
            /// A template for the API URL to get information about comments on the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/comments_url`.
            public var comments_url: Swift.String
            /// A template for the API URL to get information about commits on the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/commits_url`.
            public var commits_url: Swift.String
            /// A template for the API URL to compare two commits or refs.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/compare_url`.
            public var compare_url: Swift.String
            /// A template for the API URL to get the contents of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/contents_url`.
            public var contents_url: Swift.String
            /// A template for the API URL to list the contributors to the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/contributors_url`.
            public var contributors_url: Swift.String
            /// The API URL to list the deployments of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/deployments_url`.
            public var deployments_url: Swift.String
            /// The API URL to list the downloads on the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/downloads_url`.
            public var downloads_url: Swift.String
            /// The API URL to list the events of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/events_url`.
            public var events_url: Swift.String
            /// The API URL to list the forks of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/forks_url`.
            public var forks_url: Swift.String
            /// A template for the API URL to get information about Git commits of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/git_commits_url`.
            public var git_commits_url: Swift.String
            /// A template for the API URL to get information about Git refs of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/git_refs_url`.
            public var git_refs_url: Swift.String
            /// A template for the API URL to get information about Git tags of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/git_tags_url`.
            public var git_tags_url: Swift.String
            /// A template for the API URL to get information about issue comments on the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/issue_comment_url`.
            public var issue_comment_url: Swift.String
            /// A template for the API URL to get information about issue events on the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/issue_events_url`.
            public var issue_events_url: Swift.String
            /// A template for the API URL to get information about issues on the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/issues_url`.
            public var issues_url: Swift.String
            /// A template for the API URL to get information about deploy keys on the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/keys_url`.
            public var keys_url: Swift.String
            /// A template for the API URL to get information about labels of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/labels_url`.
            public var labels_url: Swift.String
            /// The API URL to get information about the languages of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/languages_url`.
            public var languages_url: Swift.String
            /// The API URL to merge branches in the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/merges_url`.
            public var merges_url: Swift.String
            /// A template for the API URL to get information about milestones of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/milestones_url`.
            public var milestones_url: Swift.String
            /// A template for the API URL to get information about notifications on the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/notifications_url`.
            public var notifications_url: Swift.String
            /// A template for the API URL to get information about pull requests on the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/pulls_url`.
            public var pulls_url: Swift.String
            /// A template for the API URL to get information about releases on the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/releases_url`.
            public var releases_url: Swift.String
            /// The API URL to list the stargazers on the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/stargazers_url`.
            public var stargazers_url: Swift.String
            /// A template for the API URL to get information about statuses of a commit.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/statuses_url`.
            public var statuses_url: Swift.String
            /// The API URL to list the subscribers on the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/subscribers_url`.
            public var subscribers_url: Swift.String
            /// The API URL to subscribe to notifications for this repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/subscription_url`.
            public var subscription_url: Swift.String
            /// The API URL to get information about tags on the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/tags_url`.
            public var tags_url: Swift.String
            /// The API URL to list the teams on the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/teams_url`.
            public var teams_url: Swift.String
            /// A template for the API URL to create or retrieve a raw Git tree of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/trees_url`.
            public var trees_url: Swift.String
            /// The API URL to list the hooks on the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-repository/hooks_url`.
            public var hooks_url: Swift.String
            /// Creates a new `simple_hyphen_repository`.
            ///
            /// - Parameters:
            ///   - id: A unique identifier of the repository.
            ///   - node_id: The GraphQL identifier of the repository.
            ///   - name: The name of the repository.
            ///   - full_name: The full, globally unique, name of the repository.
            ///   - owner:
            ///   - _private: Whether the repository is private.
            ///   - html_url: The URL to view the repository on GitHub.com.
            ///   - description: The repository description.
            ///   - fork: Whether the repository is a fork.
            ///   - url: The URL to get more information about the repository from the GitHub API.
            ///   - archive_url: A template for the API URL to download the repository as an archive.
            ///   - assignees_url: A template for the API URL to list the available assignees for issues in the repository.
            ///   - blobs_url: A template for the API URL to create or retrieve a raw Git blob in the repository.
            ///   - branches_url: A template for the API URL to get information about branches in the repository.
            ///   - collaborators_url: A template for the API URL to get information about collaborators of the repository.
            ///   - comments_url: A template for the API URL to get information about comments on the repository.
            ///   - commits_url: A template for the API URL to get information about commits on the repository.
            ///   - compare_url: A template for the API URL to compare two commits or refs.
            ///   - contents_url: A template for the API URL to get the contents of the repository.
            ///   - contributors_url: A template for the API URL to list the contributors to the repository.
            ///   - deployments_url: The API URL to list the deployments of the repository.
            ///   - downloads_url: The API URL to list the downloads on the repository.
            ///   - events_url: The API URL to list the events of the repository.
            ///   - forks_url: The API URL to list the forks of the repository.
            ///   - git_commits_url: A template for the API URL to get information about Git commits of the repository.
            ///   - git_refs_url: A template for the API URL to get information about Git refs of the repository.
            ///   - git_tags_url: A template for the API URL to get information about Git tags of the repository.
            ///   - issue_comment_url: A template for the API URL to get information about issue comments on the repository.
            ///   - issue_events_url: A template for the API URL to get information about issue events on the repository.
            ///   - issues_url: A template for the API URL to get information about issues on the repository.
            ///   - keys_url: A template for the API URL to get information about deploy keys on the repository.
            ///   - labels_url: A template for the API URL to get information about labels of the repository.
            ///   - languages_url: The API URL to get information about the languages of the repository.
            ///   - merges_url: The API URL to merge branches in the repository.
            ///   - milestones_url: A template for the API URL to get information about milestones of the repository.
            ///   - notifications_url: A template for the API URL to get information about notifications on the repository.
            ///   - pulls_url: A template for the API URL to get information about pull requests on the repository.
            ///   - releases_url: A template for the API URL to get information about releases on the repository.
            ///   - stargazers_url: The API URL to list the stargazers on the repository.
            ///   - statuses_url: A template for the API URL to get information about statuses of a commit.
            ///   - subscribers_url: The API URL to list the subscribers on the repository.
            ///   - subscription_url: The API URL to subscribe to notifications for this repository.
            ///   - tags_url: The API URL to get information about tags on the repository.
            ///   - teams_url: The API URL to list the teams on the repository.
            ///   - trees_url: A template for the API URL to create or retrieve a raw Git tree of the repository.
            ///   - hooks_url: The API URL to list the hooks on the repository.
            public init(
                id: Swift.Int64,
                node_id: Swift.String,
                name: Swift.String,
                full_name: Swift.String,
                owner: Components.Schemas.simple_hyphen_user,
                _private: Swift.Bool,
                html_url: Swift.String,
                description: Swift.String? = nil,
                fork: Swift.Bool,
                url: Swift.String,
                archive_url: Swift.String,
                assignees_url: Swift.String,
                blobs_url: Swift.String,
                branches_url: Swift.String,
                collaborators_url: Swift.String,
                comments_url: Swift.String,
                commits_url: Swift.String,
                compare_url: Swift.String,
                contents_url: Swift.String,
                contributors_url: Swift.String,
                deployments_url: Swift.String,
                downloads_url: Swift.String,
                events_url: Swift.String,
                forks_url: Swift.String,
                git_commits_url: Swift.String,
                git_refs_url: Swift.String,
                git_tags_url: Swift.String,
                issue_comment_url: Swift.String,
                issue_events_url: Swift.String,
                issues_url: Swift.String,
                keys_url: Swift.String,
                labels_url: Swift.String,
                languages_url: Swift.String,
                merges_url: Swift.String,
                milestones_url: Swift.String,
                notifications_url: Swift.String,
                pulls_url: Swift.String,
                releases_url: Swift.String,
                stargazers_url: Swift.String,
                statuses_url: Swift.String,
                subscribers_url: Swift.String,
                subscription_url: Swift.String,
                tags_url: Swift.String,
                teams_url: Swift.String,
                trees_url: Swift.String,
                hooks_url: Swift.String
            ) {
                self.id = id
                self.node_id = node_id
                self.name = name
                self.full_name = full_name
                self.owner = owner
                self._private = _private
                self.html_url = html_url
                self.description = description
                self.fork = fork
                self.url = url
                self.archive_url = archive_url
                self.assignees_url = assignees_url
                self.blobs_url = blobs_url
                self.branches_url = branches_url
                self.collaborators_url = collaborators_url
                self.comments_url = comments_url
                self.commits_url = commits_url
                self.compare_url = compare_url
                self.contents_url = contents_url
                self.contributors_url = contributors_url
                self.deployments_url = deployments_url
                self.downloads_url = downloads_url
                self.events_url = events_url
                self.forks_url = forks_url
                self.git_commits_url = git_commits_url
                self.git_refs_url = git_refs_url
                self.git_tags_url = git_tags_url
                self.issue_comment_url = issue_comment_url
                self.issue_events_url = issue_events_url
                self.issues_url = issues_url
                self.keys_url = keys_url
                self.labels_url = labels_url
                self.languages_url = languages_url
                self.merges_url = merges_url
                self.milestones_url = milestones_url
                self.notifications_url = notifications_url
                self.pulls_url = pulls_url
                self.releases_url = releases_url
                self.stargazers_url = stargazers_url
                self.statuses_url = statuses_url
                self.subscribers_url = subscribers_url
                self.subscription_url = subscription_url
                self.tags_url = tags_url
                self.teams_url = teams_url
                self.trees_url = trees_url
                self.hooks_url = hooks_url
            }
            public enum CodingKeys: String, CodingKey {
                case id
                case node_id
                case name
                case full_name
                case owner
                case _private = "private"
                case html_url
                case description
                case fork
                case url
                case archive_url
                case assignees_url
                case blobs_url
                case branches_url
                case collaborators_url
                case comments_url
                case commits_url
                case compare_url
                case contents_url
                case contributors_url
                case deployments_url
                case downloads_url
                case events_url
                case forks_url
                case git_commits_url
                case git_refs_url
                case git_tags_url
                case issue_comment_url
                case issue_events_url
                case issues_url
                case keys_url
                case labels_url
                case languages_url
                case merges_url
                case milestones_url
                case notifications_url
                case pulls_url
                case releases_url
                case stargazers_url
                case statuses_url
                case subscribers_url
                case subscription_url
                case tags_url
                case teams_url
                case trees_url
                case hooks_url
            }
        }
        /// An object without any properties.
        ///
        /// - Remark: Generated from `#/components/schemas/empty-object`.
        public struct empty_hyphen_object: Codable, Hashable, Sendable {
            /// Creates a new `empty_hyphen_object`.
            public init() {}
            public init(from decoder: any Decoder) throws {
                try decoder.ensureNoAdditionalProperties(knownKeys: [])
            }
        }
        /// The name of the tool used to generate the code scanning analysis.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-analysis-tool-name`.
        public typealias code_hyphen_scanning_hyphen_analysis_hyphen_tool_hyphen_name = Swift.String
        /// The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-analysis-tool-guid`.
        public typealias code_hyphen_scanning_hyphen_analysis_hyphen_tool_hyphen_guid = Swift.String
        /// State of a code scanning alert.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-alert-state-query`.
        @frozen public enum code_hyphen_scanning_hyphen_alert_hyphen_state_hyphen_query: String, Codable, Hashable, Sendable {
            case open = "open"
            case closed = "closed"
            case dismissed = "dismissed"
            case fixed = "fixed"
        }
        /// Severity of a code scanning alert.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-alert-severity`.
        @frozen public enum code_hyphen_scanning_hyphen_alert_hyphen_severity: String, Codable, Hashable, Sendable {
            case critical = "critical"
            case high = "high"
            case medium = "medium"
            case low = "low"
            case warning = "warning"
            case note = "note"
            case error = "error"
        }
        /// The REST API URL for fetching the list of instances for an alert.
        ///
        /// - Remark: Generated from `#/components/schemas/alert-instances-url`.
        public typealias alert_hyphen_instances_hyphen_url = Swift.String
        /// State of a code scanning alert.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-alert-state`.
        @frozen public enum code_hyphen_scanning_hyphen_alert_hyphen_state: String, Codable, Hashable, Sendable {
            case open = "open"
            case dismissed = "dismissed"
            case fixed = "fixed"
        }
        /// **Required when the state is dismissed.** The reason for dismissing or closing the alert.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-alert-dismissed-reason`.
        @frozen public enum code_hyphen_scanning_hyphen_alert_hyphen_dismissed_hyphen_reason: String, Codable, Hashable, Sendable {
            case false_space_positive = "false positive"
            case won_apos_t_space_fix = "won't fix"
            case used_space_in_space_tests = "used in tests"
        }
        /// The dismissal comment associated with the dismissal of the alert.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-alert-dismissed-comment`.
        public typealias code_hyphen_scanning_hyphen_alert_hyphen_dismissed_hyphen_comment = Swift.String
        /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule-summary`.
        public struct code_hyphen_scanning_hyphen_alert_hyphen_rule_hyphen_summary: Codable, Hashable, Sendable {
            /// A unique identifier for the rule used to detect the alert.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule-summary/id`.
            public var id: Swift.String?
            /// The name of the rule used to detect the alert.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule-summary/name`.
            public var name: Swift.String?
            /// The severity of the alert.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule-summary/severity`.
            @frozen public enum severityPayload: String, Codable, Hashable, Sendable {
                case none = "none"
                case note = "note"
                case warning = "warning"
                case error = "error"
            }
            /// The severity of the alert.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule-summary/severity`.
            public var severity: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_rule_hyphen_summary.severityPayload?
            /// The security severity of the alert.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule-summary/security_severity_level`.
            @frozen public enum security_severity_levelPayload: String, Codable, Hashable, Sendable {
                case low = "low"
                case medium = "medium"
                case high = "high"
                case critical = "critical"
            }
            /// The security severity of the alert.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule-summary/security_severity_level`.
            public var security_severity_level: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_rule_hyphen_summary.security_severity_levelPayload?
            /// A short description of the rule used to detect the alert.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule-summary/description`.
            public var description: Swift.String?
            /// A description of the rule used to detect the alert.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule-summary/full_description`.
            public var full_description: Swift.String?
            /// A set of tags applicable for the rule.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule-summary/tags`.
            public var tags: [Swift.String]?
            /// Detailed documentation for the rule as GitHub Flavored Markdown.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule-summary/help`.
            public var help: Swift.String?
            /// A link to the documentation for the rule used to detect the alert.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule-summary/help_uri`.
            public var help_uri: Swift.String?
            /// Creates a new `code_hyphen_scanning_hyphen_alert_hyphen_rule_hyphen_summary`.
            ///
            /// - Parameters:
            ///   - id: A unique identifier for the rule used to detect the alert.
            ///   - name: The name of the rule used to detect the alert.
            ///   - severity: The severity of the alert.
            ///   - security_severity_level: The security severity of the alert.
            ///   - description: A short description of the rule used to detect the alert.
            ///   - full_description: A description of the rule used to detect the alert.
            ///   - tags: A set of tags applicable for the rule.
            ///   - help: Detailed documentation for the rule as GitHub Flavored Markdown.
            ///   - help_uri: A link to the documentation for the rule used to detect the alert.
            public init(
                id: Swift.String? = nil,
                name: Swift.String? = nil,
                severity: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_rule_hyphen_summary.severityPayload? = nil,
                security_severity_level: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_rule_hyphen_summary.security_severity_levelPayload? = nil,
                description: Swift.String? = nil,
                full_description: Swift.String? = nil,
                tags: [Swift.String]? = nil,
                help: Swift.String? = nil,
                help_uri: Swift.String? = nil
            ) {
                self.id = id
                self.name = name
                self.severity = severity
                self.security_severity_level = security_severity_level
                self.description = description
                self.full_description = full_description
                self.tags = tags
                self.help = help
                self.help_uri = help_uri
            }
            public enum CodingKeys: String, CodingKey {
                case id
                case name
                case severity
                case security_severity_level
                case description
                case full_description
                case tags
                case help
                case help_uri
            }
        }
        /// The version of the tool used to generate the code scanning analysis.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-analysis-tool-version`.
        public typealias code_hyphen_scanning_hyphen_analysis_hyphen_tool_hyphen_version = Swift.String
        /// - Remark: Generated from `#/components/schemas/code-scanning-analysis-tool`.
        public struct code_hyphen_scanning_hyphen_analysis_hyphen_tool: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/code-scanning-analysis-tool/name`.
            public var name: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_tool_hyphen_name?
            /// - Remark: Generated from `#/components/schemas/code-scanning-analysis-tool/version`.
            public var version: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_tool_hyphen_version?
            /// - Remark: Generated from `#/components/schemas/code-scanning-analysis-tool/guid`.
            public var guid: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_tool_hyphen_guid?
            /// Creates a new `code_hyphen_scanning_hyphen_analysis_hyphen_tool`.
            ///
            /// - Parameters:
            ///   - name:
            ///   - version:
            ///   - guid:
            public init(
                name: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_tool_hyphen_name? = nil,
                version: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_tool_hyphen_version? = nil,
                guid: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_tool_hyphen_guid? = nil
            ) {
                self.name = name
                self.version = version
                self.guid = guid
            }
            public enum CodingKeys: String, CodingKey {
                case name
                case version
                case guid
            }
        }
        /// The Git reference, formatted as `refs/pull/<number>/merge`, `refs/pull/<number>/head`,
        /// `refs/heads/<branch name>` or simply `<branch name>`.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-ref`.
        public typealias code_hyphen_scanning_hyphen_ref = Swift.String
        /// Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-analysis-analysis-key`.
        public typealias code_hyphen_scanning_hyphen_analysis_hyphen_analysis_hyphen_key = Swift.String
        /// Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-alert-environment`.
        public typealias code_hyphen_scanning_hyphen_alert_hyphen_environment = Swift.String
        /// Identifies the configuration under which the analysis was executed. Used to distinguish between multiple analyses for the same tool and commit, but performed on different languages or different parts of the code.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-analysis-category`.
        public typealias code_hyphen_scanning_hyphen_analysis_hyphen_category = Swift.String
        /// Describe a region within a file for the alert.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-alert-location`.
        public struct code_hyphen_scanning_hyphen_alert_hyphen_location: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-location/path`.
            public var path: Swift.String?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-location/start_line`.
            public var start_line: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-location/end_line`.
            public var end_line: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-location/start_column`.
            public var start_column: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-location/end_column`.
            public var end_column: Swift.Int?
            /// Creates a new `code_hyphen_scanning_hyphen_alert_hyphen_location`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - start_line:
            ///   - end_line:
            ///   - start_column:
            ///   - end_column:
            public init(
                path: Swift.String? = nil,
                start_line: Swift.Int? = nil,
                end_line: Swift.Int? = nil,
                start_column: Swift.Int? = nil,
                end_column: Swift.Int? = nil
            ) {
                self.path = path
                self.start_line = start_line
                self.end_line = end_line
                self.start_column = start_column
                self.end_column = end_column
            }
            public enum CodingKeys: String, CodingKey {
                case path
                case start_line
                case end_line
                case start_column
                case end_column
            }
        }
        /// A classification of the file. For example to identify it as generated.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-alert-classification`.
        @frozen public enum code_hyphen_scanning_hyphen_alert_hyphen_classification: String, Codable, Hashable, Sendable {
            case source = "source"
            case generated = "generated"
            case test = "test"
            case library = "library"
        }
        /// - Remark: Generated from `#/components/schemas/code-scanning-alert-instance`.
        public struct code_hyphen_scanning_hyphen_alert_hyphen_instance: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-instance/ref`.
            public var ref: Components.Schemas.code_hyphen_scanning_hyphen_ref?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-instance/analysis_key`.
            public var analysis_key: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_analysis_hyphen_key?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-instance/environment`.
            public var environment: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_environment?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-instance/category`.
            public var category: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_category?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-instance/state`.
            public var state: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_state?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-instance/commit_sha`.
            public var commit_sha: Swift.String?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-instance/message`.
            public struct messagePayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/code-scanning-alert-instance/message/text`.
                public var text: Swift.String?
                /// Creates a new `messagePayload`.
                ///
                /// - Parameters:
                ///   - text:
                public init(text: Swift.String? = nil) {
                    self.text = text
                }
                public enum CodingKeys: String, CodingKey {
                    case text
                }
            }
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-instance/message`.
            public var message: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_instance.messagePayload?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-instance/location`.
            public var location: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_location?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-instance/html_url`.
            public var html_url: Swift.String?
            /// Classifications that have been applied to the file that triggered the alert.
            /// For example identifying it as documentation, or a generated file.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-instance/classifications`.
            public var classifications: [Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_classification]?
            /// Creates a new `code_hyphen_scanning_hyphen_alert_hyphen_instance`.
            ///
            /// - Parameters:
            ///   - ref:
            ///   - analysis_key:
            ///   - environment:
            ///   - category:
            ///   - state:
            ///   - commit_sha:
            ///   - message:
            ///   - location:
            ///   - html_url:
            ///   - classifications: Classifications that have been applied to the file that triggered the alert.
            public init(
                ref: Components.Schemas.code_hyphen_scanning_hyphen_ref? = nil,
                analysis_key: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_analysis_hyphen_key? = nil,
                environment: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_environment? = nil,
                category: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_category? = nil,
                state: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_state? = nil,
                commit_sha: Swift.String? = nil,
                message: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_instance.messagePayload? = nil,
                location: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_location? = nil,
                html_url: Swift.String? = nil,
                classifications: [Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_classification]? = nil
            ) {
                self.ref = ref
                self.analysis_key = analysis_key
                self.environment = environment
                self.category = category
                self.state = state
                self.commit_sha = commit_sha
                self.message = message
                self.location = location
                self.html_url = html_url
                self.classifications = classifications
            }
            public enum CodingKeys: String, CodingKey {
                case ref
                case analysis_key
                case environment
                case category
                case state
                case commit_sha
                case message
                case location
                case html_url
                case classifications
            }
        }
        /// - Remark: Generated from `#/components/schemas/code-scanning-organization-alert-items`.
        public struct code_hyphen_scanning_hyphen_organization_hyphen_alert_hyphen_items: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/code-scanning-organization-alert-items/number`.
            public var number: Components.Schemas.alert_hyphen_number
            /// - Remark: Generated from `#/components/schemas/code-scanning-organization-alert-items/created_at`.
            public var created_at: Components.Schemas.alert_hyphen_created_hyphen_at
            /// - Remark: Generated from `#/components/schemas/code-scanning-organization-alert-items/updated_at`.
            public var updated_at: Components.Schemas.alert_hyphen_updated_hyphen_at?
            /// - Remark: Generated from `#/components/schemas/code-scanning-organization-alert-items/url`.
            public var url: Components.Schemas.alert_hyphen_url
            /// - Remark: Generated from `#/components/schemas/code-scanning-organization-alert-items/html_url`.
            public var html_url: Components.Schemas.alert_hyphen_html_hyphen_url
            /// - Remark: Generated from `#/components/schemas/code-scanning-organization-alert-items/instances_url`.
            public var instances_url: Components.Schemas.alert_hyphen_instances_hyphen_url
            /// - Remark: Generated from `#/components/schemas/code-scanning-organization-alert-items/state`.
            public var state: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_state
            /// - Remark: Generated from `#/components/schemas/code-scanning-organization-alert-items/fixed_at`.
            public var fixed_at: Components.Schemas.alert_hyphen_fixed_hyphen_at?
            /// - Remark: Generated from `#/components/schemas/code-scanning-organization-alert-items/dismissed_by`.
            public var dismissed_by: Components.Schemas.nullable_hyphen_simple_hyphen_user?
            /// - Remark: Generated from `#/components/schemas/code-scanning-organization-alert-items/dismissed_at`.
            public var dismissed_at: Components.Schemas.alert_hyphen_dismissed_hyphen_at?
            /// - Remark: Generated from `#/components/schemas/code-scanning-organization-alert-items/dismissed_reason`.
            public var dismissed_reason: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_dismissed_hyphen_reason?
            /// - Remark: Generated from `#/components/schemas/code-scanning-organization-alert-items/dismissed_comment`.
            public var dismissed_comment: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_dismissed_hyphen_comment?
            /// - Remark: Generated from `#/components/schemas/code-scanning-organization-alert-items/rule`.
            public var rule: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_rule_hyphen_summary
            /// - Remark: Generated from `#/components/schemas/code-scanning-organization-alert-items/tool`.
            public var tool: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_tool
            /// - Remark: Generated from `#/components/schemas/code-scanning-organization-alert-items/most_recent_instance`.
            public var most_recent_instance: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_instance
            /// - Remark: Generated from `#/components/schemas/code-scanning-organization-alert-items/repository`.
            public var repository: Components.Schemas.simple_hyphen_repository
            /// Creates a new `code_hyphen_scanning_hyphen_organization_hyphen_alert_hyphen_items`.
            ///
            /// - Parameters:
            ///   - number:
            ///   - created_at:
            ///   - updated_at:
            ///   - url:
            ///   - html_url:
            ///   - instances_url:
            ///   - state:
            ///   - fixed_at:
            ///   - dismissed_by:
            ///   - dismissed_at:
            ///   - dismissed_reason:
            ///   - dismissed_comment:
            ///   - rule:
            ///   - tool:
            ///   - most_recent_instance:
            ///   - repository:
            public init(
                number: Components.Schemas.alert_hyphen_number,
                created_at: Components.Schemas.alert_hyphen_created_hyphen_at,
                updated_at: Components.Schemas.alert_hyphen_updated_hyphen_at? = nil,
                url: Components.Schemas.alert_hyphen_url,
                html_url: Components.Schemas.alert_hyphen_html_hyphen_url,
                instances_url: Components.Schemas.alert_hyphen_instances_hyphen_url,
                state: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_state,
                fixed_at: Components.Schemas.alert_hyphen_fixed_hyphen_at? = nil,
                dismissed_by: Components.Schemas.nullable_hyphen_simple_hyphen_user? = nil,
                dismissed_at: Components.Schemas.alert_hyphen_dismissed_hyphen_at? = nil,
                dismissed_reason: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_dismissed_hyphen_reason? = nil,
                dismissed_comment: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_dismissed_hyphen_comment? = nil,
                rule: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_rule_hyphen_summary,
                tool: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_tool,
                most_recent_instance: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_instance,
                repository: Components.Schemas.simple_hyphen_repository
            ) {
                self.number = number
                self.created_at = created_at
                self.updated_at = updated_at
                self.url = url
                self.html_url = html_url
                self.instances_url = instances_url
                self.state = state
                self.fixed_at = fixed_at
                self.dismissed_by = dismissed_by
                self.dismissed_at = dismissed_at
                self.dismissed_reason = dismissed_reason
                self.dismissed_comment = dismissed_comment
                self.rule = rule
                self.tool = tool
                self.most_recent_instance = most_recent_instance
                self.repository = repository
            }
            public enum CodingKeys: String, CodingKey {
                case number
                case created_at
                case updated_at
                case url
                case html_url
                case instances_url
                case state
                case fixed_at
                case dismissed_by
                case dismissed_at
                case dismissed_reason
                case dismissed_comment
                case rule
                case tool
                case most_recent_instance
                case repository
            }
        }
        /// - Remark: Generated from `#/components/schemas/code-scanning-alert-items`.
        public struct code_hyphen_scanning_hyphen_alert_hyphen_items: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-items/number`.
            public var number: Components.Schemas.alert_hyphen_number
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-items/created_at`.
            public var created_at: Components.Schemas.alert_hyphen_created_hyphen_at
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-items/updated_at`.
            public var updated_at: Components.Schemas.alert_hyphen_updated_hyphen_at?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-items/url`.
            public var url: Components.Schemas.alert_hyphen_url
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-items/html_url`.
            public var html_url: Components.Schemas.alert_hyphen_html_hyphen_url
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-items/instances_url`.
            public var instances_url: Components.Schemas.alert_hyphen_instances_hyphen_url
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-items/state`.
            public var state: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_state
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-items/fixed_at`.
            public var fixed_at: Components.Schemas.alert_hyphen_fixed_hyphen_at?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-items/dismissed_by`.
            public var dismissed_by: Components.Schemas.nullable_hyphen_simple_hyphen_user?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-items/dismissed_at`.
            public var dismissed_at: Components.Schemas.alert_hyphen_dismissed_hyphen_at?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-items/dismissed_reason`.
            public var dismissed_reason: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_dismissed_hyphen_reason?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-items/dismissed_comment`.
            public var dismissed_comment: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_dismissed_hyphen_comment?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-items/rule`.
            public var rule: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_rule_hyphen_summary
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-items/tool`.
            public var tool: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_tool
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-items/most_recent_instance`.
            public var most_recent_instance: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_instance
            /// Creates a new `code_hyphen_scanning_hyphen_alert_hyphen_items`.
            ///
            /// - Parameters:
            ///   - number:
            ///   - created_at:
            ///   - updated_at:
            ///   - url:
            ///   - html_url:
            ///   - instances_url:
            ///   - state:
            ///   - fixed_at:
            ///   - dismissed_by:
            ///   - dismissed_at:
            ///   - dismissed_reason:
            ///   - dismissed_comment:
            ///   - rule:
            ///   - tool:
            ///   - most_recent_instance:
            public init(
                number: Components.Schemas.alert_hyphen_number,
                created_at: Components.Schemas.alert_hyphen_created_hyphen_at,
                updated_at: Components.Schemas.alert_hyphen_updated_hyphen_at? = nil,
                url: Components.Schemas.alert_hyphen_url,
                html_url: Components.Schemas.alert_hyphen_html_hyphen_url,
                instances_url: Components.Schemas.alert_hyphen_instances_hyphen_url,
                state: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_state,
                fixed_at: Components.Schemas.alert_hyphen_fixed_hyphen_at? = nil,
                dismissed_by: Components.Schemas.nullable_hyphen_simple_hyphen_user? = nil,
                dismissed_at: Components.Schemas.alert_hyphen_dismissed_hyphen_at? = nil,
                dismissed_reason: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_dismissed_hyphen_reason? = nil,
                dismissed_comment: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_dismissed_hyphen_comment? = nil,
                rule: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_rule_hyphen_summary,
                tool: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_tool,
                most_recent_instance: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_instance
            ) {
                self.number = number
                self.created_at = created_at
                self.updated_at = updated_at
                self.url = url
                self.html_url = html_url
                self.instances_url = instances_url
                self.state = state
                self.fixed_at = fixed_at
                self.dismissed_by = dismissed_by
                self.dismissed_at = dismissed_at
                self.dismissed_reason = dismissed_reason
                self.dismissed_comment = dismissed_comment
                self.rule = rule
                self.tool = tool
                self.most_recent_instance = most_recent_instance
            }
            public enum CodingKeys: String, CodingKey {
                case number
                case created_at
                case updated_at
                case url
                case html_url
                case instances_url
                case state
                case fixed_at
                case dismissed_by
                case dismissed_at
                case dismissed_reason
                case dismissed_comment
                case rule
                case tool
                case most_recent_instance
            }
        }
        /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule`.
        public struct code_hyphen_scanning_hyphen_alert_hyphen_rule: Codable, Hashable, Sendable {
            /// A unique identifier for the rule used to detect the alert.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule/id`.
            public var id: Swift.String?
            /// The name of the rule used to detect the alert.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule/name`.
            public var name: Swift.String?
            /// The severity of the alert.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule/severity`.
            @frozen public enum severityPayload: String, Codable, Hashable, Sendable {
                case none = "none"
                case note = "note"
                case warning = "warning"
                case error = "error"
            }
            /// The severity of the alert.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule/severity`.
            public var severity: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_rule.severityPayload?
            /// The security severity of the alert.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule/security_severity_level`.
            @frozen public enum security_severity_levelPayload: String, Codable, Hashable, Sendable {
                case low = "low"
                case medium = "medium"
                case high = "high"
                case critical = "critical"
            }
            /// The security severity of the alert.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule/security_severity_level`.
            public var security_severity_level: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_rule.security_severity_levelPayload?
            /// A short description of the rule used to detect the alert.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule/description`.
            public var description: Swift.String?
            /// A description of the rule used to detect the alert.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule/full_description`.
            public var full_description: Swift.String?
            /// A set of tags applicable for the rule.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule/tags`.
            public var tags: [Swift.String]?
            /// Detailed documentation for the rule as GitHub Flavored Markdown.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule/help`.
            public var help: Swift.String?
            /// A link to the documentation for the rule used to detect the alert.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert-rule/help_uri`.
            public var help_uri: Swift.String?
            /// Creates a new `code_hyphen_scanning_hyphen_alert_hyphen_rule`.
            ///
            /// - Parameters:
            ///   - id: A unique identifier for the rule used to detect the alert.
            ///   - name: The name of the rule used to detect the alert.
            ///   - severity: The severity of the alert.
            ///   - security_severity_level: The security severity of the alert.
            ///   - description: A short description of the rule used to detect the alert.
            ///   - full_description: A description of the rule used to detect the alert.
            ///   - tags: A set of tags applicable for the rule.
            ///   - help: Detailed documentation for the rule as GitHub Flavored Markdown.
            ///   - help_uri: A link to the documentation for the rule used to detect the alert.
            public init(
                id: Swift.String? = nil,
                name: Swift.String? = nil,
                severity: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_rule.severityPayload? = nil,
                security_severity_level: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_rule.security_severity_levelPayload? = nil,
                description: Swift.String? = nil,
                full_description: Swift.String? = nil,
                tags: [Swift.String]? = nil,
                help: Swift.String? = nil,
                help_uri: Swift.String? = nil
            ) {
                self.id = id
                self.name = name
                self.severity = severity
                self.security_severity_level = security_severity_level
                self.description = description
                self.full_description = full_description
                self.tags = tags
                self.help = help
                self.help_uri = help_uri
            }
            public enum CodingKeys: String, CodingKey {
                case id
                case name
                case severity
                case security_severity_level
                case description
                case full_description
                case tags
                case help
                case help_uri
            }
        }
        /// - Remark: Generated from `#/components/schemas/code-scanning-alert`.
        public struct code_hyphen_scanning_hyphen_alert: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert/number`.
            public var number: Components.Schemas.alert_hyphen_number
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert/created_at`.
            public var created_at: Components.Schemas.alert_hyphen_created_hyphen_at
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert/updated_at`.
            public var updated_at: Components.Schemas.alert_hyphen_updated_hyphen_at?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert/url`.
            public var url: Components.Schemas.alert_hyphen_url
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert/html_url`.
            public var html_url: Components.Schemas.alert_hyphen_html_hyphen_url
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert/instances_url`.
            public var instances_url: Components.Schemas.alert_hyphen_instances_hyphen_url
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert/state`.
            public var state: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_state
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert/fixed_at`.
            public var fixed_at: Components.Schemas.alert_hyphen_fixed_hyphen_at?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert/dismissed_by`.
            public var dismissed_by: Components.Schemas.nullable_hyphen_simple_hyphen_user?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert/dismissed_at`.
            public var dismissed_at: Components.Schemas.alert_hyphen_dismissed_hyphen_at?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert/dismissed_reason`.
            public var dismissed_reason: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_dismissed_hyphen_reason?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert/dismissed_comment`.
            public var dismissed_comment: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_dismissed_hyphen_comment?
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert/rule`.
            public var rule: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_rule
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert/tool`.
            public var tool: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_tool
            /// - Remark: Generated from `#/components/schemas/code-scanning-alert/most_recent_instance`.
            public var most_recent_instance: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_instance
            /// Creates a new `code_hyphen_scanning_hyphen_alert`.
            ///
            /// - Parameters:
            ///   - number:
            ///   - created_at:
            ///   - updated_at:
            ///   - url:
            ///   - html_url:
            ///   - instances_url:
            ///   - state:
            ///   - fixed_at:
            ///   - dismissed_by:
            ///   - dismissed_at:
            ///   - dismissed_reason:
            ///   - dismissed_comment:
            ///   - rule:
            ///   - tool:
            ///   - most_recent_instance:
            public init(
                number: Components.Schemas.alert_hyphen_number,
                created_at: Components.Schemas.alert_hyphen_created_hyphen_at,
                updated_at: Components.Schemas.alert_hyphen_updated_hyphen_at? = nil,
                url: Components.Schemas.alert_hyphen_url,
                html_url: Components.Schemas.alert_hyphen_html_hyphen_url,
                instances_url: Components.Schemas.alert_hyphen_instances_hyphen_url,
                state: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_state,
                fixed_at: Components.Schemas.alert_hyphen_fixed_hyphen_at? = nil,
                dismissed_by: Components.Schemas.nullable_hyphen_simple_hyphen_user? = nil,
                dismissed_at: Components.Schemas.alert_hyphen_dismissed_hyphen_at? = nil,
                dismissed_reason: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_dismissed_hyphen_reason? = nil,
                dismissed_comment: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_dismissed_hyphen_comment? = nil,
                rule: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_rule,
                tool: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_tool,
                most_recent_instance: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_instance
            ) {
                self.number = number
                self.created_at = created_at
                self.updated_at = updated_at
                self.url = url
                self.html_url = html_url
                self.instances_url = instances_url
                self.state = state
                self.fixed_at = fixed_at
                self.dismissed_by = dismissed_by
                self.dismissed_at = dismissed_at
                self.dismissed_reason = dismissed_reason
                self.dismissed_comment = dismissed_comment
                self.rule = rule
                self.tool = tool
                self.most_recent_instance = most_recent_instance
            }
            public enum CodingKeys: String, CodingKey {
                case number
                case created_at
                case updated_at
                case url
                case html_url
                case instances_url
                case state
                case fixed_at
                case dismissed_by
                case dismissed_at
                case dismissed_reason
                case dismissed_comment
                case rule
                case tool
                case most_recent_instance
            }
        }
        /// Sets the state of the code scanning alert. You must provide `dismissed_reason` when you set the state to `dismissed`.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-alert-set-state`.
        @frozen public enum code_hyphen_scanning_hyphen_alert_hyphen_set_hyphen_state: String, Codable, Hashable, Sendable {
            case open = "open"
            case dismissed = "dismissed"
        }
        /// An identifier for the upload.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-analysis-sarif-id`.
        public typealias code_hyphen_scanning_hyphen_analysis_hyphen_sarif_hyphen_id = Swift.String
        /// The SHA of the commit to which the analysis you are uploading relates.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-analysis-commit-sha`.
        public typealias code_hyphen_scanning_hyphen_analysis_hyphen_commit_hyphen_sha = Swift.String
        /// Identifies the variable values associated with the environment in which this analysis was performed.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-analysis-environment`.
        public typealias code_hyphen_scanning_hyphen_analysis_hyphen_environment = Swift.String
        /// The time that the analysis was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-analysis-created-at`.
        public typealias code_hyphen_scanning_hyphen_analysis_hyphen_created_hyphen_at = Foundation.Date
        /// The REST API URL of the analysis resource.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-analysis-url`.
        public typealias code_hyphen_scanning_hyphen_analysis_hyphen_url = Swift.String
        /// - Remark: Generated from `#/components/schemas/code-scanning-analysis`.
        public struct code_hyphen_scanning_hyphen_analysis: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/code-scanning-analysis/ref`.
            public var ref: Components.Schemas.code_hyphen_scanning_hyphen_ref
            /// - Remark: Generated from `#/components/schemas/code-scanning-analysis/commit_sha`.
            public var commit_sha: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_commit_hyphen_sha
            /// - Remark: Generated from `#/components/schemas/code-scanning-analysis/analysis_key`.
            public var analysis_key: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_analysis_hyphen_key
            /// - Remark: Generated from `#/components/schemas/code-scanning-analysis/environment`.
            public var environment: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_environment
            /// - Remark: Generated from `#/components/schemas/code-scanning-analysis/category`.
            public var category: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_category?
            /// - Remark: Generated from `#/components/schemas/code-scanning-analysis/error`.
            public var error: Swift.String
            /// - Remark: Generated from `#/components/schemas/code-scanning-analysis/created_at`.
            public var created_at: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_created_hyphen_at
            /// The total number of results in the analysis.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-analysis/results_count`.
            public var results_count: Swift.Int
            /// The total number of rules used in the analysis.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-analysis/rules_count`.
            public var rules_count: Swift.Int
            /// Unique identifier for this analysis.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-analysis/id`.
            public var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/code-scanning-analysis/url`.
            public var url: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_url
            /// - Remark: Generated from `#/components/schemas/code-scanning-analysis/sarif_id`.
            public var sarif_id: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_sarif_hyphen_id
            /// - Remark: Generated from `#/components/schemas/code-scanning-analysis/tool`.
            public var tool: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_tool
            /// - Remark: Generated from `#/components/schemas/code-scanning-analysis/deletable`.
            public var deletable: Swift.Bool
            /// Warning generated when processing the analysis
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-analysis/warning`.
            public var warning: Swift.String
            /// Creates a new `code_hyphen_scanning_hyphen_analysis`.
            ///
            /// - Parameters:
            ///   - ref:
            ///   - commit_sha:
            ///   - analysis_key:
            ///   - environment:
            ///   - category:
            ///   - error:
            ///   - created_at:
            ///   - results_count: The total number of results in the analysis.
            ///   - rules_count: The total number of rules used in the analysis.
            ///   - id: Unique identifier for this analysis.
            ///   - url:
            ///   - sarif_id:
            ///   - tool:
            ///   - deletable:
            ///   - warning: Warning generated when processing the analysis
            public init(
                ref: Components.Schemas.code_hyphen_scanning_hyphen_ref,
                commit_sha: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_commit_hyphen_sha,
                analysis_key: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_analysis_hyphen_key,
                environment: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_environment,
                category: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_category? = nil,
                error: Swift.String,
                created_at: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_created_hyphen_at,
                results_count: Swift.Int,
                rules_count: Swift.Int,
                id: Swift.Int,
                url: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_url,
                sarif_id: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_sarif_hyphen_id,
                tool: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_tool,
                deletable: Swift.Bool,
                warning: Swift.String
            ) {
                self.ref = ref
                self.commit_sha = commit_sha
                self.analysis_key = analysis_key
                self.environment = environment
                self.category = category
                self.error = error
                self.created_at = created_at
                self.results_count = results_count
                self.rules_count = rules_count
                self.id = id
                self.url = url
                self.sarif_id = sarif_id
                self.tool = tool
                self.deletable = deletable
                self.warning = warning
            }
            public enum CodingKeys: String, CodingKey {
                case ref
                case commit_sha
                case analysis_key
                case environment
                case category
                case error
                case created_at
                case results_count
                case rules_count
                case id
                case url
                case sarif_id
                case tool
                case deletable
                case warning
            }
        }
        /// Successful deletion of a code scanning analysis
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-analysis-deletion`.
        public struct code_hyphen_scanning_hyphen_analysis_hyphen_deletion: Codable, Hashable, Sendable {
            /// Next deletable analysis in chain, without last analysis deletion confirmation
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-analysis-deletion/next_analysis_url`.
            public var next_analysis_url: Swift.String?
            /// Next deletable analysis in chain, with last analysis deletion confirmation
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-analysis-deletion/confirm_delete_url`.
            public var confirm_delete_url: Swift.String?
            /// Creates a new `code_hyphen_scanning_hyphen_analysis_hyphen_deletion`.
            ///
            /// - Parameters:
            ///   - next_analysis_url: Next deletable analysis in chain, without last analysis deletion confirmation
            ///   - confirm_delete_url: Next deletable analysis in chain, with last analysis deletion confirmation
            public init(
                next_analysis_url: Swift.String? = nil,
                confirm_delete_url: Swift.String? = nil
            ) {
                self.next_analysis_url = next_analysis_url
                self.confirm_delete_url = confirm_delete_url
            }
            public enum CodingKeys: String, CodingKey {
                case next_analysis_url
                case confirm_delete_url
            }
        }
        /// A CodeQL database.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-codeql-database`.
        public struct code_hyphen_scanning_hyphen_codeql_hyphen_database: Codable, Hashable, Sendable {
            /// The ID of the CodeQL database.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-codeql-database/id`.
            public var id: Swift.Int
            /// The name of the CodeQL database.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-codeql-database/name`.
            public var name: Swift.String
            /// The language of the CodeQL database.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-codeql-database/language`.
            public var language: Swift.String
            /// - Remark: Generated from `#/components/schemas/code-scanning-codeql-database/uploader`.
            public var uploader: Components.Schemas.simple_hyphen_user
            /// The MIME type of the CodeQL database file.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-codeql-database/content_type`.
            public var content_type: Swift.String
            /// The size of the CodeQL database file in bytes.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-codeql-database/size`.
            public var size: Swift.Int
            /// The date and time at which the CodeQL database was created, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-codeql-database/created_at`.
            public var created_at: Foundation.Date
            /// The date and time at which the CodeQL database was last updated, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-codeql-database/updated_at`.
            public var updated_at: Foundation.Date
            /// The URL at which to download the CodeQL database. The `Accept` header must be set to the value of the `content_type` property.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-codeql-database/url`.
            public var url: Swift.String
            /// The commit SHA of the repository at the time the CodeQL database was created.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-codeql-database/commit_oid`.
            public var commit_oid: Swift.String?
            /// Creates a new `code_hyphen_scanning_hyphen_codeql_hyphen_database`.
            ///
            /// - Parameters:
            ///   - id: The ID of the CodeQL database.
            ///   - name: The name of the CodeQL database.
            ///   - language: The language of the CodeQL database.
            ///   - uploader:
            ///   - content_type: The MIME type of the CodeQL database file.
            ///   - size: The size of the CodeQL database file in bytes.
            ///   - created_at: The date and time at which the CodeQL database was created, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
            ///   - updated_at: The date and time at which the CodeQL database was last updated, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
            ///   - url: The URL at which to download the CodeQL database. The `Accept` header must be set to the value of the `content_type` property.
            ///   - commit_oid: The commit SHA of the repository at the time the CodeQL database was created.
            public init(
                id: Swift.Int,
                name: Swift.String,
                language: Swift.String,
                uploader: Components.Schemas.simple_hyphen_user,
                content_type: Swift.String,
                size: Swift.Int,
                created_at: Foundation.Date,
                updated_at: Foundation.Date,
                url: Swift.String,
                commit_oid: Swift.String? = nil
            ) {
                self.id = id
                self.name = name
                self.language = language
                self.uploader = uploader
                self.content_type = content_type
                self.size = size
                self.created_at = created_at
                self.updated_at = updated_at
                self.url = url
                self.commit_oid = commit_oid
            }
            public enum CodingKeys: String, CodingKey {
                case id
                case name
                case language
                case uploader
                case content_type
                case size
                case created_at
                case updated_at
                case url
                case commit_oid
            }
        }
        /// The language targeted by the CodeQL query
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis-language`.
        @frozen public enum code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_language: String, Codable, Hashable, Sendable {
            case cpp = "cpp"
            case csharp = "csharp"
            case go = "go"
            case java = "java"
            case javascript = "javascript"
            case python = "python"
            case ruby = "ruby"
            case swift = "swift"
        }
        /// Repository Identifier
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis-repository`.
        public struct code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_repository: Codable, Hashable, Sendable {
            /// A unique identifier of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis-repository/id`.
            public var id: Swift.Int
            /// The name of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis-repository/name`.
            public var name: Swift.String
            /// The full, globally unique, name of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis-repository/full_name`.
            public var full_name: Swift.String
            /// Whether the repository is private.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis-repository/private`.
            public var _private: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis-repository/stargazers_count`.
            public var stargazers_count: Swift.Int
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis-repository/updated_at`.
            public var updated_at: Foundation.Date?
            /// Creates a new `code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_repository`.
            ///
            /// - Parameters:
            ///   - id: A unique identifier of the repository.
            ///   - name: The name of the repository.
            ///   - full_name: The full, globally unique, name of the repository.
            ///   - _private: Whether the repository is private.
            ///   - stargazers_count:
            ///   - updated_at:
            public init(
                id: Swift.Int,
                name: Swift.String,
                full_name: Swift.String,
                _private: Swift.Bool,
                stargazers_count: Swift.Int,
                updated_at: Foundation.Date? = nil
            ) {
                self.id = id
                self.name = name
                self.full_name = full_name
                self._private = _private
                self.stargazers_count = stargazers_count
                self.updated_at = updated_at
            }
            public enum CodingKeys: String, CodingKey {
                case id
                case name
                case full_name
                case _private = "private"
                case stargazers_count
                case updated_at
            }
        }
        /// The new status of the CodeQL variant analysis repository task.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis-status`.
        @frozen public enum code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_status: String, Codable, Hashable, Sendable {
            case pending = "pending"
            case in_progress = "in_progress"
            case succeeded = "succeeded"
            case failed = "failed"
            case canceled = "canceled"
            case timed_out = "timed_out"
        }
        /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis-skipped-repo-group`.
        public struct code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_skipped_hyphen_repo_hyphen_group: Codable, Hashable, Sendable {
            /// The total number of repositories that were skipped for this reason.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis-skipped-repo-group/repository_count`.
            public var repository_count: Swift.Int
            /// A list of repositories that were skipped. This list may not include all repositories that were skipped. This is only available when the repository was found and the user has access to it.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis-skipped-repo-group/repositories`.
            public var repositories: [Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_repository]
            /// Creates a new `code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_skipped_hyphen_repo_hyphen_group`.
            ///
            /// - Parameters:
            ///   - repository_count: The total number of repositories that were skipped for this reason.
            ///   - repositories: A list of repositories that were skipped. This list may not include all repositories that were skipped. This is only available when the repository was found and the user has access to it.
            public init(
                repository_count: Swift.Int,
                repositories: [Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_repository]
            ) {
                self.repository_count = repository_count
                self.repositories = repositories
            }
            public enum CodingKeys: String, CodingKey {
                case repository_count
                case repositories
            }
        }
        /// A run of a CodeQL query against one or more repositories.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis`.
        public struct code_hyphen_scanning_hyphen_variant_hyphen_analysis: Codable, Hashable, Sendable {
            /// The ID of the variant analysis.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/id`.
            public var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/controller_repo`.
            public var controller_repo: Components.Schemas.simple_hyphen_repository
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/actor`.
            public var actor: Components.Schemas.simple_hyphen_user
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/query_language`.
            public var query_language: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_language
            /// The download url for the query pack.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/query_pack_url`.
            public var query_pack_url: Swift.String
            /// The date and time at which the variant analysis was created, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/created_at`.
            public var created_at: Foundation.Date?
            /// The date and time at which the variant analysis was last updated, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/updated_at`.
            public var updated_at: Foundation.Date?
            /// The date and time at which the variant analysis was completed, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ. Will be null if the variant analysis has not yet completed or this information is not available.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/completed_at`.
            public var completed_at: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/status`.
            @frozen public enum statusPayload: String, Codable, Hashable, Sendable {
                case in_progress = "in_progress"
                case succeeded = "succeeded"
                case failed = "failed"
                case cancelled = "cancelled"
            }
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/status`.
            public var status: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis.statusPayload
            /// The GitHub Actions workflow run used to execute this variant analysis. This is only available if the workflow run has started.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/actions_workflow_run_id`.
            public var actions_workflow_run_id: Swift.Int?
            /// The reason for a failure of the variant analysis. This is only available if the variant analysis has failed.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/failure_reason`.
            @frozen public enum failure_reasonPayload: String, Codable, Hashable, Sendable {
                case no_repos_queried = "no_repos_queried"
                case actions_workflow_run_failed = "actions_workflow_run_failed"
                case internal_error = "internal_error"
            }
            /// The reason for a failure of the variant analysis. This is only available if the variant analysis has failed.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/failure_reason`.
            public var failure_reason: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis.failure_reasonPayload?
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/scanned_repositoriesPayload`.
            public struct scanned_repositoriesPayloadPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/scanned_repositoriesPayload/repository`.
                public var repository: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_repository
                /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/scanned_repositoriesPayload/analysis_status`.
                public var analysis_status: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_status
                /// The number of results in the case of a successful analysis. This is only available for successful analyses.
                ///
                /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/scanned_repositoriesPayload/result_count`.
                public var result_count: Swift.Int?
                /// The size of the artifact. This is only available for successful analyses.
                ///
                /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/scanned_repositoriesPayload/artifact_size_in_bytes`.
                public var artifact_size_in_bytes: Swift.Int?
                /// The reason of the failure of this repo task. This is only available if the repository task has failed.
                ///
                /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/scanned_repositoriesPayload/failure_message`.
                public var failure_message: Swift.String?
                /// Creates a new `scanned_repositoriesPayloadPayload`.
                ///
                /// - Parameters:
                ///   - repository:
                ///   - analysis_status:
                ///   - result_count: The number of results in the case of a successful analysis. This is only available for successful analyses.
                ///   - artifact_size_in_bytes: The size of the artifact. This is only available for successful analyses.
                ///   - failure_message: The reason of the failure of this repo task. This is only available if the repository task has failed.
                public init(
                    repository: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_repository,
                    analysis_status: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_status,
                    result_count: Swift.Int? = nil,
                    artifact_size_in_bytes: Swift.Int? = nil,
                    failure_message: Swift.String? = nil
                ) {
                    self.repository = repository
                    self.analysis_status = analysis_status
                    self.result_count = result_count
                    self.artifact_size_in_bytes = artifact_size_in_bytes
                    self.failure_message = failure_message
                }
                public enum CodingKeys: String, CodingKey {
                    case repository
                    case analysis_status
                    case result_count
                    case artifact_size_in_bytes
                    case failure_message
                }
            }
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/scanned_repositories`.
            public typealias scanned_repositoriesPayload = [Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis.scanned_repositoriesPayloadPayload]
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/scanned_repositories`.
            public var scanned_repositories: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis.scanned_repositoriesPayload?
            /// Information about repositories that were skipped from processing. This information is only available to the user that initiated the variant analysis.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/skipped_repositories`.
            public struct skipped_repositoriesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/skipped_repositories/access_mismatch_repos`.
                public var access_mismatch_repos: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_skipped_hyphen_repo_hyphen_group
                /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/skipped_repositories/not_found_repos`.
                public struct not_found_reposPayload: Codable, Hashable, Sendable {
                    /// The total number of repositories that were skipped for this reason.
                    ///
                    /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/skipped_repositories/not_found_repos/repository_count`.
                    public var repository_count: Swift.Int
                    /// A list of full repository names that were skipped. This list may not include all repositories that were skipped.
                    ///
                    /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/skipped_repositories/not_found_repos/repository_full_names`.
                    public var repository_full_names: [Swift.String]
                    /// Creates a new `not_found_reposPayload`.
                    ///
                    /// - Parameters:
                    ///   - repository_count: The total number of repositories that were skipped for this reason.
                    ///   - repository_full_names: A list of full repository names that were skipped. This list may not include all repositories that were skipped.
                    public init(
                        repository_count: Swift.Int,
                        repository_full_names: [Swift.String]
                    ) {
                        self.repository_count = repository_count
                        self.repository_full_names = repository_full_names
                    }
                    public enum CodingKeys: String, CodingKey {
                        case repository_count
                        case repository_full_names
                    }
                }
                /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/skipped_repositories/not_found_repos`.
                public var not_found_repos: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis.skipped_repositoriesPayload.not_found_reposPayload
                /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/skipped_repositories/no_codeql_db_repos`.
                public var no_codeql_db_repos: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_skipped_hyphen_repo_hyphen_group
                /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/skipped_repositories/over_limit_repos`.
                public var over_limit_repos: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_skipped_hyphen_repo_hyphen_group
                /// Creates a new `skipped_repositoriesPayload`.
                ///
                /// - Parameters:
                ///   - access_mismatch_repos:
                ///   - not_found_repos:
                ///   - no_codeql_db_repos:
                ///   - over_limit_repos:
                public init(
                    access_mismatch_repos: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_skipped_hyphen_repo_hyphen_group,
                    not_found_repos: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis.skipped_repositoriesPayload.not_found_reposPayload,
                    no_codeql_db_repos: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_skipped_hyphen_repo_hyphen_group,
                    over_limit_repos: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_skipped_hyphen_repo_hyphen_group
                ) {
                    self.access_mismatch_repos = access_mismatch_repos
                    self.not_found_repos = not_found_repos
                    self.no_codeql_db_repos = no_codeql_db_repos
                    self.over_limit_repos = over_limit_repos
                }
                public enum CodingKeys: String, CodingKey {
                    case access_mismatch_repos
                    case not_found_repos
                    case no_codeql_db_repos
                    case over_limit_repos
                }
            }
            /// Information about repositories that were skipped from processing. This information is only available to the user that initiated the variant analysis.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis/skipped_repositories`.
            public var skipped_repositories: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis.skipped_repositoriesPayload?
            /// Creates a new `code_hyphen_scanning_hyphen_variant_hyphen_analysis`.
            ///
            /// - Parameters:
            ///   - id: The ID of the variant analysis.
            ///   - controller_repo:
            ///   - actor:
            ///   - query_language:
            ///   - query_pack_url: The download url for the query pack.
            ///   - created_at: The date and time at which the variant analysis was created, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
            ///   - updated_at: The date and time at which the variant analysis was last updated, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
            ///   - completed_at: The date and time at which the variant analysis was completed, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ. Will be null if the variant analysis has not yet completed or this information is not available.
            ///   - status:
            ///   - actions_workflow_run_id: The GitHub Actions workflow run used to execute this variant analysis. This is only available if the workflow run has started.
            ///   - failure_reason: The reason for a failure of the variant analysis. This is only available if the variant analysis has failed.
            ///   - scanned_repositories:
            ///   - skipped_repositories: Information about repositories that were skipped from processing. This information is only available to the user that initiated the variant analysis.
            public init(
                id: Swift.Int,
                controller_repo: Components.Schemas.simple_hyphen_repository,
                actor: Components.Schemas.simple_hyphen_user,
                query_language: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_language,
                query_pack_url: Swift.String,
                created_at: Foundation.Date? = nil,
                updated_at: Foundation.Date? = nil,
                completed_at: Foundation.Date? = nil,
                status: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis.statusPayload,
                actions_workflow_run_id: Swift.Int? = nil,
                failure_reason: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis.failure_reasonPayload? = nil,
                scanned_repositories: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis.scanned_repositoriesPayload? = nil,
                skipped_repositories: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis.skipped_repositoriesPayload? = nil
            ) {
                self.id = id
                self.controller_repo = controller_repo
                self.actor = actor
                self.query_language = query_language
                self.query_pack_url = query_pack_url
                self.created_at = created_at
                self.updated_at = updated_at
                self.completed_at = completed_at
                self.status = status
                self.actions_workflow_run_id = actions_workflow_run_id
                self.failure_reason = failure_reason
                self.scanned_repositories = scanned_repositories
                self.skipped_repositories = skipped_repositories
            }
            public enum CodingKeys: String, CodingKey {
                case id
                case controller_repo
                case actor
                case query_language
                case query_pack_url
                case created_at
                case updated_at
                case completed_at
                case status
                case actions_workflow_run_id
                case failure_reason
                case scanned_repositories
                case skipped_repositories
            }
        }
        /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis-repo-task`.
        public struct code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis-repo-task/repository`.
            public var repository: Components.Schemas.simple_hyphen_repository
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis-repo-task/analysis_status`.
            public var analysis_status: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_status
            /// The size of the artifact. This is only available for successful analyses.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis-repo-task/artifact_size_in_bytes`.
            public var artifact_size_in_bytes: Swift.Int?
            /// The number of results in the case of a successful analysis. This is only available for successful analyses.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis-repo-task/result_count`.
            public var result_count: Swift.Int?
            /// The reason of the failure of this repo task. This is only available if the repository task has failed.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis-repo-task/failure_message`.
            public var failure_message: Swift.String?
            /// The SHA of the commit the CodeQL database was built against. This is only available for successful analyses.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis-repo-task/database_commit_sha`.
            public var database_commit_sha: Swift.String?
            /// The source location prefix to use. This is only available for successful analyses.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis-repo-task/source_location_prefix`.
            public var source_location_prefix: Swift.String?
            /// The URL of the artifact. This is only available for successful analyses.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-variant-analysis-repo-task/artifact_url`.
            public var artifact_url: Swift.String?
            /// Creates a new `code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task`.
            ///
            /// - Parameters:
            ///   - repository:
            ///   - analysis_status:
            ///   - artifact_size_in_bytes: The size of the artifact. This is only available for successful analyses.
            ///   - result_count: The number of results in the case of a successful analysis. This is only available for successful analyses.
            ///   - failure_message: The reason of the failure of this repo task. This is only available if the repository task has failed.
            ///   - database_commit_sha: The SHA of the commit the CodeQL database was built against. This is only available for successful analyses.
            ///   - source_location_prefix: The source location prefix to use. This is only available for successful analyses.
            ///   - artifact_url: The URL of the artifact. This is only available for successful analyses.
            public init(
                repository: Components.Schemas.simple_hyphen_repository,
                analysis_status: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_status,
                artifact_size_in_bytes: Swift.Int? = nil,
                result_count: Swift.Int? = nil,
                failure_message: Swift.String? = nil,
                database_commit_sha: Swift.String? = nil,
                source_location_prefix: Swift.String? = nil,
                artifact_url: Swift.String? = nil
            ) {
                self.repository = repository
                self.analysis_status = analysis_status
                self.artifact_size_in_bytes = artifact_size_in_bytes
                self.result_count = result_count
                self.failure_message = failure_message
                self.database_commit_sha = database_commit_sha
                self.source_location_prefix = source_location_prefix
                self.artifact_url = artifact_url
            }
            public enum CodingKeys: String, CodingKey {
                case repository
                case analysis_status
                case artifact_size_in_bytes
                case result_count
                case failure_message
                case database_commit_sha
                case source_location_prefix
                case artifact_url
            }
        }
        /// Configuration for code scanning default setup.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup`.
        public struct code_hyphen_scanning_hyphen_default_hyphen_setup: Codable, Hashable, Sendable {
            /// Code scanning default setup has been configured or not.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup/state`.
            @frozen public enum statePayload: String, Codable, Hashable, Sendable {
                case configured = "configured"
                case not_hyphen_configured = "not-configured"
            }
            /// Code scanning default setup has been configured or not.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup/state`.
            public var state: Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup.statePayload?
            /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup/languagesPayload`.
            @frozen public enum languagesPayloadPayload: String, Codable, Hashable, Sendable {
                case c_hyphen_cpp = "c-cpp"
                case csharp = "csharp"
                case go = "go"
                case java_hyphen_kotlin = "java-kotlin"
                case javascript_hyphen_typescript = "javascript-typescript"
                case javascript = "javascript"
                case python = "python"
                case ruby = "ruby"
                case typescript = "typescript"
                case swift = "swift"
            }
            /// Languages to be analyzed.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup/languages`.
            public typealias languagesPayload = [Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup.languagesPayloadPayload]
            /// Languages to be analyzed.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup/languages`.
            public var languages: Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup.languagesPayload?
            /// CodeQL query suite to be used.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup/query_suite`.
            @frozen public enum query_suitePayload: String, Codable, Hashable, Sendable {
                case _default = "default"
                case extended = "extended"
            }
            /// CodeQL query suite to be used.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup/query_suite`.
            public var query_suite: Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup.query_suitePayload?
            /// Timestamp of latest configuration update.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup/updated_at`.
            public var updated_at: Foundation.Date?
            /// The frequency of the periodic analysis.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup/schedule`.
            @frozen public enum schedulePayload: String, Codable, Hashable, Sendable {
                case weekly = "weekly"
            }
            /// The frequency of the periodic analysis.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup/schedule`.
            public var schedule: Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup.schedulePayload?
            /// Creates a new `code_hyphen_scanning_hyphen_default_hyphen_setup`.
            ///
            /// - Parameters:
            ///   - state: Code scanning default setup has been configured or not.
            ///   - languages: Languages to be analyzed.
            ///   - query_suite: CodeQL query suite to be used.
            ///   - updated_at: Timestamp of latest configuration update.
            ///   - schedule: The frequency of the periodic analysis.
            public init(
                state: Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup.statePayload? = nil,
                languages: Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup.languagesPayload? = nil,
                query_suite: Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup.query_suitePayload? = nil,
                updated_at: Foundation.Date? = nil,
                schedule: Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup.schedulePayload? = nil
            ) {
                self.state = state
                self.languages = languages
                self.query_suite = query_suite
                self.updated_at = updated_at
                self.schedule = schedule
            }
            public enum CodingKeys: String, CodingKey {
                case state
                case languages
                case query_suite
                case updated_at
                case schedule
            }
        }
        /// Configuration for code scanning default setup.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup-update`.
        public struct code_hyphen_scanning_hyphen_default_hyphen_setup_hyphen_update: Codable, Hashable, Sendable {
            /// The desired state of code scanning default setup.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup-update/state`.
            @frozen public enum statePayload: String, Codable, Hashable, Sendable {
                case configured = "configured"
                case not_hyphen_configured = "not-configured"
            }
            /// The desired state of code scanning default setup.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup-update/state`.
            public var state: Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup_hyphen_update.statePayload?
            /// CodeQL query suite to be used.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup-update/query_suite`.
            @frozen public enum query_suitePayload: String, Codable, Hashable, Sendable {
                case _default = "default"
                case extended = "extended"
            }
            /// CodeQL query suite to be used.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup-update/query_suite`.
            public var query_suite: Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup_hyphen_update.query_suitePayload?
            /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup-update/languagesPayload`.
            @frozen public enum languagesPayloadPayload: String, Codable, Hashable, Sendable {
                case c_hyphen_cpp = "c-cpp"
                case csharp = "csharp"
                case go = "go"
                case java_hyphen_kotlin = "java-kotlin"
                case javascript_hyphen_typescript = "javascript-typescript"
                case python = "python"
                case ruby = "ruby"
                case swift = "swift"
            }
            /// CodeQL languages to be analyzed.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup-update/languages`.
            public typealias languagesPayload = [Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup_hyphen_update.languagesPayloadPayload]
            /// CodeQL languages to be analyzed.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup-update/languages`.
            public var languages: Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup_hyphen_update.languagesPayload?
            /// Creates a new `code_hyphen_scanning_hyphen_default_hyphen_setup_hyphen_update`.
            ///
            /// - Parameters:
            ///   - state: The desired state of code scanning default setup.
            ///   - query_suite: CodeQL query suite to be used.
            ///   - languages: CodeQL languages to be analyzed.
            public init(
                state: Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup_hyphen_update.statePayload? = nil,
                query_suite: Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup_hyphen_update.query_suitePayload? = nil,
                languages: Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup_hyphen_update.languagesPayload? = nil
            ) {
                self.state = state
                self.query_suite = query_suite
                self.languages = languages
            }
            public enum CodingKeys: String, CodingKey {
                case state
                case query_suite
                case languages
            }
            public init(from decoder: any Decoder) throws {
                let container = try decoder.container(keyedBy: CodingKeys.self)
                state = try container.decodeIfPresent(
                    Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup_hyphen_update.statePayload.self,
                    forKey: .state
                )
                query_suite = try container.decodeIfPresent(
                    Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup_hyphen_update.query_suitePayload.self,
                    forKey: .query_suite
                )
                languages = try container.decodeIfPresent(
                    Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup_hyphen_update.languagesPayload.self,
                    forKey: .languages
                )
                try decoder.ensureNoAdditionalProperties(knownKeys: [
                    "state",
                    "query_suite",
                    "languages"
                ])
            }
        }
        /// You can use `run_url` to track the status of the run. This includes a property status and conclusion.
        /// You should not rely on this always being an actions workflow run object.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup-update-response`.
        public struct code_hyphen_scanning_hyphen_default_hyphen_setup_hyphen_update_hyphen_response: Codable, Hashable, Sendable {
            /// ID of the corresponding run.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup-update-response/run_id`.
            public var run_id: Swift.Int?
            /// URL of the corresponding run.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-default-setup-update-response/run_url`.
            public var run_url: Swift.String?
            /// Creates a new `code_hyphen_scanning_hyphen_default_hyphen_setup_hyphen_update_hyphen_response`.
            ///
            /// - Parameters:
            ///   - run_id: ID of the corresponding run.
            ///   - run_url: URL of the corresponding run.
            public init(
                run_id: Swift.Int? = nil,
                run_url: Swift.String? = nil
            ) {
                self.run_id = run_id
                self.run_url = run_url
            }
            public enum CodingKeys: String, CodingKey {
                case run_id
                case run_url
            }
        }
        /// The full Git reference, formatted as `refs/heads/<branch name>`,
        /// `refs/tags/<tag>`, `refs/pull/<number>/merge`, or `refs/pull/<number>/head`.
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-ref-full`.
        public typealias code_hyphen_scanning_hyphen_ref_hyphen_full = Swift.String
        /// A Base64 string representing the SARIF file to upload. You must first compress your SARIF file using [`gzip`](http://www.gnu.org/software/gzip/manual/gzip.html) and then translate the contents of the file into a Base64 encoding string. For more information, see "[SARIF support for code scanning](https://docs.github.com/code-security/secure-coding/sarif-support-for-code-scanning)."
        ///
        /// - Remark: Generated from `#/components/schemas/code-scanning-analysis-sarif-file`.
        public typealias code_hyphen_scanning_hyphen_analysis_hyphen_sarif_hyphen_file = Swift.String
        /// - Remark: Generated from `#/components/schemas/code-scanning-sarifs-receipt`.
        public struct code_hyphen_scanning_hyphen_sarifs_hyphen_receipt: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/code-scanning-sarifs-receipt/id`.
            public var id: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_sarif_hyphen_id?
            /// The REST API URL for checking the status of the upload.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-sarifs-receipt/url`.
            public var url: Swift.String?
            /// Creates a new `code_hyphen_scanning_hyphen_sarifs_hyphen_receipt`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - url: The REST API URL for checking the status of the upload.
            public init(
                id: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_sarif_hyphen_id? = nil,
                url: Swift.String? = nil
            ) {
                self.id = id
                self.url = url
            }
            public enum CodingKeys: String, CodingKey {
                case id
                case url
            }
        }
        /// - Remark: Generated from `#/components/schemas/code-scanning-sarifs-status`.
        public struct code_hyphen_scanning_hyphen_sarifs_hyphen_status: Codable, Hashable, Sendable {
            /// `pending` files have not yet been processed, while `complete` means results from the SARIF have been stored. `failed` files have either not been processed at all, or could only be partially processed.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-sarifs-status/processing_status`.
            @frozen public enum processing_statusPayload: String, Codable, Hashable, Sendable {
                case pending = "pending"
                case complete = "complete"
                case failed = "failed"
            }
            /// `pending` files have not yet been processed, while `complete` means results from the SARIF have been stored. `failed` files have either not been processed at all, or could only be partially processed.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-sarifs-status/processing_status`.
            public var processing_status: Components.Schemas.code_hyphen_scanning_hyphen_sarifs_hyphen_status.processing_statusPayload?
            /// The REST API URL for getting the analyses associated with the upload.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-sarifs-status/analyses_url`.
            public var analyses_url: Swift.String?
            /// Any errors that ocurred during processing of the delivery.
            ///
            /// - Remark: Generated from `#/components/schemas/code-scanning-sarifs-status/errors`.
            public var errors: [Swift.String]?
            /// Creates a new `code_hyphen_scanning_hyphen_sarifs_hyphen_status`.
            ///
            /// - Parameters:
            ///   - processing_status: `pending` files have not yet been processed, while `complete` means results from the SARIF have been stored. `failed` files have either not been processed at all, or could only be partially processed.
            ///   - analyses_url: The REST API URL for getting the analyses associated with the upload.
            ///   - errors: Any errors that ocurred during processing of the delivery.
            public init(
                processing_status: Components.Schemas.code_hyphen_scanning_hyphen_sarifs_hyphen_status.processing_statusPayload? = nil,
                analyses_url: Swift.String? = nil,
                errors: [Swift.String]? = nil
            ) {
                self.processing_status = processing_status
                self.analyses_url = analyses_url
                self.errors = errors
            }
            public enum CodingKeys: String, CodingKey {
                case processing_status
                case analyses_url
                case errors
            }
        }
    }
    /// Types generated from the `#/components/parameters` section of the OpenAPI document.
    public enum Parameters {
        /// A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results before this cursor. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
        ///
        /// - Remark: Generated from `#/components/parameters/pagination-before`.
        public typealias pagination_hyphen_before = Swift.String
        /// A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results after this cursor. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
        ///
        /// - Remark: Generated from `#/components/parameters/pagination-after`.
        public typealias pagination_hyphen_after = Swift.String
        /// The direction to sort the results by.
        ///
        /// - Remark: Generated from `#/components/parameters/direction`.
        @frozen public enum direction: String, Codable, Hashable, Sendable {
            case asc = "asc"
            case desc = "desc"
        }
        /// The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
        ///
        /// - Remark: Generated from `#/components/parameters/per-page`.
        public typealias per_hyphen_page = Swift.Int
        /// The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
        ///
        /// - Remark: Generated from `#/components/parameters/page`.
        public typealias page = Swift.Int
        /// The account owner of the repository. The name is not case sensitive.
        ///
        /// - Remark: Generated from `#/components/parameters/owner`.
        public typealias owner = Swift.String
        /// The name of the repository without the `.git` extension. The name is not case sensitive.
        ///
        /// - Remark: Generated from `#/components/parameters/repo`.
        public typealias repo = Swift.String
        /// The organization name. The name is not case sensitive.
        ///
        /// - Remark: Generated from `#/components/parameters/org`.
        public typealias org = Swift.String
        /// The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `tool_name` or `tool_guid`, but not both.
        ///
        /// - Remark: Generated from `#/components/parameters/tool-name`.
        public typealias tool_hyphen_name = Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_tool_hyphen_name
        /// The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not include a GUID in their analysis data. You can specify the tool by using either `tool_guid` or `tool_name`, but not both.
        ///
        /// - Remark: Generated from `#/components/parameters/tool-guid`.
        public typealias tool_hyphen_guid = Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_tool_hyphen_guid
        /// The Git reference for the results you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branch name>` or simply `<branch name>`. To reference a pull request use `refs/pull/<number>/merge`.
        ///
        /// - Remark: Generated from `#/components/parameters/git-ref`.
        public typealias git_hyphen_ref = Components.Schemas.code_hyphen_scanning_hyphen_ref
        /// The number of the pull request for the results you want to list.
        ///
        /// - Remark: Generated from `#/components/parameters/pr-alias`.
        public typealias pr_hyphen_alias = Swift.Int
        /// The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the `number` field in the response from the `GET /repos/{owner}/{repo}/code-scanning/alerts` operation.
        ///
        /// - Remark: Generated from `#/components/parameters/alert-number`.
        public typealias alert_hyphen_number = Components.Schemas.alert_hyphen_number
    }
    /// Types generated from the `#/components/requestBodies` section of the OpenAPI document.
    public enum RequestBodies {}
    /// Types generated from the `#/components/responses` section of the OpenAPI document.
    public enum Responses {
        public struct not_found: Sendable, Hashable {
            /// - Remark: Generated from `#/components/responses/not_found/content`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/components/responses/not_found/content/application\/json`.
                case json(Components.Schemas.basic_hyphen_error)
                /// The associated value of the enum case if `self` is `.json`.
                ///
                /// - Throws: An error if `self` is not `.json`.
                /// - SeeAlso: `.json`.
                public var json: Components.Schemas.basic_hyphen_error {
                    get throws {
                        switch self {
                        case let .json(body):
                            return body
                        }
                    }
                }
            }
            /// Received HTTP response body
            public var body: Components.Responses.not_found.Body
            /// Creates a new `not_found`.
            ///
            /// - Parameters:
            ///   - body: Received HTTP response body
            public init(body: Components.Responses.not_found.Body) {
                self.body = body
            }
        }
        public struct bad_request: Sendable, Hashable {
            /// - Remark: Generated from `#/components/responses/bad_request/content`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/components/responses/bad_request/content/application\/json`.
                case json(Components.Schemas.basic_hyphen_error)
                /// The associated value of the enum case if `self` is `.json`.
                ///
                /// - Throws: An error if `self` is not `.json`.
                /// - SeeAlso: `.json`.
                public var json: Components.Schemas.basic_hyphen_error {
                    get throws {
                        switch self {
                        case let .json(body):
                            return body
                        default:
                            try throwUnexpectedResponseBody(
                                expectedContent: "application/json",
                                body: self
                            )
                        }
                    }
                }
                /// - Remark: Generated from `#/components/responses/bad_request/content/application\/scim+json`.
                case application_scim_plus_json(Components.Schemas.scim_hyphen_error)
                /// The associated value of the enum case if `self` is `.application_scim_plus_json`.
                ///
                /// - Throws: An error if `self` is not `.application_scim_plus_json`.
                /// - SeeAlso: `.application_scim_plus_json`.
                public var application_scim_plus_json: Components.Schemas.scim_hyphen_error {
                    get throws {
                        switch self {
                        case let .application_scim_plus_json(body):
                            return body
                        default:
                            try throwUnexpectedResponseBody(
                                expectedContent: "application/scim+json",
                                body: self
                            )
                        }
                    }
                }
            }
            /// Received HTTP response body
            public var body: Components.Responses.bad_request.Body
            /// Creates a new `bad_request`.
            ///
            /// - Parameters:
            ///   - body: Received HTTP response body
            public init(body: Components.Responses.bad_request.Body) {
                self.body = body
            }
        }
        public struct not_modified: Sendable, Hashable {
            /// Creates a new `not_modified`.
            public init() {}
        }
        public struct service_unavailable: Sendable, Hashable {
            /// - Remark: Generated from `#/components/responses/service_unavailable/content`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/components/responses/service_unavailable/content/json`.
                public struct jsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/responses/service_unavailable/content/json/code`.
                    public var code: Swift.String?
                    /// - Remark: Generated from `#/components/responses/service_unavailable/content/json/message`.
                    public var message: Swift.String?
                    /// - Remark: Generated from `#/components/responses/service_unavailable/content/json/documentation_url`.
                    public var documentation_url: Swift.String?
                    /// Creates a new `jsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - code:
                    ///   - message:
                    ///   - documentation_url:
                    public init(
                        code: Swift.String? = nil,
                        message: Swift.String? = nil,
                        documentation_url: Swift.String? = nil
                    ) {
                        self.code = code
                        self.message = message
                        self.documentation_url = documentation_url
                    }
                    public enum CodingKeys: String, CodingKey {
                        case code
                        case message
                        case documentation_url
                    }
                }
                /// - Remark: Generated from `#/components/responses/service_unavailable/content/application\/json`.
                case json(Components.Responses.service_unavailable.Body.jsonPayload)
                /// The associated value of the enum case if `self` is `.json`.
                ///
                /// - Throws: An error if `self` is not `.json`.
                /// - SeeAlso: `.json`.
                public var json: Components.Responses.service_unavailable.Body.jsonPayload {
                    get throws {
                        switch self {
                        case let .json(body):
                            return body
                        }
                    }
                }
            }
            /// Received HTTP response body
            public var body: Components.Responses.service_unavailable.Body
            /// Creates a new `service_unavailable`.
            ///
            /// - Parameters:
            ///   - body: Received HTTP response body
            public init(body: Components.Responses.service_unavailable.Body) {
                self.body = body
            }
        }
        public struct code_scanning_forbidden_read: Sendable, Hashable {
            /// - Remark: Generated from `#/components/responses/code_scanning_forbidden_read/content`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/components/responses/code_scanning_forbidden_read/content/application\/json`.
                case json(Components.Schemas.basic_hyphen_error)
                /// The associated value of the enum case if `self` is `.json`.
                ///
                /// - Throws: An error if `self` is not `.json`.
                /// - SeeAlso: `.json`.
                public var json: Components.Schemas.basic_hyphen_error {
                    get throws {
                        switch self {
                        case let .json(body):
                            return body
                        }
                    }
                }
            }
            /// Received HTTP response body
            public var body: Components.Responses.code_scanning_forbidden_read.Body
            /// Creates a new `code_scanning_forbidden_read`.
            ///
            /// - Parameters:
            ///   - body: Received HTTP response body
            public init(body: Components.Responses.code_scanning_forbidden_read.Body) {
                self.body = body
            }
        }
        public struct code_scanning_forbidden_write: Sendable, Hashable {
            /// - Remark: Generated from `#/components/responses/code_scanning_forbidden_write/content`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/components/responses/code_scanning_forbidden_write/content/application\/json`.
                case json(Components.Schemas.basic_hyphen_error)
                /// The associated value of the enum case if `self` is `.json`.
                ///
                /// - Throws: An error if `self` is not `.json`.
                /// - SeeAlso: `.json`.
                public var json: Components.Schemas.basic_hyphen_error {
                    get throws {
                        switch self {
                        case let .json(body):
                            return body
                        }
                    }
                }
            }
            /// Received HTTP response body
            public var body: Components.Responses.code_scanning_forbidden_write.Body
            /// Creates a new `code_scanning_forbidden_write`.
            ///
            /// - Parameters:
            ///   - body: Received HTTP response body
            public init(body: Components.Responses.code_scanning_forbidden_write.Body) {
                self.body = body
            }
        }
        public struct found: Sendable, Hashable {
            /// Creates a new `found`.
            public init() {}
        }
        public struct code_scanning_conflict: Sendable, Hashable {
            /// - Remark: Generated from `#/components/responses/code_scanning_conflict/content`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/components/responses/code_scanning_conflict/content/application\/json`.
                case json(Components.Schemas.basic_hyphen_error)
                /// The associated value of the enum case if `self` is `.json`.
                ///
                /// - Throws: An error if `self` is not `.json`.
                /// - SeeAlso: `.json`.
                public var json: Components.Schemas.basic_hyphen_error {
                    get throws {
                        switch self {
                        case let .json(body):
                            return body
                        }
                    }
                }
            }
            /// Received HTTP response body
            public var body: Components.Responses.code_scanning_conflict.Body
            /// Creates a new `code_scanning_conflict`.
            ///
            /// - Parameters:
            ///   - body: Received HTTP response body
            public init(body: Components.Responses.code_scanning_conflict.Body) {
                self.body = body
            }
        }
    }
    /// Types generated from the `#/components/headers` section of the OpenAPI document.
    public enum Headers {
        /// - Remark: Generated from `#/components/headers/link`.
        public typealias link = Swift.String
    }
}

/// API operations, with input and output types, generated from `#/paths` in the OpenAPI document.
public enum Operations {
    /// List code scanning alerts for an organization
    ///
    /// Lists code scanning alerts for the default branch for all eligible repositories in an organization. Eligible repositories are repositories that are owned by organizations that you own or for which you are a security manager. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."
    ///
    /// The authenticated user must be an owner or security manager for the organization to use this endpoint.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` or `repo`s cope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /orgs/{org}/code-scanning/alerts`.
    /// - Remark: Generated from `#/paths//orgs/{org}/code-scanning/alerts/get(code-scanning/list-alerts-for-org)`.
    public enum code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org {
        public static let id: Swift.String = "code-scanning/list-alerts-for-org"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/orgs/{org}/code-scanning/alerts/GET/path`.
            public struct Path: Sendable, Hashable {
                /// The organization name. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/orgs/{org}/code-scanning/alerts/GET/path/org`.
                public var org: Components.Parameters.org
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - org: The organization name. The name is not case sensitive.
                public init(org: Components.Parameters.org) {
                    self.org = org
                }
            }
            public var path: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.Input.Path
            /// - Remark: Generated from `#/paths/orgs/{org}/code-scanning/alerts/GET/query`.
            public struct Query: Sendable, Hashable {
                /// The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `tool_name` or `tool_guid`, but not both.
                ///
                /// - Remark: Generated from `#/paths/orgs/{org}/code-scanning/alerts/GET/query/tool_name`.
                public var tool_name: Components.Parameters.tool_hyphen_name?
                /// The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not include a GUID in their analysis data. You can specify the tool by using either `tool_guid` or `tool_name`, but not both.
                ///
                /// - Remark: Generated from `#/paths/orgs/{org}/code-scanning/alerts/GET/query/tool_guid`.
                public var tool_guid: Components.Parameters.tool_hyphen_guid?
                /// A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results before this cursor. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///
                /// - Remark: Generated from `#/paths/orgs/{org}/code-scanning/alerts/GET/query/before`.
                public var before: Components.Parameters.pagination_hyphen_before?
                /// A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results after this cursor. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///
                /// - Remark: Generated from `#/paths/orgs/{org}/code-scanning/alerts/GET/query/after`.
                public var after: Components.Parameters.pagination_hyphen_after?
                /// The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///
                /// - Remark: Generated from `#/paths/orgs/{org}/code-scanning/alerts/GET/query/page`.
                public var page: Components.Parameters.page?
                /// The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///
                /// - Remark: Generated from `#/paths/orgs/{org}/code-scanning/alerts/GET/query/per_page`.
                public var per_page: Components.Parameters.per_hyphen_page?
                /// - Remark: Generated from `#/components/parameters/direction`.
                @frozen public enum direction: String, Codable, Hashable, Sendable {
                    case asc = "asc"
                    case desc = "desc"
                }
                /// The direction to sort the results by.
                ///
                /// - Remark: Generated from `#/paths/orgs/{org}/code-scanning/alerts/GET/query/direction`.
                public var direction: Components.Parameters.direction?
                /// If specified, only code scanning alerts with this state will be returned.
                ///
                /// - Remark: Generated from `#/paths/orgs/{org}/code-scanning/alerts/GET/query/state`.
                public var state: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_state_hyphen_query?
                /// - Remark: Generated from `#/paths/orgs/{org}/code-scanning/alerts/GET/query/sort`.
                @frozen public enum sortPayload: String, Codable, Hashable, Sendable {
                    case created = "created"
                    case updated = "updated"
                }
                /// The property by which to sort the results.
                ///
                /// - Remark: Generated from `#/paths/orgs/{org}/code-scanning/alerts/GET/query/sort`.
                public var sort: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.Input.Query.sortPayload?
                /// If specified, only code scanning alerts with this severity will be returned.
                ///
                /// - Remark: Generated from `#/paths/orgs/{org}/code-scanning/alerts/GET/query/severity`.
                public var severity: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_severity?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - tool_name: The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `tool_name` or `tool_guid`, but not both.
                ///   - tool_guid: The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not include a GUID in their analysis data. You can specify the tool by using either `tool_guid` or `tool_name`, but not both.
                ///   - before: A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results before this cursor. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///   - after: A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results after this cursor. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///   - page: The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///   - per_page: The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///   - direction: The direction to sort the results by.
                ///   - state: If specified, only code scanning alerts with this state will be returned.
                ///   - sort: The property by which to sort the results.
                ///   - severity: If specified, only code scanning alerts with this severity will be returned.
                public init(
                    tool_name: Components.Parameters.tool_hyphen_name? = nil,
                    tool_guid: Components.Parameters.tool_hyphen_guid? = nil,
                    before: Components.Parameters.pagination_hyphen_before? = nil,
                    after: Components.Parameters.pagination_hyphen_after? = nil,
                    page: Components.Parameters.page? = nil,
                    per_page: Components.Parameters.per_hyphen_page? = nil,
                    direction: Components.Parameters.direction? = nil,
                    state: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_state_hyphen_query? = nil,
                    sort: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.Input.Query.sortPayload? = nil,
                    severity: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_severity? = nil
                ) {
                    self.tool_name = tool_name
                    self.tool_guid = tool_guid
                    self.before = before
                    self.after = after
                    self.page = page
                    self.per_page = per_page
                    self.direction = direction
                    self.state = state
                    self.sort = sort
                    self.severity = severity
                }
            }
            public var query: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.Input.Query
            /// - Remark: Generated from `#/paths/orgs/{org}/code-scanning/alerts/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.Input.Path,
                query: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.Input.Query = .init(),
                headers: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/orgs/{org}/code-scanning/alerts/GET/responses/200/headers`.
                public struct Headers: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/orgs/{org}/code-scanning/alerts/GET/responses/200/headers/Link`.
                    public var Link: Components.Headers.link?
                    /// Creates a new `Headers`.
                    ///
                    /// - Parameters:
                    ///   - Link:
                    public init(Link: Components.Headers.link? = nil) {
                        self.Link = Link
                    }
                }
                /// Received HTTP response headers
                public var headers: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.Output.Ok.Headers
                /// - Remark: Generated from `#/paths/orgs/{org}/code-scanning/alerts/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/orgs/{org}/code-scanning/alerts/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.code_hyphen_scanning_hyphen_organization_hyphen_alert_hyphen_items])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: [Components.Schemas.code_hyphen_scanning_hyphen_organization_hyphen_alert_hyphen_items] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - headers: Received HTTP response headers
                ///   - body: Received HTTP response body
                public init(
                    headers: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.Output.Ok.Headers = .init(),
                    body: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.Output.Ok.Body
                ) {
                    self.headers = headers
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//orgs/{org}/code-scanning/alerts/get(code-scanning/list-alerts-for-org)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_org.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Resource not found
            ///
            /// - Remark: Generated from `#/paths//orgs/{org}/code-scanning/alerts/get(code-scanning/list-alerts-for-org)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses.not_found)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Components.Responses.not_found {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Service unavailable
            ///
            /// - Remark: Generated from `#/paths//orgs/{org}/code-scanning/alerts/get(code-scanning/list-alerts-for-org)/responses/503`.
            ///
            /// HTTP response code: `503 serviceUnavailable`.
            case serviceUnavailable(Components.Responses.service_unavailable)
            /// The associated value of the enum case if `self` is `.serviceUnavailable`.
            ///
            /// - Throws: An error if `self` is not `.serviceUnavailable`.
            /// - SeeAlso: `.serviceUnavailable`.
            public var serviceUnavailable: Components.Responses.service_unavailable {
                get throws {
                    switch self {
                    case let .serviceUnavailable(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "serviceUnavailable",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List code scanning alerts for a repository
    ///
    /// Lists code scanning alerts.
    ///
    /// The response includes a `most_recent_instance` object.
    /// This provides details of the most recent instance of this alert
    /// for the default branch (or for the specified Git reference if you used `ref` in the request).
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/alerts`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/get(code-scanning/list-alerts-for-repo)`.
    public enum code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo {
        public static let id: Swift.String = "code-scanning/list-alerts-for-repo"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/GET/path`.
            public struct Path: Sendable, Hashable {
                /// The account owner of the repository. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/GET/path/owner`.
                public var owner: Components.Parameters.owner
                /// The name of the repository without the `.git` extension. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/GET/path/repo`.
                public var repo: Components.Parameters.repo
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - owner: The account owner of the repository. The name is not case sensitive.
                ///   - repo: The name of the repository without the `.git` extension. The name is not case sensitive.
                public init(
                    owner: Components.Parameters.owner,
                    repo: Components.Parameters.repo
                ) {
                    self.owner = owner
                    self.repo = repo
                }
            }
            public var path: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo.Input.Path
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/GET/query`.
            public struct Query: Sendable, Hashable {
                /// The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `tool_name` or `tool_guid`, but not both.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/GET/query/tool_name`.
                public var tool_name: Components.Parameters.tool_hyphen_name?
                /// The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not include a GUID in their analysis data. You can specify the tool by using either `tool_guid` or `tool_name`, but not both.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/GET/query/tool_guid`.
                public var tool_guid: Components.Parameters.tool_hyphen_guid?
                /// The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/GET/query/page`.
                public var page: Components.Parameters.page?
                /// The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/GET/query/per_page`.
                public var per_page: Components.Parameters.per_hyphen_page?
                /// The Git reference for the results you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branch name>` or simply `<branch name>`. To reference a pull request use `refs/pull/<number>/merge`.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/GET/query/ref`.
                public var ref: Components.Parameters.git_hyphen_ref?
                /// The number of the pull request for the results you want to list.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/GET/query/pr`.
                public var pr: Components.Parameters.pr_hyphen_alias?
                /// - Remark: Generated from `#/components/parameters/direction`.
                @frozen public enum direction: String, Codable, Hashable, Sendable {
                    case asc = "asc"
                    case desc = "desc"
                }
                /// The direction to sort the results by.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/GET/query/direction`.
                public var direction: Components.Parameters.direction?
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/GET/query/sort`.
                @frozen public enum sortPayload: String, Codable, Hashable, Sendable {
                    case created = "created"
                    case updated = "updated"
                }
                /// The property by which to sort the results.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/GET/query/sort`.
                public var sort: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo.Input.Query.sortPayload?
                /// If specified, only code scanning alerts with this state will be returned.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/GET/query/state`.
                public var state: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_state_hyphen_query?
                /// If specified, only code scanning alerts with this severity will be returned.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/GET/query/severity`.
                public var severity: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_severity?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - tool_name: The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `tool_name` or `tool_guid`, but not both.
                ///   - tool_guid: The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not include a GUID in their analysis data. You can specify the tool by using either `tool_guid` or `tool_name`, but not both.
                ///   - page: The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///   - per_page: The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///   - ref: The Git reference for the results you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branch name>` or simply `<branch name>`. To reference a pull request use `refs/pull/<number>/merge`.
                ///   - pr: The number of the pull request for the results you want to list.
                ///   - direction: The direction to sort the results by.
                ///   - sort: The property by which to sort the results.
                ///   - state: If specified, only code scanning alerts with this state will be returned.
                ///   - severity: If specified, only code scanning alerts with this severity will be returned.
                public init(
                    tool_name: Components.Parameters.tool_hyphen_name? = nil,
                    tool_guid: Components.Parameters.tool_hyphen_guid? = nil,
                    page: Components.Parameters.page? = nil,
                    per_page: Components.Parameters.per_hyphen_page? = nil,
                    ref: Components.Parameters.git_hyphen_ref? = nil,
                    pr: Components.Parameters.pr_hyphen_alias? = nil,
                    direction: Components.Parameters.direction? = nil,
                    sort: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo.Input.Query.sortPayload? = nil,
                    state: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_state_hyphen_query? = nil,
                    severity: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_severity? = nil
                ) {
                    self.tool_name = tool_name
                    self.tool_guid = tool_guid
                    self.page = page
                    self.per_page = per_page
                    self.ref = ref
                    self.pr = pr
                    self.direction = direction
                    self.sort = sort
                    self.state = state
                    self.severity = severity
                }
            }
            public var query: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo.Input.Query
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo.Input.Path,
                query: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo.Input.Query = .init(),
                headers: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_items])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: [Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_items] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/get(code-scanning/list-alerts-for-repo)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.code_hyphen_scanning_sol_list_hyphen_alerts_hyphen_for_hyphen_repo.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Not modified
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/get(code-scanning/list-alerts-for-repo)/responses/304`.
            ///
            /// HTTP response code: `304 notModified`.
            case notModified(Components.Responses.not_modified)
            /// The associated value of the enum case if `self` is `.notModified`.
            ///
            /// - Throws: An error if `self` is not `.notModified`.
            /// - SeeAlso: `.notModified`.
            public var notModified: Components.Responses.not_modified {
                get throws {
                    switch self {
                    case let .notModified(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notModified",
                            response: self
                        )
                    }
                }
            }
            /// Response if GitHub Advanced Security is not enabled for this repository
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/get(code-scanning/list-alerts-for-repo)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Components.Responses.code_scanning_forbidden_read)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Components.Responses.code_scanning_forbidden_read {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            /// Resource not found
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/get(code-scanning/list-alerts-for-repo)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses.not_found)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Components.Responses.not_found {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Service unavailable
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/get(code-scanning/list-alerts-for-repo)/responses/503`.
            ///
            /// HTTP response code: `503 serviceUnavailable`.
            case serviceUnavailable(Components.Responses.service_unavailable)
            /// The associated value of the enum case if `self` is `.serviceUnavailable`.
            ///
            /// - Throws: An error if `self` is not `.serviceUnavailable`.
            /// - SeeAlso: `.serviceUnavailable`.
            public var serviceUnavailable: Components.Responses.service_unavailable {
                get throws {
                    switch self {
                    case let .serviceUnavailable(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "serviceUnavailable",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a code scanning alert
    ///
    /// Gets a single code scanning alert.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/get(code-scanning/get-alert)`.
    public enum code_hyphen_scanning_sol_get_hyphen_alert {
        public static let id: Swift.String = "code-scanning/get-alert"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// The account owner of the repository. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/GET/path/owner`.
                public var owner: Components.Parameters.owner
                /// The name of the repository without the `.git` extension. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/GET/path/repo`.
                public var repo: Components.Parameters.repo
                /// The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the `number` field in the response from the `GET /repos/{owner}/{repo}/code-scanning/alerts` operation.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/GET/path/alert_number`.
                public var alert_number: Components.Parameters.alert_hyphen_number
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - owner: The account owner of the repository. The name is not case sensitive.
                ///   - repo: The name of the repository without the `.git` extension. The name is not case sensitive.
                ///   - alert_number: The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the `number` field in the response from the `GET /repos/{owner}/{repo}/code-scanning/alerts` operation.
                public init(
                    owner: Components.Parameters.owner,
                    repo: Components.Parameters.repo,
                    alert_number: Components.Parameters.alert_hyphen_number
                ) {
                    self.owner = owner
                    self.repo = repo
                    self.alert_number = alert_number
                }
            }
            public var path: Operations.code_hyphen_scanning_sol_get_hyphen_alert.Input.Path
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_get_hyphen_alert.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_get_hyphen_alert.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.code_hyphen_scanning_sol_get_hyphen_alert.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.code_hyphen_scanning_sol_get_hyphen_alert.Input.Path,
                headers: Operations.code_hyphen_scanning_sol_get_hyphen_alert.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.code_hyphen_scanning_hyphen_alert)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.code_hyphen_scanning_hyphen_alert {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.code_hyphen_scanning_sol_get_hyphen_alert.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.code_hyphen_scanning_sol_get_hyphen_alert.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/get(code-scanning/get-alert)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.code_hyphen_scanning_sol_get_hyphen_alert.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.code_hyphen_scanning_sol_get_hyphen_alert.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Not modified
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/get(code-scanning/get-alert)/responses/304`.
            ///
            /// HTTP response code: `304 notModified`.
            case notModified(Components.Responses.not_modified)
            /// The associated value of the enum case if `self` is `.notModified`.
            ///
            /// - Throws: An error if `self` is not `.notModified`.
            /// - SeeAlso: `.notModified`.
            public var notModified: Components.Responses.not_modified {
                get throws {
                    switch self {
                    case let .notModified(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notModified",
                            response: self
                        )
                    }
                }
            }
            /// Response if GitHub Advanced Security is not enabled for this repository
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/get(code-scanning/get-alert)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Components.Responses.code_scanning_forbidden_read)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Components.Responses.code_scanning_forbidden_read {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            /// Resource not found
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/get(code-scanning/get-alert)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses.not_found)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Components.Responses.not_found {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Service unavailable
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/get(code-scanning/get-alert)/responses/503`.
            ///
            /// HTTP response code: `503 serviceUnavailable`.
            case serviceUnavailable(Components.Responses.service_unavailable)
            /// The associated value of the enum case if `self` is `.serviceUnavailable`.
            ///
            /// - Throws: An error if `self` is not `.serviceUnavailable`.
            /// - SeeAlso: `.serviceUnavailable`.
            public var serviceUnavailable: Components.Responses.service_unavailable {
                get throws {
                    switch self {
                    case let .serviceUnavailable(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "serviceUnavailable",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update a code scanning alert
    ///
    /// Updates the status of a single code scanning alert.
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/patch(code-scanning/update-alert)`.
    public enum code_hyphen_scanning_sol_update_hyphen_alert {
        public static let id: Swift.String = "code-scanning/update-alert"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/PATCH/path`.
            public struct Path: Sendable, Hashable {
                /// The account owner of the repository. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/PATCH/path/owner`.
                public var owner: Components.Parameters.owner
                /// The name of the repository without the `.git` extension. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/PATCH/path/repo`.
                public var repo: Components.Parameters.repo
                /// The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the `number` field in the response from the `GET /repos/{owner}/{repo}/code-scanning/alerts` operation.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/PATCH/path/alert_number`.
                public var alert_number: Components.Parameters.alert_hyphen_number
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - owner: The account owner of the repository. The name is not case sensitive.
                ///   - repo: The name of the repository without the `.git` extension. The name is not case sensitive.
                ///   - alert_number: The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the `number` field in the response from the `GET /repos/{owner}/{repo}/code-scanning/alerts` operation.
                public init(
                    owner: Components.Parameters.owner,
                    repo: Components.Parameters.repo,
                    alert_number: Components.Parameters.alert_hyphen_number
                ) {
                    self.owner = owner
                    self.repo = repo
                    self.alert_number = alert_number
                }
            }
            public var path: Operations.code_hyphen_scanning_sol_update_hyphen_alert.Input.Path
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/PATCH/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_update_hyphen_alert.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_update_hyphen_alert.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.code_hyphen_scanning_sol_update_hyphen_alert.Input.Headers
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/PATCH/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/PATCH/requestBody/json`.
                public struct jsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/PATCH/requestBody/json/state`.
                    public var state: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_set_hyphen_state
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/PATCH/requestBody/json/dismissed_reason`.
                    public var dismissed_reason: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_dismissed_hyphen_reason?
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/PATCH/requestBody/json/dismissed_comment`.
                    public var dismissed_comment: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_dismissed_hyphen_comment?
                    /// Creates a new `jsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - state:
                    ///   - dismissed_reason:
                    ///   - dismissed_comment:
                    public init(
                        state: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_set_hyphen_state,
                        dismissed_reason: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_dismissed_hyphen_reason? = nil,
                        dismissed_comment: Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_dismissed_hyphen_comment? = nil
                    ) {
                        self.state = state
                        self.dismissed_reason = dismissed_reason
                        self.dismissed_comment = dismissed_comment
                    }
                    public enum CodingKeys: String, CodingKey {
                        case state
                        case dismissed_reason
                        case dismissed_comment
                    }
                }
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/PATCH/requestBody/content/application\/json`.
                case json(Operations.code_hyphen_scanning_sol_update_hyphen_alert.Input.Body.jsonPayload)
            }
            public var body: Operations.code_hyphen_scanning_sol_update_hyphen_alert.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.code_hyphen_scanning_sol_update_hyphen_alert.Input.Path,
                headers: Operations.code_hyphen_scanning_sol_update_hyphen_alert.Input.Headers = .init(),
                body: Operations.code_hyphen_scanning_sol_update_hyphen_alert.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/PATCH/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/PATCH/responses/200/content/application\/json`.
                    case json(Components.Schemas.code_hyphen_scanning_hyphen_alert)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.code_hyphen_scanning_hyphen_alert {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.code_hyphen_scanning_sol_update_hyphen_alert.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.code_hyphen_scanning_sol_update_hyphen_alert.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/patch(code-scanning/update-alert)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.code_hyphen_scanning_sol_update_hyphen_alert.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.code_hyphen_scanning_sol_update_hyphen_alert.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Response if the repository is archived or if GitHub Advanced Security is not enabled for this repository
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/patch(code-scanning/update-alert)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Components.Responses.code_scanning_forbidden_write)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Components.Responses.code_scanning_forbidden_write {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            /// Resource not found
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/patch(code-scanning/update-alert)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses.not_found)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Components.Responses.not_found {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Service unavailable
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/patch(code-scanning/update-alert)/responses/503`.
            ///
            /// HTTP response code: `503 serviceUnavailable`.
            case serviceUnavailable(Components.Responses.service_unavailable)
            /// The associated value of the enum case if `self` is `.serviceUnavailable`.
            ///
            /// - Throws: An error if `self` is not `.serviceUnavailable`.
            /// - SeeAlso: `.serviceUnavailable`.
            public var serviceUnavailable: Components.Responses.service_unavailable {
                get throws {
                    switch self {
                    case let .serviceUnavailable(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "serviceUnavailable",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List instances of a code scanning alert
    ///
    /// Lists all instances of the specified code scanning alert.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances/get(code-scanning/list-alert-instances)`.
    public enum code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances {
        public static let id: Swift.String = "code-scanning/list-alert-instances"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances/GET/path`.
            public struct Path: Sendable, Hashable {
                /// The account owner of the repository. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances/GET/path/owner`.
                public var owner: Components.Parameters.owner
                /// The name of the repository without the `.git` extension. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances/GET/path/repo`.
                public var repo: Components.Parameters.repo
                /// The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the `number` field in the response from the `GET /repos/{owner}/{repo}/code-scanning/alerts` operation.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances/GET/path/alert_number`.
                public var alert_number: Components.Parameters.alert_hyphen_number
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - owner: The account owner of the repository. The name is not case sensitive.
                ///   - repo: The name of the repository without the `.git` extension. The name is not case sensitive.
                ///   - alert_number: The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the `number` field in the response from the `GET /repos/{owner}/{repo}/code-scanning/alerts` operation.
                public init(
                    owner: Components.Parameters.owner,
                    repo: Components.Parameters.repo,
                    alert_number: Components.Parameters.alert_hyphen_number
                ) {
                    self.owner = owner
                    self.repo = repo
                    self.alert_number = alert_number
                }
            }
            public var path: Operations.code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances.Input.Path
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances/GET/query`.
            public struct Query: Sendable, Hashable {
                /// The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances/GET/query/page`.
                public var page: Components.Parameters.page?
                /// The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances/GET/query/per_page`.
                public var per_page: Components.Parameters.per_hyphen_page?
                /// The Git reference for the results you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branch name>` or simply `<branch name>`. To reference a pull request use `refs/pull/<number>/merge`.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances/GET/query/ref`.
                public var ref: Components.Parameters.git_hyphen_ref?
                /// The number of the pull request for the results you want to list.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances/GET/query/pr`.
                public var pr: Components.Parameters.pr_hyphen_alias?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - page: The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///   - per_page: The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///   - ref: The Git reference for the results you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branch name>` or simply `<branch name>`. To reference a pull request use `refs/pull/<number>/merge`.
                ///   - pr: The number of the pull request for the results you want to list.
                public init(
                    page: Components.Parameters.page? = nil,
                    per_page: Components.Parameters.per_hyphen_page? = nil,
                    ref: Components.Parameters.git_hyphen_ref? = nil,
                    pr: Components.Parameters.pr_hyphen_alias? = nil
                ) {
                    self.page = page
                    self.per_page = per_page
                    self.ref = ref
                    self.pr = pr
                }
            }
            public var query: Operations.code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances.Input.Query
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances.Input.Path,
                query: Operations.code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances.Input.Query = .init(),
                headers: Operations.code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_instance])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: [Components.Schemas.code_hyphen_scanning_hyphen_alert_hyphen_instance] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances/get(code-scanning/list-alert-instances)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.code_hyphen_scanning_sol_list_hyphen_alert_hyphen_instances.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Response if GitHub Advanced Security is not enabled for this repository
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances/get(code-scanning/list-alert-instances)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Components.Responses.code_scanning_forbidden_read)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Components.Responses.code_scanning_forbidden_read {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            /// Resource not found
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances/get(code-scanning/list-alert-instances)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses.not_found)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Components.Responses.not_found {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Service unavailable
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances/get(code-scanning/list-alert-instances)/responses/503`.
            ///
            /// HTTP response code: `503 serviceUnavailable`.
            case serviceUnavailable(Components.Responses.service_unavailable)
            /// The associated value of the enum case if `self` is `.serviceUnavailable`.
            ///
            /// - Throws: An error if `self` is not `.serviceUnavailable`.
            /// - SeeAlso: `.serviceUnavailable`.
            public var serviceUnavailable: Components.Responses.service_unavailable {
                get throws {
                    switch self {
                    case let .serviceUnavailable(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "serviceUnavailable",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List code scanning analyses for a repository
    ///
    /// Lists the details of all code scanning analyses for a repository,
    /// starting with the most recent.
    /// The response is paginated and you can use the `page` and `per_page` parameters
    /// to list the analyses you're interested in.
    /// By default 30 analyses are listed per page.
    ///
    /// The `rules_count` field in the response give the number of rules
    /// that were run in the analysis.
    /// For very old analyses this data is not available,
    /// and `0` is returned in this field.
    ///
    /// > [!WARNING]
    /// > **Deprecation notice:** The `tool_name` field is deprecated and will, in future, not be included in the response for this endpoint. The example response reflects this change. The tool name can now be found inside the `tool` field.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/analyses`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/get(code-scanning/list-recent-analyses)`.
    public enum code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses {
        public static let id: Swift.String = "code-scanning/list-recent-analyses"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/GET/path`.
            public struct Path: Sendable, Hashable {
                /// The account owner of the repository. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/GET/path/owner`.
                public var owner: Components.Parameters.owner
                /// The name of the repository without the `.git` extension. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/GET/path/repo`.
                public var repo: Components.Parameters.repo
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - owner: The account owner of the repository. The name is not case sensitive.
                ///   - repo: The name of the repository without the `.git` extension. The name is not case sensitive.
                public init(
                    owner: Components.Parameters.owner,
                    repo: Components.Parameters.repo
                ) {
                    self.owner = owner
                    self.repo = repo
                }
            }
            public var path: Operations.code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses.Input.Path
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/GET/query`.
            public struct Query: Sendable, Hashable {
                /// The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `tool_name` or `tool_guid`, but not both.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/GET/query/tool_name`.
                public var tool_name: Components.Parameters.tool_hyphen_name?
                /// The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not include a GUID in their analysis data. You can specify the tool by using either `tool_guid` or `tool_name`, but not both.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/GET/query/tool_guid`.
                public var tool_guid: Components.Parameters.tool_hyphen_guid?
                /// The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/GET/query/page`.
                public var page: Components.Parameters.page?
                /// The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/GET/query/per_page`.
                public var per_page: Components.Parameters.per_hyphen_page?
                /// The number of the pull request for the results you want to list.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/GET/query/pr`.
                public var pr: Components.Parameters.pr_hyphen_alias?
                /// The Git reference for the analyses you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branch name>` or simply `<branch name>`. To reference a pull request use `refs/pull/<number>/merge`.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/GET/query/ref`.
                public var ref: Components.Schemas.code_hyphen_scanning_hyphen_ref?
                /// Filter analyses belonging to the same SARIF upload.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/GET/query/sarif_id`.
                public var sarif_id: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_sarif_hyphen_id?
                /// - Remark: Generated from `#/components/parameters/direction`.
                @frozen public enum direction: String, Codable, Hashable, Sendable {
                    case asc = "asc"
                    case desc = "desc"
                }
                /// The direction to sort the results by.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/GET/query/direction`.
                public var direction: Components.Parameters.direction?
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/GET/query/sort`.
                @frozen public enum sortPayload: String, Codable, Hashable, Sendable {
                    case created = "created"
                }
                /// The property by which to sort the results.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/GET/query/sort`.
                public var sort: Operations.code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses.Input.Query.sortPayload?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - tool_name: The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `tool_name` or `tool_guid`, but not both.
                ///   - tool_guid: The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not include a GUID in their analysis data. You can specify the tool by using either `tool_guid` or `tool_name`, but not both.
                ///   - page: The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///   - per_page: The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///   - pr: The number of the pull request for the results you want to list.
                ///   - ref: The Git reference for the analyses you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branch name>` or simply `<branch name>`. To reference a pull request use `refs/pull/<number>/merge`.
                ///   - sarif_id: Filter analyses belonging to the same SARIF upload.
                ///   - direction: The direction to sort the results by.
                ///   - sort: The property by which to sort the results.
                public init(
                    tool_name: Components.Parameters.tool_hyphen_name? = nil,
                    tool_guid: Components.Parameters.tool_hyphen_guid? = nil,
                    page: Components.Parameters.page? = nil,
                    per_page: Components.Parameters.per_hyphen_page? = nil,
                    pr: Components.Parameters.pr_hyphen_alias? = nil,
                    ref: Components.Schemas.code_hyphen_scanning_hyphen_ref? = nil,
                    sarif_id: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_sarif_hyphen_id? = nil,
                    direction: Components.Parameters.direction? = nil,
                    sort: Operations.code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses.Input.Query.sortPayload? = nil
                ) {
                    self.tool_name = tool_name
                    self.tool_guid = tool_guid
                    self.page = page
                    self.per_page = per_page
                    self.pr = pr
                    self.ref = ref
                    self.sarif_id = sarif_id
                    self.direction = direction
                    self.sort = sort
                }
            }
            public var query: Operations.code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses.Input.Query
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses.Input.Path,
                query: Operations.code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses.Input.Query = .init(),
                headers: Operations.code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.code_hyphen_scanning_hyphen_analysis])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: [Components.Schemas.code_hyphen_scanning_hyphen_analysis] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/get(code-scanning/list-recent-analyses)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.code_hyphen_scanning_sol_list_hyphen_recent_hyphen_analyses.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Response if GitHub Advanced Security is not enabled for this repository
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/get(code-scanning/list-recent-analyses)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Components.Responses.code_scanning_forbidden_read)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Components.Responses.code_scanning_forbidden_read {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            /// Resource not found
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/get(code-scanning/list-recent-analyses)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses.not_found)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Components.Responses.not_found {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Service unavailable
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/get(code-scanning/list-recent-analyses)/responses/503`.
            ///
            /// HTTP response code: `503 serviceUnavailable`.
            case serviceUnavailable(Components.Responses.service_unavailable)
            /// The associated value of the enum case if `self` is `.serviceUnavailable`.
            ///
            /// - Throws: An error if `self` is not `.serviceUnavailable`.
            /// - SeeAlso: `.serviceUnavailable`.
            public var serviceUnavailable: Components.Responses.service_unavailable {
                get throws {
                    switch self {
                    case let .serviceUnavailable(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "serviceUnavailable",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a code scanning analysis for a repository
    ///
    /// Gets a specified code scanning analysis for a repository.
    ///
    /// The default JSON response contains fields that describe the analysis.
    /// This includes the Git reference and commit SHA to which the analysis relates,
    /// the datetime of the analysis, the name of the code scanning tool,
    /// and the number of alerts.
    ///
    /// The `rules_count` field in the default response give the number of rules
    /// that were run in the analysis.
    /// For very old analyses this data is not available,
    /// and `0` is returned in this field.
    ///
    /// This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."
    ///
    /// - **`application/sarif+json`**: Instead of returning a summary of the analysis, this endpoint returns a subset of the analysis data that was uploaded. The data is formatted as [SARIF version 2.1.0](https://docs.oasis-open.org/sarif/sarif/v2.1.0/cs01/sarif-v2.1.0-cs01.html). It also returns additional data such as the `github/alertNumber` and `github/alertUrl` properties.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/get(code-scanning/get-analysis)`.
    public enum code_hyphen_scanning_sol_get_hyphen_analysis {
        public static let id: Swift.String = "code-scanning/get-analysis"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// The account owner of the repository. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/GET/path/owner`.
                public var owner: Components.Parameters.owner
                /// The name of the repository without the `.git` extension. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/GET/path/repo`.
                public var repo: Components.Parameters.repo
                /// The ID of the analysis, as returned from the `GET /repos/{owner}/{repo}/code-scanning/analyses` operation.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/GET/path/analysis_id`.
                public var analysis_id: Swift.Int
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - owner: The account owner of the repository. The name is not case sensitive.
                ///   - repo: The name of the repository without the `.git` extension. The name is not case sensitive.
                ///   - analysis_id: The ID of the analysis, as returned from the `GET /repos/{owner}/{repo}/code-scanning/analyses` operation.
                public init(
                    owner: Components.Parameters.owner,
                    repo: Components.Parameters.repo,
                    analysis_id: Swift.Int
                ) {
                    self.owner = owner
                    self.repo = repo
                    self.analysis_id = analysis_id
                }
            }
            public var path: Operations.code_hyphen_scanning_sol_get_hyphen_analysis.Input.Path
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_get_hyphen_analysis.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_get_hyphen_analysis.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.code_hyphen_scanning_sol_get_hyphen_analysis.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.code_hyphen_scanning_sol_get_hyphen_analysis.Input.Path,
                headers: Operations.code_hyphen_scanning_sol_get_hyphen_analysis.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.code_hyphen_scanning_hyphen_analysis)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.code_hyphen_scanning_hyphen_analysis {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/json",
                                    body: self
                                )
                            }
                        }
                    }
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/GET/responses/200/content/application\/json+sarif`.
                    case application_json_plus_sarif(OpenAPIRuntime.HTTPBody)
                    /// The associated value of the enum case if `self` is `.application_json_plus_sarif`.
                    ///
                    /// - Throws: An error if `self` is not `.application_json_plus_sarif`.
                    /// - SeeAlso: `.application_json_plus_sarif`.
                    public var application_json_plus_sarif: OpenAPIRuntime.HTTPBody {
                        get throws {
                            switch self {
                            case let .application_json_plus_sarif(body):
                                return body
                            default:
                                try throwUnexpectedResponseBody(
                                    expectedContent: "application/json+sarif",
                                    body: self
                                )
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.code_hyphen_scanning_sol_get_hyphen_analysis.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.code_hyphen_scanning_sol_get_hyphen_analysis.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/get(code-scanning/get-analysis)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.code_hyphen_scanning_sol_get_hyphen_analysis.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.code_hyphen_scanning_sol_get_hyphen_analysis.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Response if GitHub Advanced Security is not enabled for this repository
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/get(code-scanning/get-analysis)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Components.Responses.code_scanning_forbidden_read)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Components.Responses.code_scanning_forbidden_read {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            /// Resource not found
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/get(code-scanning/get-analysis)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses.not_found)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Components.Responses.not_found {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Service unavailable
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/get(code-scanning/get-analysis)/responses/503`.
            ///
            /// HTTP response code: `503 serviceUnavailable`.
            case serviceUnavailable(Components.Responses.service_unavailable)
            /// The associated value of the enum case if `self` is `.serviceUnavailable`.
            ///
            /// - Throws: An error if `self` is not `.serviceUnavailable`.
            /// - SeeAlso: `.serviceUnavailable`.
            public var serviceUnavailable: Components.Responses.service_unavailable {
                get throws {
                    switch self {
                    case let .serviceUnavailable(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "serviceUnavailable",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case application_json_plus_sarif
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                case "application/json+sarif":
                    self = .application_json_plus_sarif
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                case .application_json_plus_sarif:
                    return "application/json+sarif"
                }
            }
            public static var allCases: [Self] {
                [
                    .json,
                    .application_json_plus_sarif
                ]
            }
        }
    }
    /// Delete a code scanning analysis from a repository
    ///
    /// Deletes a specified code scanning analysis from a repository.
    ///
    /// You can delete one analysis at a time.
    /// To delete a series of analyses, start with the most recent analysis and work backwards.
    /// Conceptually, the process is similar to the undo function in a text editor.
    ///
    /// When you list the analyses for a repository,
    /// one or more will be identified as deletable in the response:
    ///
    /// ```
    /// "deletable": true
    /// ```
    ///
    /// An analysis is deletable when it's the most recent in a set of analyses.
    /// Typically, a repository will have multiple sets of analyses
    /// for each enabled code scanning tool,
    /// where a set is determined by a unique combination of analysis values:
    ///
    /// * `ref`
    /// * `tool`
    /// * `category`
    ///
    /// If you attempt to delete an analysis that is not the most recent in a set,
    /// you'll get a 400 response with the message:
    ///
    /// ```
    /// Analysis specified is not deletable.
    /// ```
    ///
    /// The response from a successful `DELETE` operation provides you with
    /// two alternative URLs for deleting the next analysis in the set:
    /// `next_analysis_url` and `confirm_delete_url`.
    /// Use the `next_analysis_url` URL if you want to avoid accidentally deleting the final analysis
    /// in a set. This is a useful option if you want to preserve at least one analysis
    /// for the specified tool in your repository.
    /// Use the `confirm_delete_url` URL if you are content to remove all analyses for a tool.
    /// When you delete the last analysis in a set, the value of `next_analysis_url` and `confirm_delete_url`
    /// in the 200 response is `null`.
    ///
    /// As an example of the deletion process,
    /// let's imagine that you added a workflow that configured a particular code scanning tool
    /// to analyze the code in a repository. This tool has added 15 analyses:
    /// 10 on the default branch, and another 5 on a topic branch.
    /// You therefore have two separate sets of analyses for this tool.
    /// You've now decided that you want to remove all of the analyses for the tool.
    /// To do this you must make 15 separate deletion requests.
    /// To start, you must find an analysis that's identified as deletable.
    /// Each set of analyses always has one that's identified as deletable.
    /// Having found the deletable analysis for one of the two sets,
    /// delete this analysis and then continue deleting the next analysis in the set until they're all deleted.
    /// Then repeat the process for the second set.
    /// The procedure therefore consists of a nested loop:
    ///
    /// **Outer loop**:
    /// * List the analyses for the repository, filtered by tool.
    /// * Parse this list to find a deletable analysis. If found:
    ///
    ///   **Inner loop**:
    ///   * Delete the identified analysis.
    ///   * Parse the response for the value of `confirm_delete_url` and, if found, use this in the next iteration.
    ///
    /// The above process assumes that you want to remove all trace of the tool's analyses from the GitHub user interface, for the specified repository, and it therefore uses the `confirm_delete_url` value. Alternatively, you could use the `next_analysis_url` value, which would leave the last analysis in each set undeleted to avoid removing a tool's analysis entirely.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/delete(code-scanning/delete-analysis)`.
    public enum code_hyphen_scanning_sol_delete_hyphen_analysis {
        public static let id: Swift.String = "code-scanning/delete-analysis"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/DELETE/path`.
            public struct Path: Sendable, Hashable {
                /// The account owner of the repository. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/DELETE/path/owner`.
                public var owner: Components.Parameters.owner
                /// The name of the repository without the `.git` extension. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/DELETE/path/repo`.
                public var repo: Components.Parameters.repo
                /// The ID of the analysis, as returned from the `GET /repos/{owner}/{repo}/code-scanning/analyses` operation.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/DELETE/path/analysis_id`.
                public var analysis_id: Swift.Int
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - owner: The account owner of the repository. The name is not case sensitive.
                ///   - repo: The name of the repository without the `.git` extension. The name is not case sensitive.
                ///   - analysis_id: The ID of the analysis, as returned from the `GET /repos/{owner}/{repo}/code-scanning/analyses` operation.
                public init(
                    owner: Components.Parameters.owner,
                    repo: Components.Parameters.repo,
                    analysis_id: Swift.Int
                ) {
                    self.owner = owner
                    self.repo = repo
                    self.analysis_id = analysis_id
                }
            }
            public var path: Operations.code_hyphen_scanning_sol_delete_hyphen_analysis.Input.Path
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/DELETE/query`.
            public struct Query: Sendable, Hashable {
                /// Allow deletion if the specified analysis is the last in a set. If you attempt to delete the final analysis in a set without setting this parameter to `true`, you'll get a 400 response with the message: `Analysis is last of its type and deletion may result in the loss of historical alert data. Please specify confirm_delete.`
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/DELETE/query/confirm_delete`.
                public var confirm_delete: Swift.String?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - confirm_delete: Allow deletion if the specified analysis is the last in a set. If you attempt to delete the final analysis in a set without setting this parameter to `true`, you'll get a 400 response with the message: `Analysis is last of its type and deletion may result in the loss of historical alert data. Please specify confirm_delete.`
                public init(confirm_delete: Swift.String? = nil) {
                    self.confirm_delete = confirm_delete
                }
            }
            public var query: Operations.code_hyphen_scanning_sol_delete_hyphen_analysis.Input.Query
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/DELETE/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_delete_hyphen_analysis.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_delete_hyphen_analysis.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.code_hyphen_scanning_sol_delete_hyphen_analysis.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.code_hyphen_scanning_sol_delete_hyphen_analysis.Input.Path,
                query: Operations.code_hyphen_scanning_sol_delete_hyphen_analysis.Input.Query = .init(),
                headers: Operations.code_hyphen_scanning_sol_delete_hyphen_analysis.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/DELETE/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/DELETE/responses/200/content/application\/json`.
                    case json(Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_deletion)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_deletion {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.code_hyphen_scanning_sol_delete_hyphen_analysis.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.code_hyphen_scanning_sol_delete_hyphen_analysis.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/delete(code-scanning/delete-analysis)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.code_hyphen_scanning_sol_delete_hyphen_analysis.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.code_hyphen_scanning_sol_delete_hyphen_analysis.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Bad Request
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/delete(code-scanning/delete-analysis)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Components.Responses.bad_request)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Components.Responses.bad_request {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            /// Response if the repository is archived or if GitHub Advanced Security is not enabled for this repository
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/delete(code-scanning/delete-analysis)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Components.Responses.code_scanning_forbidden_write)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Components.Responses.code_scanning_forbidden_write {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            /// Resource not found
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/delete(code-scanning/delete-analysis)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses.not_found)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Components.Responses.not_found {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Service unavailable
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}/delete(code-scanning/delete-analysis)/responses/503`.
            ///
            /// HTTP response code: `503 serviceUnavailable`.
            case serviceUnavailable(Components.Responses.service_unavailable)
            /// The associated value of the enum case if `self` is `.serviceUnavailable`.
            ///
            /// - Throws: An error if `self` is not `.serviceUnavailable`.
            /// - SeeAlso: `.serviceUnavailable`.
            public var serviceUnavailable: Components.Responses.service_unavailable {
                get throws {
                    switch self {
                    case let .serviceUnavailable(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "serviceUnavailable",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case application_scim_plus_json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                case "application/scim+json":
                    self = .application_scim_plus_json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                case .application_scim_plus_json:
                    return "application/scim+json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json,
                    .application_scim_plus_json
                ]
            }
        }
    }
    /// List CodeQL databases for a repository
    ///
    /// Lists the CodeQL databases that are available in a repository.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/codeql/databases`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/databases/get(code-scanning/list-codeql-databases)`.
    public enum code_hyphen_scanning_sol_list_hyphen_codeql_hyphen_databases {
        public static let id: Swift.String = "code-scanning/list-codeql-databases"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/databases/GET/path`.
            public struct Path: Sendable, Hashable {
                /// The account owner of the repository. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/databases/GET/path/owner`.
                public var owner: Components.Parameters.owner
                /// The name of the repository without the `.git` extension. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/databases/GET/path/repo`.
                public var repo: Components.Parameters.repo
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - owner: The account owner of the repository. The name is not case sensitive.
                ///   - repo: The name of the repository without the `.git` extension. The name is not case sensitive.
                public init(
                    owner: Components.Parameters.owner,
                    repo: Components.Parameters.repo
                ) {
                    self.owner = owner
                    self.repo = repo
                }
            }
            public var path: Operations.code_hyphen_scanning_sol_list_hyphen_codeql_hyphen_databases.Input.Path
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/databases/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_list_hyphen_codeql_hyphen_databases.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_list_hyphen_codeql_hyphen_databases.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.code_hyphen_scanning_sol_list_hyphen_codeql_hyphen_databases.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.code_hyphen_scanning_sol_list_hyphen_codeql_hyphen_databases.Input.Path,
                headers: Operations.code_hyphen_scanning_sol_list_hyphen_codeql_hyphen_databases.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/databases/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/databases/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.code_hyphen_scanning_hyphen_codeql_hyphen_database])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: [Components.Schemas.code_hyphen_scanning_hyphen_codeql_hyphen_database] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.code_hyphen_scanning_sol_list_hyphen_codeql_hyphen_databases.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.code_hyphen_scanning_sol_list_hyphen_codeql_hyphen_databases.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/databases/get(code-scanning/list-codeql-databases)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.code_hyphen_scanning_sol_list_hyphen_codeql_hyphen_databases.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.code_hyphen_scanning_sol_list_hyphen_codeql_hyphen_databases.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Response if GitHub Advanced Security is not enabled for this repository
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/databases/get(code-scanning/list-codeql-databases)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Components.Responses.code_scanning_forbidden_read)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Components.Responses.code_scanning_forbidden_read {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            /// Resource not found
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/databases/get(code-scanning/list-codeql-databases)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses.not_found)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Components.Responses.not_found {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Service unavailable
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/databases/get(code-scanning/list-codeql-databases)/responses/503`.
            ///
            /// HTTP response code: `503 serviceUnavailable`.
            case serviceUnavailable(Components.Responses.service_unavailable)
            /// The associated value of the enum case if `self` is `.serviceUnavailable`.
            ///
            /// - Throws: An error if `self` is not `.serviceUnavailable`.
            /// - SeeAlso: `.serviceUnavailable`.
            public var serviceUnavailable: Components.Responses.service_unavailable {
                get throws {
                    switch self {
                    case let .serviceUnavailable(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "serviceUnavailable",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a CodeQL database for a repository
    ///
    /// Gets a CodeQL database for a language in a repository.
    ///
    /// By default this endpoint returns JSON metadata about the CodeQL database. To
    /// download the CodeQL database binary content, set the `Accept` header of the request
    /// to [`application/zip`](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types), and make sure
    /// your HTTP client is configured to follow redirects or use the `Location` header
    /// to make a second request to get the redirect URL.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/databases/{language}/get(code-scanning/get-codeql-database)`.
    public enum code_hyphen_scanning_sol_get_hyphen_codeql_hyphen_database {
        public static let id: Swift.String = "code-scanning/get-codeql-database"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/databases/{language}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// The account owner of the repository. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/databases/{language}/GET/path/owner`.
                public var owner: Components.Parameters.owner
                /// The name of the repository without the `.git` extension. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/databases/{language}/GET/path/repo`.
                public var repo: Components.Parameters.repo
                /// The language of the CodeQL database.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/databases/{language}/GET/path/language`.
                public var language: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - owner: The account owner of the repository. The name is not case sensitive.
                ///   - repo: The name of the repository without the `.git` extension. The name is not case sensitive.
                ///   - language: The language of the CodeQL database.
                public init(
                    owner: Components.Parameters.owner,
                    repo: Components.Parameters.repo,
                    language: Swift.String
                ) {
                    self.owner = owner
                    self.repo = repo
                    self.language = language
                }
            }
            public var path: Operations.code_hyphen_scanning_sol_get_hyphen_codeql_hyphen_database.Input.Path
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/databases/{language}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_get_hyphen_codeql_hyphen_database.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_get_hyphen_codeql_hyphen_database.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.code_hyphen_scanning_sol_get_hyphen_codeql_hyphen_database.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.code_hyphen_scanning_sol_get_hyphen_codeql_hyphen_database.Input.Path,
                headers: Operations.code_hyphen_scanning_sol_get_hyphen_codeql_hyphen_database.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/databases/{language}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/databases/{language}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.code_hyphen_scanning_hyphen_codeql_hyphen_database)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.code_hyphen_scanning_hyphen_codeql_hyphen_database {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.code_hyphen_scanning_sol_get_hyphen_codeql_hyphen_database.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.code_hyphen_scanning_sol_get_hyphen_codeql_hyphen_database.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/databases/{language}/get(code-scanning/get-codeql-database)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.code_hyphen_scanning_sol_get_hyphen_codeql_hyphen_database.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.code_hyphen_scanning_sol_get_hyphen_codeql_hyphen_database.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Found
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/databases/{language}/get(code-scanning/get-codeql-database)/responses/302`.
            ///
            /// HTTP response code: `302 found`.
            case found(Components.Responses.found)
            /// The associated value of the enum case if `self` is `.found`.
            ///
            /// - Throws: An error if `self` is not `.found`.
            /// - SeeAlso: `.found`.
            public var found: Components.Responses.found {
                get throws {
                    switch self {
                    case let .found(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "found",
                            response: self
                        )
                    }
                }
            }
            /// Response if GitHub Advanced Security is not enabled for this repository
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/databases/{language}/get(code-scanning/get-codeql-database)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Components.Responses.code_scanning_forbidden_read)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Components.Responses.code_scanning_forbidden_read {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            /// Resource not found
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/databases/{language}/get(code-scanning/get-codeql-database)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses.not_found)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Components.Responses.not_found {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Service unavailable
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/databases/{language}/get(code-scanning/get-codeql-database)/responses/503`.
            ///
            /// HTTP response code: `503 serviceUnavailable`.
            case serviceUnavailable(Components.Responses.service_unavailable)
            /// The associated value of the enum case if `self` is `.serviceUnavailable`.
            ///
            /// - Throws: An error if `self` is not `.serviceUnavailable`.
            /// - SeeAlso: `.serviceUnavailable`.
            public var serviceUnavailable: Components.Responses.service_unavailable {
                get throws {
                    switch self {
                    case let .serviceUnavailable(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "serviceUnavailable",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Create a CodeQL variant analysis
    ///
    /// Creates a new CodeQL variant analysis, which will run a CodeQL query against one or more repositories.
    ///
    /// Get started by learning more about [running CodeQL queries at scale with Multi-Repository Variant Analysis](https://docs.github.com/code-security/codeql-for-vs-code/getting-started-with-codeql-for-vs-code/running-codeql-queries-at-scale-with-multi-repository-variant-analysis).
    ///
    /// Use the `owner` and `repo` parameters in the URL to specify the controller repository that
    /// will be used for running GitHub Actions workflows and storing the results of the CodeQL variant analysis.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.
    ///
    /// - Remark: HTTP `POST /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/post(code-scanning/create-variant-analysis)`.
    public enum code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis {
        public static let id: Swift.String = "code-scanning/create-variant-analysis"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/POST/path`.
            public struct Path: Sendable, Hashable {
                /// The account owner of the repository. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/POST/path/owner`.
                public var owner: Components.Parameters.owner
                /// The name of the repository without the `.git` extension. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/POST/path/repo`.
                public var repo: Components.Parameters.repo
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - owner: The account owner of the repository. The name is not case sensitive.
                ///   - repo: The name of the repository without the `.git` extension. The name is not case sensitive.
                public init(
                    owner: Components.Parameters.owner,
                    repo: Components.Parameters.repo
                ) {
                    self.owner = owner
                    self.repo = repo
                }
            }
            public var path: Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Input.Path
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Input.Headers
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/POST/requestBody/json`.
                @frozen public enum jsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/POST/requestBody/json/case1`.
                    public struct Case1Payload: Codable, Hashable, Sendable {
                        /// Creates a new `Case1Payload`.
                        public init() {}
                    }
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/POST/requestBody/json/case1`.
                    case case1(Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Input.Body.jsonPayload.Case1Payload)
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/POST/requestBody/json/case2`.
                    public struct Case2Payload: Codable, Hashable, Sendable {
                        /// Creates a new `Case2Payload`.
                        public init() {}
                    }
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/POST/requestBody/json/case2`.
                    case case2(Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Input.Body.jsonPayload.Case2Payload)
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/POST/requestBody/json/case3`.
                    public struct Case3Payload: Codable, Hashable, Sendable {
                        /// Creates a new `Case3Payload`.
                        public init() {}
                    }
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/POST/requestBody/json/case3`.
                    case case3(Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Input.Body.jsonPayload.Case3Payload)
                    public init(from decoder: any Decoder) throws {
                        var errors: [any Error] = []
                        do {
                            self = .case1(try .init(from: decoder))
                            return
                        } catch {
                            errors.append(error)
                        }
                        do {
                            self = .case2(try .init(from: decoder))
                            return
                        } catch {
                            errors.append(error)
                        }
                        do {
                            self = .case3(try .init(from: decoder))
                            return
                        } catch {
                            errors.append(error)
                        }
                        throw Swift.DecodingError.failedToDecodeOneOfSchema(
                            type: Self.self,
                            codingPath: decoder.codingPath,
                            errors: errors
                        )
                    }
                    public func encode(to encoder: any Encoder) throws {
                        switch self {
                        case let .case1(value):
                            try value.encode(to: encoder)
                        case let .case2(value):
                            try value.encode(to: encoder)
                        case let .case3(value):
                            try value.encode(to: encoder)
                        }
                    }
                }
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/POST/requestBody/content/application\/json`.
                case json(Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Input.Body.jsonPayload)
            }
            public var body: Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Input.Path,
                headers: Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Input.Headers = .init(),
                body: Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/POST/responses/201/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Variant analysis submitted for processing
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/post(code-scanning/create-variant-analysis)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Resource not found
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/post(code-scanning/create-variant-analysis)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses.not_found)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Components.Responses.not_found {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/POST/responses/422/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/POST/responses/422/content/application\/json`.
                    case json(Components.Schemas.basic_hyphen_error)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.basic_hyphen_error {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unable to process variant analysis submission
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/post(code-scanning/create-variant-analysis)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            public var unprocessableContent: Operations.code_hyphen_scanning_sol_create_hyphen_variant_hyphen_analysis.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            /// Service unavailable
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/post(code-scanning/create-variant-analysis)/responses/503`.
            ///
            /// HTTP response code: `503 serviceUnavailable`.
            case serviceUnavailable(Components.Responses.service_unavailable)
            /// The associated value of the enum case if `self` is `.serviceUnavailable`.
            ///
            /// - Throws: An error if `self` is not `.serviceUnavailable`.
            /// - SeeAlso: `.serviceUnavailable`.
            public var serviceUnavailable: Components.Responses.service_unavailable {
                get throws {
                    switch self {
                    case let .serviceUnavailable(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "serviceUnavailable",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get the summary of a CodeQL variant analysis
    ///
    /// Gets the summary of a CodeQL variant analysis.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/get(code-scanning/get-variant-analysis)`.
    public enum code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis {
        public static let id: Swift.String = "code-scanning/get-variant-analysis"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// The account owner of the repository. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/GET/path/owner`.
                public var owner: Components.Parameters.owner
                /// The name of the repository without the `.git` extension. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/GET/path/repo`.
                public var repo: Components.Parameters.repo
                /// The unique identifier of the variant analysis.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/GET/path/codeql_variant_analysis_id`.
                public var codeql_variant_analysis_id: Swift.Int
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - owner: The account owner of the repository. The name is not case sensitive.
                ///   - repo: The name of the repository without the `.git` extension. The name is not case sensitive.
                ///   - codeql_variant_analysis_id: The unique identifier of the variant analysis.
                public init(
                    owner: Components.Parameters.owner,
                    repo: Components.Parameters.repo,
                    codeql_variant_analysis_id: Swift.Int
                ) {
                    self.owner = owner
                    self.repo = repo
                    self.codeql_variant_analysis_id = codeql_variant_analysis_id
                }
            }
            public var path: Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis.Input.Path
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis.Input.Path,
                headers: Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/get(code-scanning/get-variant-analysis)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Resource not found
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/get(code-scanning/get-variant-analysis)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses.not_found)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Components.Responses.not_found {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Service unavailable
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/get(code-scanning/get-variant-analysis)/responses/503`.
            ///
            /// HTTP response code: `503 serviceUnavailable`.
            case serviceUnavailable(Components.Responses.service_unavailable)
            /// The associated value of the enum case if `self` is `.serviceUnavailable`.
            ///
            /// - Throws: An error if `self` is not `.serviceUnavailable`.
            /// - SeeAlso: `.serviceUnavailable`.
            public var serviceUnavailable: Components.Responses.service_unavailable {
                get throws {
                    switch self {
                    case let .serviceUnavailable(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "serviceUnavailable",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get the analysis status of a repository in a CodeQL variant analysis
    ///
    /// Gets the analysis status of a repository in a CodeQL variant analysis.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}/get(code-scanning/get-variant-analysis-repo-task)`.
    public enum code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task {
        public static let id: Swift.String = "code-scanning/get-variant-analysis-repo-task"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// The account owner of the repository. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}/GET/path/owner`.
                public var owner: Components.Parameters.owner
                /// The name of the controller repository.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}/GET/path/repo`.
                public var repo: Swift.String
                /// The ID of the variant analysis.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}/GET/path/codeql_variant_analysis_id`.
                public var codeql_variant_analysis_id: Swift.Int
                /// The account owner of the variant analysis repository. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}/GET/path/repo_owner`.
                public var repo_owner: Swift.String
                /// The name of the variant analysis repository.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}/GET/path/repo_name`.
                public var repo_name: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - owner: The account owner of the repository. The name is not case sensitive.
                ///   - repo: The name of the controller repository.
                ///   - codeql_variant_analysis_id: The ID of the variant analysis.
                ///   - repo_owner: The account owner of the variant analysis repository. The name is not case sensitive.
                ///   - repo_name: The name of the variant analysis repository.
                public init(
                    owner: Components.Parameters.owner,
                    repo: Swift.String,
                    codeql_variant_analysis_id: Swift.Int,
                    repo_owner: Swift.String,
                    repo_name: Swift.String
                ) {
                    self.owner = owner
                    self.repo = repo
                    self.codeql_variant_analysis_id = codeql_variant_analysis_id
                    self.repo_owner = repo_owner
                    self.repo_name = repo_name
                }
            }
            public var path: Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task.Input.Path
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task.Input.Path,
                headers: Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.code_hyphen_scanning_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}/get(code-scanning/get-variant-analysis-repo-task)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.code_hyphen_scanning_sol_get_hyphen_variant_hyphen_analysis_hyphen_repo_hyphen_task.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Resource not found
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}/get(code-scanning/get-variant-analysis-repo-task)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses.not_found)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Components.Responses.not_found {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Service unavailable
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}/get(code-scanning/get-variant-analysis-repo-task)/responses/503`.
            ///
            /// HTTP response code: `503 serviceUnavailable`.
            case serviceUnavailable(Components.Responses.service_unavailable)
            /// The associated value of the enum case if `self` is `.serviceUnavailable`.
            ///
            /// - Throws: An error if `self` is not `.serviceUnavailable`.
            /// - SeeAlso: `.serviceUnavailable`.
            public var serviceUnavailable: Components.Responses.service_unavailable {
                get throws {
                    switch self {
                    case let .serviceUnavailable(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "serviceUnavailable",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a code scanning default setup configuration
    ///
    /// Gets a code scanning default setup configuration.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/default-setup`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/default-setup/get(code-scanning/get-default-setup)`.
    public enum code_hyphen_scanning_sol_get_hyphen_default_hyphen_setup {
        public static let id: Swift.String = "code-scanning/get-default-setup"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/default-setup/GET/path`.
            public struct Path: Sendable, Hashable {
                /// The account owner of the repository. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/default-setup/GET/path/owner`.
                public var owner: Components.Parameters.owner
                /// The name of the repository without the `.git` extension. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/default-setup/GET/path/repo`.
                public var repo: Components.Parameters.repo
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - owner: The account owner of the repository. The name is not case sensitive.
                ///   - repo: The name of the repository without the `.git` extension. The name is not case sensitive.
                public init(
                    owner: Components.Parameters.owner,
                    repo: Components.Parameters.repo
                ) {
                    self.owner = owner
                    self.repo = repo
                }
            }
            public var path: Operations.code_hyphen_scanning_sol_get_hyphen_default_hyphen_setup.Input.Path
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/default-setup/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_get_hyphen_default_hyphen_setup.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_get_hyphen_default_hyphen_setup.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.code_hyphen_scanning_sol_get_hyphen_default_hyphen_setup.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.code_hyphen_scanning_sol_get_hyphen_default_hyphen_setup.Input.Path,
                headers: Operations.code_hyphen_scanning_sol_get_hyphen_default_hyphen_setup.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/default-setup/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/default-setup/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.code_hyphen_scanning_sol_get_hyphen_default_hyphen_setup.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.code_hyphen_scanning_sol_get_hyphen_default_hyphen_setup.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/default-setup/get(code-scanning/get-default-setup)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.code_hyphen_scanning_sol_get_hyphen_default_hyphen_setup.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.code_hyphen_scanning_sol_get_hyphen_default_hyphen_setup.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Response if GitHub Advanced Security is not enabled for this repository
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/default-setup/get(code-scanning/get-default-setup)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Components.Responses.code_scanning_forbidden_read)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Components.Responses.code_scanning_forbidden_read {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            /// Resource not found
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/default-setup/get(code-scanning/get-default-setup)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses.not_found)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Components.Responses.not_found {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Service unavailable
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/default-setup/get(code-scanning/get-default-setup)/responses/503`.
            ///
            /// HTTP response code: `503 serviceUnavailable`.
            case serviceUnavailable(Components.Responses.service_unavailable)
            /// The associated value of the enum case if `self` is `.serviceUnavailable`.
            ///
            /// - Throws: An error if `self` is not `.serviceUnavailable`.
            /// - SeeAlso: `.serviceUnavailable`.
            public var serviceUnavailable: Components.Responses.service_unavailable {
                get throws {
                    switch self {
                    case let .serviceUnavailable(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "serviceUnavailable",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Update a code scanning default setup configuration
    ///
    /// Updates a code scanning default setup configuration.
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `PATCH /repos/{owner}/{repo}/code-scanning/default-setup`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/default-setup/patch(code-scanning/update-default-setup)`.
    public enum code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup {
        public static let id: Swift.String = "code-scanning/update-default-setup"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/default-setup/PATCH/path`.
            public struct Path: Sendable, Hashable {
                /// The account owner of the repository. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/default-setup/PATCH/path/owner`.
                public var owner: Components.Parameters.owner
                /// The name of the repository without the `.git` extension. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/default-setup/PATCH/path/repo`.
                public var repo: Components.Parameters.repo
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - owner: The account owner of the repository. The name is not case sensitive.
                ///   - repo: The name of the repository without the `.git` extension. The name is not case sensitive.
                public init(
                    owner: Components.Parameters.owner,
                    repo: Components.Parameters.repo
                ) {
                    self.owner = owner
                    self.repo = repo
                }
            }
            public var path: Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.Input.Path
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/default-setup/PATCH/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.Input.Headers
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/default-setup/PATCH/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/default-setup/PATCH/requestBody/content/application\/json`.
                case json(Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup_hyphen_update)
            }
            public var body: Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.Input.Path,
                headers: Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.Input.Headers = .init(),
                body: Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/default-setup/PATCH/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/default-setup/PATCH/responses/200/content/application\/json`.
                    case json(Components.Schemas.empty_hyphen_object)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.empty_hyphen_object {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/default-setup/patch(code-scanning/update-default-setup)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            public struct Accepted: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/default-setup/PATCH/responses/202/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/default-setup/PATCH/responses/202/content/application\/json`.
                    case json(Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup_hyphen_update_hyphen_response)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.code_hyphen_scanning_hyphen_default_hyphen_setup_hyphen_update_hyphen_response {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.Output.Accepted.Body
                /// Creates a new `Accepted`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.Output.Accepted.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/default-setup/patch(code-scanning/update-default-setup)/responses/202`.
            ///
            /// HTTP response code: `202 accepted`.
            case accepted(Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.Output.Accepted)
            /// The associated value of the enum case if `self` is `.accepted`.
            ///
            /// - Throws: An error if `self` is not `.accepted`.
            /// - SeeAlso: `.accepted`.
            public var accepted: Operations.code_hyphen_scanning_sol_update_hyphen_default_hyphen_setup.Output.Accepted {
                get throws {
                    switch self {
                    case let .accepted(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "accepted",
                            response: self
                        )
                    }
                }
            }
            /// Response if the repository is archived or if GitHub Advanced Security is not enabled for this repository
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/default-setup/patch(code-scanning/update-default-setup)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Components.Responses.code_scanning_forbidden_write)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Components.Responses.code_scanning_forbidden_write {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            /// Resource not found
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/default-setup/patch(code-scanning/update-default-setup)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses.not_found)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Components.Responses.not_found {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Response if there is already a validation run in progress with a different default setup configuration
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/default-setup/patch(code-scanning/update-default-setup)/responses/409`.
            ///
            /// HTTP response code: `409 conflict`.
            case conflict(Components.Responses.code_scanning_conflict)
            /// The associated value of the enum case if `self` is `.conflict`.
            ///
            /// - Throws: An error if `self` is not `.conflict`.
            /// - SeeAlso: `.conflict`.
            public var conflict: Components.Responses.code_scanning_conflict {
                get throws {
                    switch self {
                    case let .conflict(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "conflict",
                            response: self
                        )
                    }
                }
            }
            /// Service unavailable
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/default-setup/patch(code-scanning/update-default-setup)/responses/503`.
            ///
            /// HTTP response code: `503 serviceUnavailable`.
            case serviceUnavailable(Components.Responses.service_unavailable)
            /// The associated value of the enum case if `self` is `.serviceUnavailable`.
            ///
            /// - Throws: An error if `self` is not `.serviceUnavailable`.
            /// - SeeAlso: `.serviceUnavailable`.
            public var serviceUnavailable: Components.Responses.service_unavailable {
                get throws {
                    switch self {
                    case let .serviceUnavailable(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "serviceUnavailable",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Upload an analysis as SARIF data
    ///
    /// Uploads SARIF data containing the results of a code scanning analysis to make the results available in a repository. For troubleshooting information, see "[Troubleshooting SARIF uploads](https://docs.github.com/code-security/code-scanning/troubleshooting-sarif)."
    ///
    /// There are two places where you can upload code scanning results.
    ///  - If you upload to a pull request, for example `--ref refs/pull/42/merge` or `--ref refs/pull/42/head`, then the results appear as alerts in a pull request check. For more information, see "[Triaging code scanning alerts in pull requests](/code-security/secure-coding/triaging-code-scanning-alerts-in-pull-requests)."
    ///  - If you upload to a branch, for example `--ref refs/heads/my-branch`, then the results appear in the **Security** tab for your repository. For more information, see "[Managing code scanning alerts for your repository](/code-security/secure-coding/managing-code-scanning-alerts-for-your-repository#viewing-the-alerts-for-a-repository)."
    ///
    /// You must compress the SARIF-formatted analysis data that you want to upload, using `gzip`, and then encode it as a Base64 format string. For example:
    ///
    /// ```
    /// gzip -c analysis-data.sarif | base64 -w0
    /// ```
    ///
    /// SARIF upload supports a maximum number of entries per the following data objects, and an analysis will be rejected if any of these objects is above its maximum value. For some objects, there are additional values over which the entries will be ignored while keeping the most important entries whenever applicable.
    /// To get the most out of your analysis when it includes data above the supported limits, try to optimize the analysis configuration. For example, for the CodeQL tool, identify and remove the most noisy queries. For more information, see "[SARIF results exceed one or more limits](https://docs.github.com/code-security/code-scanning/troubleshooting-sarif/results-exceed-limit)."
    ///
    ///
    /// | **SARIF data**                   | **Maximum values** | **Additional limits**                                                            |
    /// |----------------------------------|:------------------:|----------------------------------------------------------------------------------|
    /// | Runs per file                    |         20         |                                                                                  |
    /// | Results per run                  |       25,000       | Only the top 5,000 results will be included, prioritized by severity.            |
    /// | Rules per run                    |       25,000       |                                                                                  |
    /// | Tool extensions per run          |        100         |                                                                                  |
    /// | Thread Flow Locations per result |       10,000       | Only the top 1,000 Thread Flow Locations will be included, using prioritization. |
    /// | Location per result	             |       1,000        | Only 100 locations will be included.                                             |
    /// | Tags per rule	                   |         20         | Only 10 tags will be included.                                                   |
    ///
    ///
    /// The `202 Accepted` response includes an `id` value.
    /// You can use this ID to check the status of the upload by using it in the `/sarifs/{sarif_id}` endpoint.
    /// For more information, see "[Get information about a SARIF upload](/rest/code-scanning/code-scanning#get-information-about-a-sarif-upload)."
    ///
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// This endpoint is limited to 1,000 requests per hour for each user or app installation calling it.
    ///
    /// - Remark: HTTP `POST /repos/{owner}/{repo}/code-scanning/sarifs`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/sarifs/post(code-scanning/upload-sarif)`.
    public enum code_hyphen_scanning_sol_upload_hyphen_sarif {
        public static let id: Swift.String = "code-scanning/upload-sarif"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/POST/path`.
            public struct Path: Sendable, Hashable {
                /// The account owner of the repository. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/POST/path/owner`.
                public var owner: Components.Parameters.owner
                /// The name of the repository without the `.git` extension. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/POST/path/repo`.
                public var repo: Components.Parameters.repo
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - owner: The account owner of the repository. The name is not case sensitive.
                ///   - repo: The name of the repository without the `.git` extension. The name is not case sensitive.
                public init(
                    owner: Components.Parameters.owner,
                    repo: Components.Parameters.repo
                ) {
                    self.owner = owner
                    self.repo = repo
                }
            }
            public var path: Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Input.Path
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Input.Headers
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/POST/requestBody/json`.
                public struct jsonPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/POST/requestBody/json/commit_sha`.
                    public var commit_sha: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_commit_hyphen_sha
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/POST/requestBody/json/ref`.
                    public var ref: Components.Schemas.code_hyphen_scanning_hyphen_ref_hyphen_full
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/POST/requestBody/json/sarif`.
                    public var sarif: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_sarif_hyphen_file
                    /// The base directory used in the analysis, as it appears in the SARIF file.
                    /// This property is used to convert file paths from absolute to relative, so that alerts can be mapped to their correct location in the repository.
                    ///
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/POST/requestBody/json/checkout_uri`.
                    public var checkout_uri: Swift.String?
                    /// The time that the analysis run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
                    ///
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/POST/requestBody/json/started_at`.
                    public var started_at: Foundation.Date?
                    /// The name of the tool used to generate the code scanning analysis. If this parameter is not used, the tool name defaults to "API". If the uploaded SARIF contains a tool GUID, this will be available for filtering using the `tool_guid` parameter of operations such as `GET /repos/{owner}/{repo}/code-scanning/alerts`.
                    ///
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/POST/requestBody/json/tool_name`.
                    public var tool_name: Swift.String?
                    /// Whether the SARIF file will be validated according to the code scanning specifications.
                    /// This parameter is intended to help integrators ensure that the uploaded SARIF files are correctly rendered by code scanning.
                    ///
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/POST/requestBody/json/validate`.
                    public var validate: Swift.Bool?
                    /// Creates a new `jsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - commit_sha:
                    ///   - ref:
                    ///   - sarif:
                    ///   - checkout_uri: The base directory used in the analysis, as it appears in the SARIF file.
                    ///   - started_at: The time that the analysis run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
                    ///   - tool_name: The name of the tool used to generate the code scanning analysis. If this parameter is not used, the tool name defaults to "API". If the uploaded SARIF contains a tool GUID, this will be available for filtering using the `tool_guid` parameter of operations such as `GET /repos/{owner}/{repo}/code-scanning/alerts`.
                    ///   - validate: Whether the SARIF file will be validated according to the code scanning specifications.
                    public init(
                        commit_sha: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_commit_hyphen_sha,
                        ref: Components.Schemas.code_hyphen_scanning_hyphen_ref_hyphen_full,
                        sarif: Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_sarif_hyphen_file,
                        checkout_uri: Swift.String? = nil,
                        started_at: Foundation.Date? = nil,
                        tool_name: Swift.String? = nil,
                        validate: Swift.Bool? = nil
                    ) {
                        self.commit_sha = commit_sha
                        self.ref = ref
                        self.sarif = sarif
                        self.checkout_uri = checkout_uri
                        self.started_at = started_at
                        self.tool_name = tool_name
                        self.validate = validate
                    }
                    public enum CodingKeys: String, CodingKey {
                        case commit_sha
                        case ref
                        case sarif
                        case checkout_uri
                        case started_at
                        case tool_name
                        case validate
                    }
                    public init(from decoder: any Decoder) throws {
                        let container = try decoder.container(keyedBy: CodingKeys.self)
                        commit_sha = try container.decode(
                            Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_commit_hyphen_sha.self,
                            forKey: .commit_sha
                        )
                        ref = try container.decode(
                            Components.Schemas.code_hyphen_scanning_hyphen_ref_hyphen_full.self,
                            forKey: .ref
                        )
                        sarif = try container.decode(
                            Components.Schemas.code_hyphen_scanning_hyphen_analysis_hyphen_sarif_hyphen_file.self,
                            forKey: .sarif
                        )
                        checkout_uri = try container.decodeIfPresent(
                            Swift.String.self,
                            forKey: .checkout_uri
                        )
                        started_at = try container.decodeIfPresent(
                            Foundation.Date.self,
                            forKey: .started_at
                        )
                        tool_name = try container.decodeIfPresent(
                            Swift.String.self,
                            forKey: .tool_name
                        )
                        validate = try container.decodeIfPresent(
                            Swift.Bool.self,
                            forKey: .validate
                        )
                        try decoder.ensureNoAdditionalProperties(knownKeys: [
                            "commit_sha",
                            "ref",
                            "sarif",
                            "checkout_uri",
                            "started_at",
                            "tool_name",
                            "validate"
                        ])
                    }
                }
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/POST/requestBody/content/application\/json`.
                case json(Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Input.Body.jsonPayload)
            }
            public var body: Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            public init(
                path: Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Input.Path,
                headers: Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Input.Headers = .init(),
                body: Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Accepted: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/POST/responses/202/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/POST/responses/202/content/application\/json`.
                    case json(Components.Schemas.code_hyphen_scanning_hyphen_sarifs_hyphen_receipt)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.code_hyphen_scanning_hyphen_sarifs_hyphen_receipt {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Output.Accepted.Body
                /// Creates a new `Accepted`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Output.Accepted.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/sarifs/post(code-scanning/upload-sarif)/responses/202`.
            ///
            /// HTTP response code: `202 accepted`.
            case accepted(Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Output.Accepted)
            /// The associated value of the enum case if `self` is `.accepted`.
            ///
            /// - Throws: An error if `self` is not `.accepted`.
            /// - SeeAlso: `.accepted`.
            public var accepted: Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Output.Accepted {
                get throws {
                    switch self {
                    case let .accepted(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "accepted",
                            response: self
                        )
                    }
                }
            }
            public struct BadRequest: Sendable, Hashable {
                /// Creates a new `BadRequest`.
                public init() {}
            }
            /// Bad Request if the sarif field is invalid
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/sarifs/post(code-scanning/upload-sarif)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            public var badRequest: Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            /// Response if the repository is archived or if GitHub Advanced Security is not enabled for this repository
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/sarifs/post(code-scanning/upload-sarif)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Components.Responses.code_scanning_forbidden_write)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Components.Responses.code_scanning_forbidden_write {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            /// Resource not found
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/sarifs/post(code-scanning/upload-sarif)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses.not_found)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Components.Responses.not_found {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            public struct ContentTooLarge: Sendable, Hashable {
                /// Creates a new `ContentTooLarge`.
                public init() {}
            }
            /// Payload Too Large if the sarif field is too large
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/sarifs/post(code-scanning/upload-sarif)/responses/413`.
            ///
            /// HTTP response code: `413 contentTooLarge`.
            case contentTooLarge(Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Output.ContentTooLarge)
            /// The associated value of the enum case if `self` is `.contentTooLarge`.
            ///
            /// - Throws: An error if `self` is not `.contentTooLarge`.
            /// - SeeAlso: `.contentTooLarge`.
            public var contentTooLarge: Operations.code_hyphen_scanning_sol_upload_hyphen_sarif.Output.ContentTooLarge {
                get throws {
                    switch self {
                    case let .contentTooLarge(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "contentTooLarge",
                            response: self
                        )
                    }
                }
            }
            /// Service unavailable
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/sarifs/post(code-scanning/upload-sarif)/responses/503`.
            ///
            /// HTTP response code: `503 serviceUnavailable`.
            case serviceUnavailable(Components.Responses.service_unavailable)
            /// The associated value of the enum case if `self` is `.serviceUnavailable`.
            ///
            /// - Throws: An error if `self` is not `.serviceUnavailable`.
            /// - SeeAlso: `.serviceUnavailable`.
            public var serviceUnavailable: Components.Responses.service_unavailable {
                get throws {
                    switch self {
                    case let .serviceUnavailable(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "serviceUnavailable",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get information about a SARIF upload
    ///
    /// Gets information about a SARIF upload, including the status and the URL of the analysis that was uploaded so that you can retrieve details of the analysis. For more information, see "[Get a code scanning analysis for a repository](/rest/code-scanning/code-scanning#get-a-code-scanning-analysis-for-a-repository)."
    /// OAuth app tokens and personal access tokens (classic) need the `security_events` scope to use this endpoint with private or public repositories, or the `public_repo` scope to use this endpoint with only public repositories.
    ///
    /// - Remark: HTTP `GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}`.
    /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}/get(code-scanning/get-sarif)`.
    public enum code_hyphen_scanning_sol_get_hyphen_sarif {
        public static let id: Swift.String = "code-scanning/get-sarif"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// The account owner of the repository. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}/GET/path/owner`.
                public var owner: Components.Parameters.owner
                /// The name of the repository without the `.git` extension. The name is not case sensitive.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}/GET/path/repo`.
                public var repo: Components.Parameters.repo
                /// The SARIF ID obtained after uploading.
                ///
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}/GET/path/sarif_id`.
                public var sarif_id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - owner: The account owner of the repository. The name is not case sensitive.
                ///   - repo: The name of the repository without the `.git` extension. The name is not case sensitive.
                ///   - sarif_id: The SARIF ID obtained after uploading.
                public init(
                    owner: Components.Parameters.owner,
                    repo: Components.Parameters.repo,
                    sarif_id: Swift.String
                ) {
                    self.owner = owner
                    self.repo = repo
                    self.sarif_id = sarif_id
                }
            }
            public var path: Operations.code_hyphen_scanning_sol_get_hyphen_sarif.Input.Path
            /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_get_hyphen_sarif.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.code_hyphen_scanning_sol_get_hyphen_sarif.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.code_hyphen_scanning_sol_get_hyphen_sarif.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.code_hyphen_scanning_sol_get_hyphen_sarif.Input.Path,
                headers: Operations.code_hyphen_scanning_sol_get_hyphen_sarif.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.code_hyphen_scanning_hyphen_sarifs_hyphen_status)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.code_hyphen_scanning_hyphen_sarifs_hyphen_status {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.code_hyphen_scanning_sol_get_hyphen_sarif.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.code_hyphen_scanning_sol_get_hyphen_sarif.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}/get(code-scanning/get-sarif)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.code_hyphen_scanning_sol_get_hyphen_sarif.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.code_hyphen_scanning_sol_get_hyphen_sarif.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Response if GitHub Advanced Security is not enabled for this repository
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}/get(code-scanning/get-sarif)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Components.Responses.code_scanning_forbidden_read)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            public var forbidden: Components.Responses.code_scanning_forbidden_read {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            public struct NotFound: Sendable, Hashable {
                /// Creates a new `NotFound`.
                public init() {}
            }
            /// Not Found if the sarif id does not match any upload
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}/get(code-scanning/get-sarif)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.code_hyphen_scanning_sol_get_hyphen_sarif.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Operations.code_hyphen_scanning_sol_get_hyphen_sarif.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Service unavailable
            ///
            /// - Remark: Generated from `#/paths//repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}/get(code-scanning/get-sarif)/responses/503`.
            ///
            /// HTTP response code: `503 serviceUnavailable`.
            case serviceUnavailable(Components.Responses.service_unavailable)
            /// The associated value of the enum case if `self` is `.serviceUnavailable`.
            ///
            /// - Throws: An error if `self` is not `.serviceUnavailable`.
            /// - SeeAlso: `.serviceUnavailable`.
            public var serviceUnavailable: Components.Responses.service_unavailable {
                get throws {
                    switch self {
                    case let .serviceUnavailable(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "serviceUnavailable",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
}
