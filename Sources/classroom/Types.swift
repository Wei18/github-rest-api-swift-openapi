// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif
/// A type that performs HTTP operations defined by the OpenAPI document.
public protocol APIProtocol: Sendable {
    /// Get an assignment
    ///
    /// Gets a GitHub Classroom assignment. Assignment will only be returned if the current user is an administrator of the GitHub Classroom for the assignment.
    ///
    /// - Remark: HTTP `GET /assignments/{assignment_id}`.
    /// - Remark: Generated from `#/paths//assignments/{assignment_id}/get(classroom/get-an-assignment)`.
    func classroom_sol_get_hyphen_an_hyphen_assignment(_ input: Operations.classroom_sol_get_hyphen_an_hyphen_assignment.Input) async throws -> Operations.classroom_sol_get_hyphen_an_hyphen_assignment.Output
    /// List accepted assignments for an assignment
    ///
    /// Lists any assignment repositories that have been created by students accepting a GitHub Classroom assignment. Accepted assignments will only be returned if the current user is an administrator of the GitHub Classroom for the assignment.
    ///
    /// - Remark: HTTP `GET /assignments/{assignment_id}/accepted_assignments`.
    /// - Remark: Generated from `#/paths//assignments/{assignment_id}/accepted_assignments/get(classroom/list-accepted-assignments-for-an-assignment)`.
    func classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment(_ input: Operations.classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment.Input) async throws -> Operations.classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment.Output
    /// Get assignment grades
    ///
    /// Gets grades for a GitHub Classroom assignment. Grades will only be returned if the current user is an administrator of the GitHub Classroom for the assignment.
    ///
    /// - Remark: HTTP `GET /assignments/{assignment_id}/grades`.
    /// - Remark: Generated from `#/paths//assignments/{assignment_id}/grades/get(classroom/get-assignment-grades)`.
    func classroom_sol_get_hyphen_assignment_hyphen_grades(_ input: Operations.classroom_sol_get_hyphen_assignment_hyphen_grades.Input) async throws -> Operations.classroom_sol_get_hyphen_assignment_hyphen_grades.Output
    /// List classrooms
    ///
    /// Lists GitHub Classroom classrooms for the current user. Classrooms will only be returned if the current user is an administrator of one or more GitHub Classrooms.
    ///
    /// - Remark: HTTP `GET /classrooms`.
    /// - Remark: Generated from `#/paths//classrooms/get(classroom/list-classrooms)`.
    func classroom_sol_list_hyphen_classrooms(_ input: Operations.classroom_sol_list_hyphen_classrooms.Input) async throws -> Operations.classroom_sol_list_hyphen_classrooms.Output
    /// Get a classroom
    ///
    /// Gets a GitHub Classroom classroom for the current user. Classroom will only be returned if the current user is an administrator of the GitHub Classroom.
    ///
    /// - Remark: HTTP `GET /classrooms/{classroom_id}`.
    /// - Remark: Generated from `#/paths//classrooms/{classroom_id}/get(classroom/get-a-classroom)`.
    func classroom_sol_get_hyphen_a_hyphen_classroom(_ input: Operations.classroom_sol_get_hyphen_a_hyphen_classroom.Input) async throws -> Operations.classroom_sol_get_hyphen_a_hyphen_classroom.Output
    /// List assignments for a classroom
    ///
    /// Lists GitHub Classroom assignments for a classroom. Assignments will only be returned if the current user is an administrator of the GitHub Classroom.
    ///
    /// - Remark: HTTP `GET /classrooms/{classroom_id}/assignments`.
    /// - Remark: Generated from `#/paths//classrooms/{classroom_id}/assignments/get(classroom/list-assignments-for-a-classroom)`.
    func classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom(_ input: Operations.classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom.Input) async throws -> Operations.classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom.Output
}

/// Convenience overloads for operation inputs.
extension APIProtocol {
    /// Get an assignment
    ///
    /// Gets a GitHub Classroom assignment. Assignment will only be returned if the current user is an administrator of the GitHub Classroom for the assignment.
    ///
    /// - Remark: HTTP `GET /assignments/{assignment_id}`.
    /// - Remark: Generated from `#/paths//assignments/{assignment_id}/get(classroom/get-an-assignment)`.
    public func classroom_sol_get_hyphen_an_hyphen_assignment(
        path: Operations.classroom_sol_get_hyphen_an_hyphen_assignment.Input.Path,
        headers: Operations.classroom_sol_get_hyphen_an_hyphen_assignment.Input.Headers = .init()
    ) async throws -> Operations.classroom_sol_get_hyphen_an_hyphen_assignment.Output {
        try await classroom_sol_get_hyphen_an_hyphen_assignment(Operations.classroom_sol_get_hyphen_an_hyphen_assignment.Input(
            path: path,
            headers: headers
        ))
    }
    /// List accepted assignments for an assignment
    ///
    /// Lists any assignment repositories that have been created by students accepting a GitHub Classroom assignment. Accepted assignments will only be returned if the current user is an administrator of the GitHub Classroom for the assignment.
    ///
    /// - Remark: HTTP `GET /assignments/{assignment_id}/accepted_assignments`.
    /// - Remark: Generated from `#/paths//assignments/{assignment_id}/accepted_assignments/get(classroom/list-accepted-assignments-for-an-assignment)`.
    public func classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment(
        path: Operations.classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment.Input.Path,
        query: Operations.classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment.Input.Query = .init(),
        headers: Operations.classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment.Input.Headers = .init()
    ) async throws -> Operations.classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment.Output {
        try await classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment(Operations.classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// Get assignment grades
    ///
    /// Gets grades for a GitHub Classroom assignment. Grades will only be returned if the current user is an administrator of the GitHub Classroom for the assignment.
    ///
    /// - Remark: HTTP `GET /assignments/{assignment_id}/grades`.
    /// - Remark: Generated from `#/paths//assignments/{assignment_id}/grades/get(classroom/get-assignment-grades)`.
    public func classroom_sol_get_hyphen_assignment_hyphen_grades(
        path: Operations.classroom_sol_get_hyphen_assignment_hyphen_grades.Input.Path,
        headers: Operations.classroom_sol_get_hyphen_assignment_hyphen_grades.Input.Headers = .init()
    ) async throws -> Operations.classroom_sol_get_hyphen_assignment_hyphen_grades.Output {
        try await classroom_sol_get_hyphen_assignment_hyphen_grades(Operations.classroom_sol_get_hyphen_assignment_hyphen_grades.Input(
            path: path,
            headers: headers
        ))
    }
    /// List classrooms
    ///
    /// Lists GitHub Classroom classrooms for the current user. Classrooms will only be returned if the current user is an administrator of one or more GitHub Classrooms.
    ///
    /// - Remark: HTTP `GET /classrooms`.
    /// - Remark: Generated from `#/paths//classrooms/get(classroom/list-classrooms)`.
    public func classroom_sol_list_hyphen_classrooms(
        query: Operations.classroom_sol_list_hyphen_classrooms.Input.Query = .init(),
        headers: Operations.classroom_sol_list_hyphen_classrooms.Input.Headers = .init()
    ) async throws -> Operations.classroom_sol_list_hyphen_classrooms.Output {
        try await classroom_sol_list_hyphen_classrooms(Operations.classroom_sol_list_hyphen_classrooms.Input(
            query: query,
            headers: headers
        ))
    }
    /// Get a classroom
    ///
    /// Gets a GitHub Classroom classroom for the current user. Classroom will only be returned if the current user is an administrator of the GitHub Classroom.
    ///
    /// - Remark: HTTP `GET /classrooms/{classroom_id}`.
    /// - Remark: Generated from `#/paths//classrooms/{classroom_id}/get(classroom/get-a-classroom)`.
    public func classroom_sol_get_hyphen_a_hyphen_classroom(
        path: Operations.classroom_sol_get_hyphen_a_hyphen_classroom.Input.Path,
        headers: Operations.classroom_sol_get_hyphen_a_hyphen_classroom.Input.Headers = .init()
    ) async throws -> Operations.classroom_sol_get_hyphen_a_hyphen_classroom.Output {
        try await classroom_sol_get_hyphen_a_hyphen_classroom(Operations.classroom_sol_get_hyphen_a_hyphen_classroom.Input(
            path: path,
            headers: headers
        ))
    }
    /// List assignments for a classroom
    ///
    /// Lists GitHub Classroom assignments for a classroom. Assignments will only be returned if the current user is an administrator of the GitHub Classroom.
    ///
    /// - Remark: HTTP `GET /classrooms/{classroom_id}/assignments`.
    /// - Remark: Generated from `#/paths//classrooms/{classroom_id}/assignments/get(classroom/list-assignments-for-a-classroom)`.
    public func classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom(
        path: Operations.classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom.Input.Path,
        query: Operations.classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom.Input.Query = .init(),
        headers: Operations.classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom.Input.Headers = .init()
    ) async throws -> Operations.classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom.Output {
        try await classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom(Operations.classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
}

/// Server URLs defined in the OpenAPI document.
public enum Servers {
    public static func server1() throws -> Foundation.URL {
        try Foundation.URL(
            validatingOpenAPIServerURL: "https://api.github.com",
            variables: []
        )
    }
}

/// Types generated from the components section of the OpenAPI document.
public enum Components {
    /// Types generated from the `#/components/schemas` section of the OpenAPI document.
    public enum Schemas {
        /// Basic Error
        ///
        /// - Remark: Generated from `#/components/schemas/basic-error`.
        public struct basic_hyphen_error: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/basic-error/message`.
            public var message: Swift.String?
            /// - Remark: Generated from `#/components/schemas/basic-error/documentation_url`.
            public var documentation_url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/basic-error/url`.
            public var url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/basic-error/status`.
            public var status: Swift.String?
            /// Creates a new `basic_hyphen_error`.
            ///
            /// - Parameters:
            ///   - message:
            ///   - documentation_url:
            ///   - url:
            ///   - status:
            public init(
                message: Swift.String? = nil,
                documentation_url: Swift.String? = nil,
                url: Swift.String? = nil,
                status: Swift.String? = nil
            ) {
                self.message = message
                self.documentation_url = documentation_url
                self.url = url
                self.status = status
            }
            public enum CodingKeys: String, CodingKey {
                case message
                case documentation_url
                case url
                case status
            }
        }
        /// A GitHub repository view for Classroom
        ///
        /// - Remark: Generated from `#/components/schemas/simple-classroom-repository`.
        public struct simple_hyphen_classroom_hyphen_repository: Codable, Hashable, Sendable {
            /// A unique identifier of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-repository/id`.
            public var id: Swift.Int
            /// The full, globally unique name of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-repository/full_name`.
            public var full_name: Swift.String
            /// The URL to view the repository on GitHub.com.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-repository/html_url`.
            public var html_url: Swift.String
            /// The GraphQL identifier of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-repository/node_id`.
            public var node_id: Swift.String
            /// Whether the repository is private.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-repository/private`.
            public var _private: Swift.Bool
            /// The default branch for the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-repository/default_branch`.
            public var default_branch: Swift.String
            /// Creates a new `simple_hyphen_classroom_hyphen_repository`.
            ///
            /// - Parameters:
            ///   - id: A unique identifier of the repository.
            ///   - full_name: The full, globally unique name of the repository.
            ///   - html_url: The URL to view the repository on GitHub.com.
            ///   - node_id: The GraphQL identifier of the repository.
            ///   - _private: Whether the repository is private.
            ///   - default_branch: The default branch for the repository.
            public init(
                id: Swift.Int,
                full_name: Swift.String,
                html_url: Swift.String,
                node_id: Swift.String,
                _private: Swift.Bool,
                default_branch: Swift.String
            ) {
                self.id = id
                self.full_name = full_name
                self.html_url = html_url
                self.node_id = node_id
                self._private = _private
                self.default_branch = default_branch
            }
            public enum CodingKeys: String, CodingKey {
                case id
                case full_name
                case html_url
                case node_id
                case _private = "private"
                case default_branch
            }
        }
        /// A GitHub organization.
        ///
        /// - Remark: Generated from `#/components/schemas/simple-classroom-organization`.
        public struct simple_hyphen_classroom_hyphen_organization: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/simple-classroom-organization/id`.
            public var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/simple-classroom-organization/login`.
            public var login: Swift.String
            /// - Remark: Generated from `#/components/schemas/simple-classroom-organization/node_id`.
            public var node_id: Swift.String
            /// - Remark: Generated from `#/components/schemas/simple-classroom-organization/html_url`.
            public var html_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/simple-classroom-organization/name`.
            public var name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/simple-classroom-organization/avatar_url`.
            public var avatar_url: Swift.String
            /// Creates a new `simple_hyphen_classroom_hyphen_organization`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - login:
            ///   - node_id:
            ///   - html_url:
            ///   - name:
            ///   - avatar_url:
            public init(
                id: Swift.Int,
                login: Swift.String,
                node_id: Swift.String,
                html_url: Swift.String,
                name: Swift.String? = nil,
                avatar_url: Swift.String
            ) {
                self.id = id
                self.login = login
                self.node_id = node_id
                self.html_url = html_url
                self.name = name
                self.avatar_url = avatar_url
            }
            public enum CodingKeys: String, CodingKey {
                case id
                case login
                case node_id
                case html_url
                case name
                case avatar_url
            }
        }
        /// A GitHub Classroom classroom
        ///
        /// - Remark: Generated from `#/components/schemas/classroom`.
        public struct classroom: Codable, Hashable, Sendable {
            /// Unique identifier of the classroom.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom/id`.
            public var id: Swift.Int
            /// The name of the classroom.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom/name`.
            public var name: Swift.String
            /// Whether classroom is archived.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom/archived`.
            public var archived: Swift.Bool
            /// - Remark: Generated from `#/components/schemas/classroom/organization`.
            public var organization: Components.Schemas.simple_hyphen_classroom_hyphen_organization
            /// The URL of the classroom on GitHub Classroom.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom/url`.
            public var url: Swift.String
            /// Creates a new `classroom`.
            ///
            /// - Parameters:
            ///   - id: Unique identifier of the classroom.
            ///   - name: The name of the classroom.
            ///   - archived: Whether classroom is archived.
            ///   - organization:
            ///   - url: The URL of the classroom on GitHub Classroom.
            public init(
                id: Swift.Int,
                name: Swift.String,
                archived: Swift.Bool,
                organization: Components.Schemas.simple_hyphen_classroom_hyphen_organization,
                url: Swift.String
            ) {
                self.id = id
                self.name = name
                self.archived = archived
                self.organization = organization
                self.url = url
            }
            public enum CodingKeys: String, CodingKey {
                case id
                case name
                case archived
                case organization
                case url
            }
        }
        /// A GitHub Classroom assignment
        ///
        /// - Remark: Generated from `#/components/schemas/classroom-assignment`.
        public struct classroom_hyphen_assignment: Codable, Hashable, Sendable {
            /// Unique identifier of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment/id`.
            public var id: Swift.Int
            /// Whether an accepted assignment creates a public repository.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment/public_repo`.
            public var public_repo: Swift.Bool
            /// Assignment title.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment/title`.
            public var title: Swift.String
            /// Whether it's a group assignment or individual assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment/type`.
            @frozen public enum _typePayload: String, Codable, Hashable, Sendable {
                case individual = "individual"
                case group = "group"
            }
            /// Whether it's a group assignment or individual assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment/type`.
            public var _type: Components.Schemas.classroom_hyphen_assignment._typePayload
            /// The link that a student can use to accept the assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment/invite_link`.
            public var invite_link: Swift.String
            /// Whether the invitation link is enabled. Visiting an enabled invitation link will accept the assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment/invitations_enabled`.
            public var invitations_enabled: Swift.Bool
            /// Sluggified name of the assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment/slug`.
            public var slug: Swift.String
            /// Whether students are admins on created repository when a student accepts the assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment/students_are_repo_admins`.
            public var students_are_repo_admins: Swift.Bool
            /// Whether feedback pull request will be created when a student accepts the assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment/feedback_pull_requests_enabled`.
            public var feedback_pull_requests_enabled: Swift.Bool
            /// The maximum allowable teams for the assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment/max_teams`.
            public var max_teams: Swift.Int?
            /// The maximum allowable members per team.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment/max_members`.
            public var max_members: Swift.Int?
            /// The selected editor for the assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment/editor`.
            public var editor: Swift.String
            /// The number of students that have accepted the assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment/accepted`.
            public var accepted: Swift.Int
            /// The number of students that have submitted the assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment/submitted`.
            public var submitted: Swift.Int
            /// The number of students that have passed the assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment/passing`.
            public var passing: Swift.Int
            /// The programming language used in the assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment/language`.
            public var language: Swift.String
            /// The time at which the assignment is due.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment/deadline`.
            public var deadline: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/classroom-assignment/starter_code_repository`.
            public var starter_code_repository: Components.Schemas.simple_hyphen_classroom_hyphen_repository
            /// - Remark: Generated from `#/components/schemas/classroom-assignment/classroom`.
            public var classroom: Components.Schemas.classroom
            /// Creates a new `classroom_hyphen_assignment`.
            ///
            /// - Parameters:
            ///   - id: Unique identifier of the repository.
            ///   - public_repo: Whether an accepted assignment creates a public repository.
            ///   - title: Assignment title.
            ///   - _type: Whether it's a group assignment or individual assignment.
            ///   - invite_link: The link that a student can use to accept the assignment.
            ///   - invitations_enabled: Whether the invitation link is enabled. Visiting an enabled invitation link will accept the assignment.
            ///   - slug: Sluggified name of the assignment.
            ///   - students_are_repo_admins: Whether students are admins on created repository when a student accepts the assignment.
            ///   - feedback_pull_requests_enabled: Whether feedback pull request will be created when a student accepts the assignment.
            ///   - max_teams: The maximum allowable teams for the assignment.
            ///   - max_members: The maximum allowable members per team.
            ///   - editor: The selected editor for the assignment.
            ///   - accepted: The number of students that have accepted the assignment.
            ///   - submitted: The number of students that have submitted the assignment.
            ///   - passing: The number of students that have passed the assignment.
            ///   - language: The programming language used in the assignment.
            ///   - deadline: The time at which the assignment is due.
            ///   - starter_code_repository:
            ///   - classroom:
            public init(
                id: Swift.Int,
                public_repo: Swift.Bool,
                title: Swift.String,
                _type: Components.Schemas.classroom_hyphen_assignment._typePayload,
                invite_link: Swift.String,
                invitations_enabled: Swift.Bool,
                slug: Swift.String,
                students_are_repo_admins: Swift.Bool,
                feedback_pull_requests_enabled: Swift.Bool,
                max_teams: Swift.Int? = nil,
                max_members: Swift.Int? = nil,
                editor: Swift.String,
                accepted: Swift.Int,
                submitted: Swift.Int,
                passing: Swift.Int,
                language: Swift.String,
                deadline: Foundation.Date? = nil,
                starter_code_repository: Components.Schemas.simple_hyphen_classroom_hyphen_repository,
                classroom: Components.Schemas.classroom
            ) {
                self.id = id
                self.public_repo = public_repo
                self.title = title
                self._type = _type
                self.invite_link = invite_link
                self.invitations_enabled = invitations_enabled
                self.slug = slug
                self.students_are_repo_admins = students_are_repo_admins
                self.feedback_pull_requests_enabled = feedback_pull_requests_enabled
                self.max_teams = max_teams
                self.max_members = max_members
                self.editor = editor
                self.accepted = accepted
                self.submitted = submitted
                self.passing = passing
                self.language = language
                self.deadline = deadline
                self.starter_code_repository = starter_code_repository
                self.classroom = classroom
            }
            public enum CodingKeys: String, CodingKey {
                case id
                case public_repo
                case title
                case _type = "type"
                case invite_link
                case invitations_enabled
                case slug
                case students_are_repo_admins
                case feedback_pull_requests_enabled
                case max_teams
                case max_members
                case editor
                case accepted
                case submitted
                case passing
                case language
                case deadline
                case starter_code_repository
                case classroom
            }
        }
        /// A GitHub user simplified for Classroom.
        ///
        /// - Remark: Generated from `#/components/schemas/simple-classroom-user`.
        public struct simple_hyphen_classroom_hyphen_user: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/simple-classroom-user/id`.
            public var id: Swift.Int
            /// - Remark: Generated from `#/components/schemas/simple-classroom-user/login`.
            public var login: Swift.String
            /// - Remark: Generated from `#/components/schemas/simple-classroom-user/avatar_url`.
            public var avatar_url: Swift.String
            /// - Remark: Generated from `#/components/schemas/simple-classroom-user/html_url`.
            public var html_url: Swift.String
            /// Creates a new `simple_hyphen_classroom_hyphen_user`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - login:
            ///   - avatar_url:
            ///   - html_url:
            public init(
                id: Swift.Int,
                login: Swift.String,
                avatar_url: Swift.String,
                html_url: Swift.String
            ) {
                self.id = id
                self.login = login
                self.avatar_url = avatar_url
                self.html_url = html_url
            }
            public enum CodingKeys: String, CodingKey {
                case id
                case login
                case avatar_url
                case html_url
            }
        }
        /// A GitHub Classroom classroom
        ///
        /// - Remark: Generated from `#/components/schemas/simple-classroom`.
        public struct simple_hyphen_classroom: Codable, Hashable, Sendable {
            /// Unique identifier of the classroom.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom/id`.
            public var id: Swift.Int
            /// The name of the classroom.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom/name`.
            public var name: Swift.String
            /// Returns whether classroom is archived or not.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom/archived`.
            public var archived: Swift.Bool
            /// The url of the classroom on GitHub Classroom.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom/url`.
            public var url: Swift.String
            /// Creates a new `simple_hyphen_classroom`.
            ///
            /// - Parameters:
            ///   - id: Unique identifier of the classroom.
            ///   - name: The name of the classroom.
            ///   - archived: Returns whether classroom is archived or not.
            ///   - url: The url of the classroom on GitHub Classroom.
            public init(
                id: Swift.Int,
                name: Swift.String,
                archived: Swift.Bool,
                url: Swift.String
            ) {
                self.id = id
                self.name = name
                self.archived = archived
                self.url = url
            }
            public enum CodingKeys: String, CodingKey {
                case id
                case name
                case archived
                case url
            }
        }
        /// A GitHub Classroom assignment
        ///
        /// - Remark: Generated from `#/components/schemas/simple-classroom-assignment`.
        public struct simple_hyphen_classroom_hyphen_assignment: Codable, Hashable, Sendable {
            /// Unique identifier of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-assignment/id`.
            public var id: Swift.Int
            /// Whether an accepted assignment creates a public repository.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-assignment/public_repo`.
            public var public_repo: Swift.Bool
            /// Assignment title.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-assignment/title`.
            public var title: Swift.String
            /// Whether it's a Group Assignment or Individual Assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-assignment/type`.
            @frozen public enum _typePayload: String, Codable, Hashable, Sendable {
                case individual = "individual"
                case group = "group"
            }
            /// Whether it's a Group Assignment or Individual Assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-assignment/type`.
            public var _type: Components.Schemas.simple_hyphen_classroom_hyphen_assignment._typePayload
            /// The link that a student can use to accept the assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-assignment/invite_link`.
            public var invite_link: Swift.String
            /// Whether the invitation link is enabled. Visiting an enabled invitation link will accept the assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-assignment/invitations_enabled`.
            public var invitations_enabled: Swift.Bool
            /// Sluggified name of the assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-assignment/slug`.
            public var slug: Swift.String
            /// Whether students are admins on created repository on accepted assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-assignment/students_are_repo_admins`.
            public var students_are_repo_admins: Swift.Bool
            /// Whether feedback pull request will be created on assignment acceptance.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-assignment/feedback_pull_requests_enabled`.
            public var feedback_pull_requests_enabled: Swift.Bool
            /// The maximum allowable teams for the assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-assignment/max_teams`.
            public var max_teams: Swift.Int?
            /// The maximum allowable members per team.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-assignment/max_members`.
            public var max_members: Swift.Int?
            /// The selected editor for the assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-assignment/editor`.
            public var editor: Swift.String
            /// The number of students that have accepted the assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-assignment/accepted`.
            public var accepted: Swift.Int
            /// The number of students that have submitted the assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-assignment/submitted`.
            public var submitted: Swift.Int
            /// The number of students that have passed the assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-assignment/passing`.
            public var passing: Swift.Int
            /// The programming language used in the assignment.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-assignment/language`.
            public var language: Swift.String
            /// The time at which the assignment is due.
            ///
            /// - Remark: Generated from `#/components/schemas/simple-classroom-assignment/deadline`.
            public var deadline: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/simple-classroom-assignment/classroom`.
            public var classroom: Components.Schemas.simple_hyphen_classroom
            /// Creates a new `simple_hyphen_classroom_hyphen_assignment`.
            ///
            /// - Parameters:
            ///   - id: Unique identifier of the repository.
            ///   - public_repo: Whether an accepted assignment creates a public repository.
            ///   - title: Assignment title.
            ///   - _type: Whether it's a Group Assignment or Individual Assignment.
            ///   - invite_link: The link that a student can use to accept the assignment.
            ///   - invitations_enabled: Whether the invitation link is enabled. Visiting an enabled invitation link will accept the assignment.
            ///   - slug: Sluggified name of the assignment.
            ///   - students_are_repo_admins: Whether students are admins on created repository on accepted assignment.
            ///   - feedback_pull_requests_enabled: Whether feedback pull request will be created on assignment acceptance.
            ///   - max_teams: The maximum allowable teams for the assignment.
            ///   - max_members: The maximum allowable members per team.
            ///   - editor: The selected editor for the assignment.
            ///   - accepted: The number of students that have accepted the assignment.
            ///   - submitted: The number of students that have submitted the assignment.
            ///   - passing: The number of students that have passed the assignment.
            ///   - language: The programming language used in the assignment.
            ///   - deadline: The time at which the assignment is due.
            ///   - classroom:
            public init(
                id: Swift.Int,
                public_repo: Swift.Bool,
                title: Swift.String,
                _type: Components.Schemas.simple_hyphen_classroom_hyphen_assignment._typePayload,
                invite_link: Swift.String,
                invitations_enabled: Swift.Bool,
                slug: Swift.String,
                students_are_repo_admins: Swift.Bool,
                feedback_pull_requests_enabled: Swift.Bool,
                max_teams: Swift.Int? = nil,
                max_members: Swift.Int? = nil,
                editor: Swift.String,
                accepted: Swift.Int,
                submitted: Swift.Int,
                passing: Swift.Int,
                language: Swift.String,
                deadline: Foundation.Date? = nil,
                classroom: Components.Schemas.simple_hyphen_classroom
            ) {
                self.id = id
                self.public_repo = public_repo
                self.title = title
                self._type = _type
                self.invite_link = invite_link
                self.invitations_enabled = invitations_enabled
                self.slug = slug
                self.students_are_repo_admins = students_are_repo_admins
                self.feedback_pull_requests_enabled = feedback_pull_requests_enabled
                self.max_teams = max_teams
                self.max_members = max_members
                self.editor = editor
                self.accepted = accepted
                self.submitted = submitted
                self.passing = passing
                self.language = language
                self.deadline = deadline
                self.classroom = classroom
            }
            public enum CodingKeys: String, CodingKey {
                case id
                case public_repo
                case title
                case _type = "type"
                case invite_link
                case invitations_enabled
                case slug
                case students_are_repo_admins
                case feedback_pull_requests_enabled
                case max_teams
                case max_members
                case editor
                case accepted
                case submitted
                case passing
                case language
                case deadline
                case classroom
            }
        }
        /// A GitHub Classroom accepted assignment
        ///
        /// - Remark: Generated from `#/components/schemas/classroom-accepted-assignment`.
        public struct classroom_hyphen_accepted_hyphen_assignment: Codable, Hashable, Sendable {
            /// Unique identifier of the repository.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-accepted-assignment/id`.
            public var id: Swift.Int
            /// Whether an accepted assignment has been submitted.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-accepted-assignment/submitted`.
            public var submitted: Swift.Bool
            /// Whether a submission passed.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-accepted-assignment/passing`.
            public var passing: Swift.Bool
            /// Count of student commits.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-accepted-assignment/commit_count`.
            public var commit_count: Swift.Int
            /// Most recent grade.
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-accepted-assignment/grade`.
            public var grade: Swift.String
            /// - Remark: Generated from `#/components/schemas/classroom-accepted-assignment/students`.
            public var students: [Components.Schemas.simple_hyphen_classroom_hyphen_user]
            /// - Remark: Generated from `#/components/schemas/classroom-accepted-assignment/repository`.
            public var repository: Components.Schemas.simple_hyphen_classroom_hyphen_repository
            /// - Remark: Generated from `#/components/schemas/classroom-accepted-assignment/assignment`.
            public var assignment: Components.Schemas.simple_hyphen_classroom_hyphen_assignment
            /// Creates a new `classroom_hyphen_accepted_hyphen_assignment`.
            ///
            /// - Parameters:
            ///   - id: Unique identifier of the repository.
            ///   - submitted: Whether an accepted assignment has been submitted.
            ///   - passing: Whether a submission passed.
            ///   - commit_count: Count of student commits.
            ///   - grade: Most recent grade.
            ///   - students:
            ///   - repository:
            ///   - assignment:
            public init(
                id: Swift.Int,
                submitted: Swift.Bool,
                passing: Swift.Bool,
                commit_count: Swift.Int,
                grade: Swift.String,
                students: [Components.Schemas.simple_hyphen_classroom_hyphen_user],
                repository: Components.Schemas.simple_hyphen_classroom_hyphen_repository,
                assignment: Components.Schemas.simple_hyphen_classroom_hyphen_assignment
            ) {
                self.id = id
                self.submitted = submitted
                self.passing = passing
                self.commit_count = commit_count
                self.grade = grade
                self.students = students
                self.repository = repository
                self.assignment = assignment
            }
            public enum CodingKeys: String, CodingKey {
                case id
                case submitted
                case passing
                case commit_count
                case grade
                case students
                case repository
                case assignment
            }
        }
        /// Grade for a student or groups GitHub Classroom assignment
        ///
        /// - Remark: Generated from `#/components/schemas/classroom-assignment-grade`.
        public struct classroom_hyphen_assignment_hyphen_grade: Codable, Hashable, Sendable {
            /// Name of the assignment
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment-grade/assignment_name`.
            public var assignment_name: Swift.String
            /// URL of the assignment
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment-grade/assignment_url`.
            public var assignment_url: Swift.String
            /// URL of the starter code for the assignment
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment-grade/starter_code_url`.
            public var starter_code_url: Swift.String
            /// GitHub username of the student
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment-grade/github_username`.
            public var github_username: Swift.String
            /// Roster identifier of the student
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment-grade/roster_identifier`.
            public var roster_identifier: Swift.String
            /// Name of the student's assignment repository
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment-grade/student_repository_name`.
            public var student_repository_name: Swift.String
            /// URL of the student's assignment repository
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment-grade/student_repository_url`.
            public var student_repository_url: Swift.String
            /// Timestamp of the student's assignment submission
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment-grade/submission_timestamp`.
            public var submission_timestamp: Swift.String
            /// Number of points awarded to the student
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment-grade/points_awarded`.
            public var points_awarded: Swift.Int
            /// Number of points available for the assignment
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment-grade/points_available`.
            public var points_available: Swift.Int
            /// If a group assignment, name of the group the student is in
            ///
            /// - Remark: Generated from `#/components/schemas/classroom-assignment-grade/group_name`.
            public var group_name: Swift.String?
            /// Creates a new `classroom_hyphen_assignment_hyphen_grade`.
            ///
            /// - Parameters:
            ///   - assignment_name: Name of the assignment
            ///   - assignment_url: URL of the assignment
            ///   - starter_code_url: URL of the starter code for the assignment
            ///   - github_username: GitHub username of the student
            ///   - roster_identifier: Roster identifier of the student
            ///   - student_repository_name: Name of the student's assignment repository
            ///   - student_repository_url: URL of the student's assignment repository
            ///   - submission_timestamp: Timestamp of the student's assignment submission
            ///   - points_awarded: Number of points awarded to the student
            ///   - points_available: Number of points available for the assignment
            ///   - group_name: If a group assignment, name of the group the student is in
            public init(
                assignment_name: Swift.String,
                assignment_url: Swift.String,
                starter_code_url: Swift.String,
                github_username: Swift.String,
                roster_identifier: Swift.String,
                student_repository_name: Swift.String,
                student_repository_url: Swift.String,
                submission_timestamp: Swift.String,
                points_awarded: Swift.Int,
                points_available: Swift.Int,
                group_name: Swift.String? = nil
            ) {
                self.assignment_name = assignment_name
                self.assignment_url = assignment_url
                self.starter_code_url = starter_code_url
                self.github_username = github_username
                self.roster_identifier = roster_identifier
                self.student_repository_name = student_repository_name
                self.student_repository_url = student_repository_url
                self.submission_timestamp = submission_timestamp
                self.points_awarded = points_awarded
                self.points_available = points_available
                self.group_name = group_name
            }
            public enum CodingKeys: String, CodingKey {
                case assignment_name
                case assignment_url
                case starter_code_url
                case github_username
                case roster_identifier
                case student_repository_name
                case student_repository_url
                case submission_timestamp
                case points_awarded
                case points_available
                case group_name
            }
        }
    }
    /// Types generated from the `#/components/parameters` section of the OpenAPI document.
    public enum Parameters {
        /// The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
        ///
        /// - Remark: Generated from `#/components/parameters/per-page`.
        public typealias per_hyphen_page = Swift.Int
        /// The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
        ///
        /// - Remark: Generated from `#/components/parameters/page`.
        public typealias page = Swift.Int
        /// The unique identifier of the classroom assignment.
        ///
        /// - Remark: Generated from `#/components/parameters/assignment-id`.
        public typealias assignment_hyphen_id = Swift.Int
        /// The unique identifier of the classroom.
        ///
        /// - Remark: Generated from `#/components/parameters/classroom-id`.
        public typealias classroom_hyphen_id = Swift.Int
    }
    /// Types generated from the `#/components/requestBodies` section of the OpenAPI document.
    public enum RequestBodies {}
    /// Types generated from the `#/components/responses` section of the OpenAPI document.
    public enum Responses {
        public struct not_found: Sendable, Hashable {
            /// - Remark: Generated from `#/components/responses/not_found/content`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/components/responses/not_found/content/application\/json`.
                case json(Components.Schemas.basic_hyphen_error)
                /// The associated value of the enum case if `self` is `.json`.
                ///
                /// - Throws: An error if `self` is not `.json`.
                /// - SeeAlso: `.json`.
                public var json: Components.Schemas.basic_hyphen_error {
                    get throws {
                        switch self {
                        case let .json(body):
                            return body
                        }
                    }
                }
            }
            /// Received HTTP response body
            public var body: Components.Responses.not_found.Body
            /// Creates a new `not_found`.
            ///
            /// - Parameters:
            ///   - body: Received HTTP response body
            public init(body: Components.Responses.not_found.Body) {
                self.body = body
            }
        }
    }
    /// Types generated from the `#/components/headers` section of the OpenAPI document.
    public enum Headers {}
}

/// API operations, with input and output types, generated from `#/paths` in the OpenAPI document.
public enum Operations {
    /// Get an assignment
    ///
    /// Gets a GitHub Classroom assignment. Assignment will only be returned if the current user is an administrator of the GitHub Classroom for the assignment.
    ///
    /// - Remark: HTTP `GET /assignments/{assignment_id}`.
    /// - Remark: Generated from `#/paths//assignments/{assignment_id}/get(classroom/get-an-assignment)`.
    public enum classroom_sol_get_hyphen_an_hyphen_assignment {
        public static let id: Swift.String = "classroom/get-an-assignment"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/assignments/{assignment_id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// The unique identifier of the classroom assignment.
                ///
                /// - Remark: Generated from `#/paths/assignments/{assignment_id}/GET/path/assignment_id`.
                public var assignment_id: Components.Parameters.assignment_hyphen_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - assignment_id: The unique identifier of the classroom assignment.
                public init(assignment_id: Components.Parameters.assignment_hyphen_id) {
                    self.assignment_id = assignment_id
                }
            }
            public var path: Operations.classroom_sol_get_hyphen_an_hyphen_assignment.Input.Path
            /// - Remark: Generated from `#/paths/assignments/{assignment_id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.classroom_sol_get_hyphen_an_hyphen_assignment.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.classroom_sol_get_hyphen_an_hyphen_assignment.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.classroom_sol_get_hyphen_an_hyphen_assignment.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.classroom_sol_get_hyphen_an_hyphen_assignment.Input.Path,
                headers: Operations.classroom_sol_get_hyphen_an_hyphen_assignment.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assignments/{assignment_id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/assignments/{assignment_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.classroom_hyphen_assignment)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.classroom_hyphen_assignment {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.classroom_sol_get_hyphen_an_hyphen_assignment.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.classroom_sol_get_hyphen_an_hyphen_assignment.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//assignments/{assignment_id}/get(classroom/get-an-assignment)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.classroom_sol_get_hyphen_an_hyphen_assignment.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.classroom_sol_get_hyphen_an_hyphen_assignment.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Resource not found
            ///
            /// - Remark: Generated from `#/paths//assignments/{assignment_id}/get(classroom/get-an-assignment)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses.not_found)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Components.Responses.not_found {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List accepted assignments for an assignment
    ///
    /// Lists any assignment repositories that have been created by students accepting a GitHub Classroom assignment. Accepted assignments will only be returned if the current user is an administrator of the GitHub Classroom for the assignment.
    ///
    /// - Remark: HTTP `GET /assignments/{assignment_id}/accepted_assignments`.
    /// - Remark: Generated from `#/paths//assignments/{assignment_id}/accepted_assignments/get(classroom/list-accepted-assignments-for-an-assignment)`.
    public enum classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment {
        public static let id: Swift.String = "classroom/list-accepted-assignments-for-an-assignment"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/assignments/{assignment_id}/accepted_assignments/GET/path`.
            public struct Path: Sendable, Hashable {
                /// The unique identifier of the classroom assignment.
                ///
                /// - Remark: Generated from `#/paths/assignments/{assignment_id}/accepted_assignments/GET/path/assignment_id`.
                public var assignment_id: Components.Parameters.assignment_hyphen_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - assignment_id: The unique identifier of the classroom assignment.
                public init(assignment_id: Components.Parameters.assignment_hyphen_id) {
                    self.assignment_id = assignment_id
                }
            }
            public var path: Operations.classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment.Input.Path
            /// - Remark: Generated from `#/paths/assignments/{assignment_id}/accepted_assignments/GET/query`.
            public struct Query: Sendable, Hashable {
                /// The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///
                /// - Remark: Generated from `#/paths/assignments/{assignment_id}/accepted_assignments/GET/query/page`.
                public var page: Components.Parameters.page?
                /// The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///
                /// - Remark: Generated from `#/paths/assignments/{assignment_id}/accepted_assignments/GET/query/per_page`.
                public var per_page: Components.Parameters.per_hyphen_page?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - page: The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///   - per_page: The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                public init(
                    page: Components.Parameters.page? = nil,
                    per_page: Components.Parameters.per_hyphen_page? = nil
                ) {
                    self.page = page
                    self.per_page = per_page
                }
            }
            public var query: Operations.classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment.Input.Query
            /// - Remark: Generated from `#/paths/assignments/{assignment_id}/accepted_assignments/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment.Input.Path,
                query: Operations.classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment.Input.Query = .init(),
                headers: Operations.classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assignments/{assignment_id}/accepted_assignments/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/assignments/{assignment_id}/accepted_assignments/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.classroom_hyphen_accepted_hyphen_assignment])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: [Components.Schemas.classroom_hyphen_accepted_hyphen_assignment] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//assignments/{assignment_id}/accepted_assignments/get(classroom/list-accepted-assignments-for-an-assignment)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.classroom_sol_list_hyphen_accepted_hyphen_assignments_hyphen_for_hyphen_an_hyphen_assignment.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get assignment grades
    ///
    /// Gets grades for a GitHub Classroom assignment. Grades will only be returned if the current user is an administrator of the GitHub Classroom for the assignment.
    ///
    /// - Remark: HTTP `GET /assignments/{assignment_id}/grades`.
    /// - Remark: Generated from `#/paths//assignments/{assignment_id}/grades/get(classroom/get-assignment-grades)`.
    public enum classroom_sol_get_hyphen_assignment_hyphen_grades {
        public static let id: Swift.String = "classroom/get-assignment-grades"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/assignments/{assignment_id}/grades/GET/path`.
            public struct Path: Sendable, Hashable {
                /// The unique identifier of the classroom assignment.
                ///
                /// - Remark: Generated from `#/paths/assignments/{assignment_id}/grades/GET/path/assignment_id`.
                public var assignment_id: Components.Parameters.assignment_hyphen_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - assignment_id: The unique identifier of the classroom assignment.
                public init(assignment_id: Components.Parameters.assignment_hyphen_id) {
                    self.assignment_id = assignment_id
                }
            }
            public var path: Operations.classroom_sol_get_hyphen_assignment_hyphen_grades.Input.Path
            /// - Remark: Generated from `#/paths/assignments/{assignment_id}/grades/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.classroom_sol_get_hyphen_assignment_hyphen_grades.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.classroom_sol_get_hyphen_assignment_hyphen_grades.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.classroom_sol_get_hyphen_assignment_hyphen_grades.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.classroom_sol_get_hyphen_assignment_hyphen_grades.Input.Path,
                headers: Operations.classroom_sol_get_hyphen_assignment_hyphen_grades.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/assignments/{assignment_id}/grades/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/assignments/{assignment_id}/grades/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.classroom_hyphen_assignment_hyphen_grade])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: [Components.Schemas.classroom_hyphen_assignment_hyphen_grade] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.classroom_sol_get_hyphen_assignment_hyphen_grades.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.classroom_sol_get_hyphen_assignment_hyphen_grades.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//assignments/{assignment_id}/grades/get(classroom/get-assignment-grades)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.classroom_sol_get_hyphen_assignment_hyphen_grades.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.classroom_sol_get_hyphen_assignment_hyphen_grades.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Resource not found
            ///
            /// - Remark: Generated from `#/paths//assignments/{assignment_id}/grades/get(classroom/get-assignment-grades)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses.not_found)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Components.Responses.not_found {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List classrooms
    ///
    /// Lists GitHub Classroom classrooms for the current user. Classrooms will only be returned if the current user is an administrator of one or more GitHub Classrooms.
    ///
    /// - Remark: HTTP `GET /classrooms`.
    /// - Remark: Generated from `#/paths//classrooms/get(classroom/list-classrooms)`.
    public enum classroom_sol_list_hyphen_classrooms {
        public static let id: Swift.String = "classroom/list-classrooms"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/classrooms/GET/query`.
            public struct Query: Sendable, Hashable {
                /// The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///
                /// - Remark: Generated from `#/paths/classrooms/GET/query/page`.
                public var page: Components.Parameters.page?
                /// The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///
                /// - Remark: Generated from `#/paths/classrooms/GET/query/per_page`.
                public var per_page: Components.Parameters.per_hyphen_page?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - page: The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///   - per_page: The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                public init(
                    page: Components.Parameters.page? = nil,
                    per_page: Components.Parameters.per_hyphen_page? = nil
                ) {
                    self.page = page
                    self.per_page = per_page
                }
            }
            public var query: Operations.classroom_sol_list_hyphen_classrooms.Input.Query
            /// - Remark: Generated from `#/paths/classrooms/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.classroom_sol_list_hyphen_classrooms.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.classroom_sol_list_hyphen_classrooms.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.classroom_sol_list_hyphen_classrooms.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            public init(
                query: Operations.classroom_sol_list_hyphen_classrooms.Input.Query = .init(),
                headers: Operations.classroom_sol_list_hyphen_classrooms.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/classrooms/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/classrooms/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.simple_hyphen_classroom])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: [Components.Schemas.simple_hyphen_classroom] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.classroom_sol_list_hyphen_classrooms.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.classroom_sol_list_hyphen_classrooms.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//classrooms/get(classroom/list-classrooms)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.classroom_sol_list_hyphen_classrooms.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.classroom_sol_list_hyphen_classrooms.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Get a classroom
    ///
    /// Gets a GitHub Classroom classroom for the current user. Classroom will only be returned if the current user is an administrator of the GitHub Classroom.
    ///
    /// - Remark: HTTP `GET /classrooms/{classroom_id}`.
    /// - Remark: Generated from `#/paths//classrooms/{classroom_id}/get(classroom/get-a-classroom)`.
    public enum classroom_sol_get_hyphen_a_hyphen_classroom {
        public static let id: Swift.String = "classroom/get-a-classroom"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/classrooms/{classroom_id}/GET/path`.
            public struct Path: Sendable, Hashable {
                /// The unique identifier of the classroom.
                ///
                /// - Remark: Generated from `#/paths/classrooms/{classroom_id}/GET/path/classroom_id`.
                public var classroom_id: Components.Parameters.classroom_hyphen_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - classroom_id: The unique identifier of the classroom.
                public init(classroom_id: Components.Parameters.classroom_hyphen_id) {
                    self.classroom_id = classroom_id
                }
            }
            public var path: Operations.classroom_sol_get_hyphen_a_hyphen_classroom.Input.Path
            /// - Remark: Generated from `#/paths/classrooms/{classroom_id}/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.classroom_sol_get_hyphen_a_hyphen_classroom.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.classroom_sol_get_hyphen_a_hyphen_classroom.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.classroom_sol_get_hyphen_a_hyphen_classroom.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            public init(
                path: Operations.classroom_sol_get_hyphen_a_hyphen_classroom.Input.Path,
                headers: Operations.classroom_sol_get_hyphen_a_hyphen_classroom.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/classrooms/{classroom_id}/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/classrooms/{classroom_id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.classroom)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.classroom {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.classroom_sol_get_hyphen_a_hyphen_classroom.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.classroom_sol_get_hyphen_a_hyphen_classroom.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//classrooms/{classroom_id}/get(classroom/get-a-classroom)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.classroom_sol_get_hyphen_a_hyphen_classroom.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.classroom_sol_get_hyphen_a_hyphen_classroom.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Resource not found
            ///
            /// - Remark: Generated from `#/paths//classrooms/{classroom_id}/get(classroom/get-a-classroom)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Components.Responses.not_found)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            public var notFound: Components.Responses.not_found {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// List assignments for a classroom
    ///
    /// Lists GitHub Classroom assignments for a classroom. Assignments will only be returned if the current user is an administrator of the GitHub Classroom.
    ///
    /// - Remark: HTTP `GET /classrooms/{classroom_id}/assignments`.
    /// - Remark: Generated from `#/paths//classrooms/{classroom_id}/assignments/get(classroom/list-assignments-for-a-classroom)`.
    public enum classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom {
        public static let id: Swift.String = "classroom/list-assignments-for-a-classroom"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/classrooms/{classroom_id}/assignments/GET/path`.
            public struct Path: Sendable, Hashable {
                /// The unique identifier of the classroom.
                ///
                /// - Remark: Generated from `#/paths/classrooms/{classroom_id}/assignments/GET/path/classroom_id`.
                public var classroom_id: Components.Parameters.classroom_hyphen_id
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - classroom_id: The unique identifier of the classroom.
                public init(classroom_id: Components.Parameters.classroom_hyphen_id) {
                    self.classroom_id = classroom_id
                }
            }
            public var path: Operations.classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom.Input.Path
            /// - Remark: Generated from `#/paths/classrooms/{classroom_id}/assignments/GET/query`.
            public struct Query: Sendable, Hashable {
                /// The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///
                /// - Remark: Generated from `#/paths/classrooms/{classroom_id}/assignments/GET/query/page`.
                public var page: Components.Parameters.page?
                /// The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///
                /// - Remark: Generated from `#/paths/classrooms/{classroom_id}/assignments/GET/query/per_page`.
                public var per_page: Components.Parameters.per_hyphen_page?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - page: The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                ///   - per_page: The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
                public init(
                    page: Components.Parameters.page? = nil,
                    per_page: Components.Parameters.per_hyphen_page? = nil
                ) {
                    self.page = page
                    self.per_page = per_page
                }
            }
            public var query: Operations.classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom.Input.Query
            /// - Remark: Generated from `#/paths/classrooms/{classroom_id}/assignments/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            public init(
                path: Operations.classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom.Input.Path,
                query: Operations.classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom.Input.Query = .init(),
                headers: Operations.classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/classrooms/{classroom_id}/assignments/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/classrooms/{classroom_id}/assignments/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.simple_hyphen_classroom_hyphen_assignment])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: [Components.Schemas.simple_hyphen_classroom_hyphen_assignment] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Response
            ///
            /// - Remark: Generated from `#/paths//classrooms/{classroom_id}/assignments/get(classroom/list-assignments-for-a-classroom)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.classroom_sol_list_hyphen_assignments_hyphen_for_hyphen_a_hyphen_classroom.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
}
