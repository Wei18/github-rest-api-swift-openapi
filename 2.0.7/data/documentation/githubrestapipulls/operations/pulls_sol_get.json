{
  "abstract" : [
    {
      "text" : "Get a pull request",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/GitHubRestAPIPulls\/documentation\/GitHubRestAPIPulls",
        "doc:\/\/GitHubRestAPIPulls\/documentation\/GitHubRestAPIPulls\/Operations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/GitHubRestAPIPulls\/documentation\/GitHubRestAPIPulls\/Operations\/pulls_sol_get"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:18GitHubRestAPIPulls10OperationsO13pulls_sol_getO",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "enum"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "pulls_sol_get"
      }
    ],
    "modules" : [
      {
        "name" : "GitHubRestAPIPulls"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "pulls_sol_get"
      }
    ],
    "remoteSource" : {
      "fileName" : "Types.swift",
      "url" : "https:\/\/github.com\/wei18\/github-rest-api-swift-openapi\/Sources\/pulls\/Types.swift#L6791"
    },
    "role" : "symbol",
    "roleHeading" : "Enumeration",
    "symbolKind" : "enum",
    "title" : "Operations.pulls_sol_get"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "enum"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "pulls_sol_get"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/docs.github.com\/github\/getting-started-with-github\/githubs-products",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " in the GitHub Help documentation.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Lists details of a pull request by providing its number.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "When you get, ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/docs.github.com\/rest\/pulls\/pulls\/#create-a-pull-request",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", or ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/docs.github.com\/rest\/pulls\/pulls#update-a-pull-request",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " a pull request, GitHub creates a merge commit to test whether the pull request can be automatically merged into the base branch. This test commit is not added to the base branch or the head branch. You can review the status of the test commit using the ",
              "type" : "text"
            },
            {
              "code" : "mergeable",
              "type" : "codeVoice"
            },
            {
              "text" : " key. For more information, see “",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/docs.github.com\/rest\/guides\/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : "”.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The value of the ",
              "type" : "text"
            },
            {
              "code" : "mergeable",
              "type" : "codeVoice"
            },
            {
              "text" : " attribute can be ",
              "type" : "text"
            },
            {
              "code" : "true",
              "type" : "codeVoice"
            },
            {
              "text" : ", ",
              "type" : "text"
            },
            {
              "code" : "false",
              "type" : "codeVoice"
            },
            {
              "text" : ", or ",
              "type" : "text"
            },
            {
              "code" : "null",
              "type" : "codeVoice"
            },
            {
              "text" : ". If the value is ",
              "type" : "text"
            },
            {
              "code" : "null",
              "type" : "codeVoice"
            },
            {
              "text" : ", then GitHub has started a background job to compute the mergeability. After giving the job time to complete, resubmit the request. When the job finishes, you will see a non-",
              "type" : "text"
            },
            {
              "code" : "null",
              "type" : "codeVoice"
            },
            {
              "text" : " value for the ",
              "type" : "text"
            },
            {
              "code" : "mergeable",
              "type" : "codeVoice"
            },
            {
              "text" : " attribute in the response. If ",
              "type" : "text"
            },
            {
              "code" : "mergeable",
              "type" : "codeVoice"
            },
            {
              "text" : " is ",
              "type" : "text"
            },
            {
              "code" : "true",
              "type" : "codeVoice"
            },
            {
              "text" : ", then ",
              "type" : "text"
            },
            {
              "code" : "merge_commit_sha",
              "type" : "codeVoice"
            },
            {
              "text" : " will be the SHA of the ",
              "type" : "text"
            },
            {
              "inlineContent" : [
                {
                  "text" : "test",
                  "type" : "text"
                }
              ],
              "type" : "emphasis"
            },
            {
              "text" : " merge commit.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The value of the ",
              "type" : "text"
            },
            {
              "code" : "merge_commit_sha",
              "type" : "codeVoice"
            },
            {
              "text" : " attribute changes depending on the state of the pull request. Before merging a pull request, the ",
              "type" : "text"
            },
            {
              "code" : "merge_commit_sha",
              "type" : "codeVoice"
            },
            {
              "text" : " attribute holds the SHA of the ",
              "type" : "text"
            },
            {
              "inlineContent" : [
                {
                  "text" : "test",
                  "type" : "text"
                }
              ],
              "type" : "emphasis"
            },
            {
              "text" : " merge commit. After merging a pull request, the ",
              "type" : "text"
            },
            {
              "code" : "merge_commit_sha",
              "type" : "codeVoice"
            },
            {
              "text" : " attribute changes depending on how you merged the pull request:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "If merged as a ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "https:\/\/docs.github.com\/articles\/about-merge-methods-on-github\/",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : ", ",
                      "type" : "text"
                    },
                    {
                      "code" : "merge_commit_sha",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " represents the SHA of the merge commit.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "If merged via a ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "https:\/\/docs.github.com\/articles\/about-merge-methods-on-github\/#squashing-your-merge-commits",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : ", ",
                      "type" : "text"
                    },
                    {
                      "code" : "merge_commit_sha",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " represents the SHA of the squashed commit on the base branch.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "If ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "https:\/\/docs.github.com\/articles\/about-merge-methods-on-github\/#rebasing-and-merging-your-commits",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : ", ",
                      "type" : "text"
                    },
                    {
                      "code" : "merge_commit_sha",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " represents the commit that the base branch was updated to.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "inlineContent" : [
            {
              "text" : "Pass the appropriate ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/docs.github.com\/rest\/using-the-rest-api\/getting-started-with-the-rest-api#media-types",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " to fetch diff and patch formats.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "This endpoint supports the following custom media types. For more information, see “",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/docs.github.com\/rest\/using-the-rest-api\/getting-started-with-the-rest-api#media-types",
              "isActive" : true,
              "overridingTitle" : "Media types",
              "overridingTitleInlineContent" : [
                {
                  "text" : "Media types",
                  "type" : "text"
                }
              ],
              "type" : "reference"
            },
            {
              "text" : ".”",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "inlineContent" : [
                        {
                          "code" : "application\/vnd.github.raw+json",
                          "type" : "codeVoice"
                        }
                      ],
                      "type" : "strong"
                    },
                    {
                      "text" : ": Returns the raw markdown body. Response will include ",
                      "type" : "text"
                    },
                    {
                      "code" : "body",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ". This is the default if you do not pass any specific media type.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "inlineContent" : [
                        {
                          "code" : "application\/vnd.github.text+json",
                          "type" : "codeVoice"
                        }
                      ],
                      "type" : "strong"
                    },
                    {
                      "text" : ": Returns a text only representation of the markdown body. Response will include ",
                      "type" : "text"
                    },
                    {
                      "code" : "body_text",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ".",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "inlineContent" : [
                        {
                          "code" : "application\/vnd.github.html+json",
                          "type" : "codeVoice"
                        }
                      ],
                      "type" : "strong"
                    },
                    {
                      "text" : ": Returns HTML rendered from the body’s markdown. Response will include ",
                      "type" : "text"
                    },
                    {
                      "code" : "body_html",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ".",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "inlineContent" : [
                        {
                          "code" : "application\/vnd.github.full+json",
                          "type" : "codeVoice"
                        }
                      ],
                      "type" : "strong"
                    },
                    {
                      "text" : ": Returns raw, text, and HTML representations. Response will include ",
                      "type" : "text"
                    },
                    {
                      "code" : "body",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ", ",
                      "type" : "text"
                    },
                    {
                      "code" : "body_text",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ", and ",
                      "type" : "text"
                    },
                    {
                      "code" : "body_html",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ".",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "inlineContent" : [
                        {
                          "code" : "application\/vnd.github.diff",
                          "type" : "codeVoice"
                        }
                      ],
                      "type" : "strong"
                    },
                    {
                      "text" : ": For more information, see “",
                      "type" : "text"
                    },
                    {
                      "identifier" : "https:\/\/git-scm.com\/docs\/git-diff",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : "” in the Git documentation. If a diff is corrupt, contact us through the ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "https:\/\/support.github.com\/",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : ". Include the repository name and pull request ID in your message.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "HTTP ",
                  "type" : "text"
                },
                {
                  "code" : "GET \/repos\/{owner}\/{repo}\/pulls\/{pull_number}",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Remark",
          "style" : "note",
          "type" : "aside"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Generated from ",
                  "type" : "text"
                },
                {
                  "code" : "#\/paths\/\/repos\/{owner}\/{repo}\/pulls\/{pull_number}\/get(pulls\/get)",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Remark",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/GitHubRestAPIPulls\/documentation\/GitHubRestAPIPulls\/Operations\/pulls_sol_get\/Input"
      ],
      "title" : "Structures"
    },
    {
      "identifiers" : [
        "doc:\/\/GitHubRestAPIPulls\/documentation\/GitHubRestAPIPulls\/Operations\/pulls_sol_get\/id"
      ],
      "title" : "Type Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/GitHubRestAPIPulls\/documentation\/GitHubRestAPIPulls\/Operations\/pulls_sol_get\/AcceptableContentType",
        "doc:\/\/GitHubRestAPIPulls\/documentation\/GitHubRestAPIPulls\/Operations\/pulls_sol_get\/Output"
      ],
      "title" : "Enumerations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/githubrestapipulls\/operations\/pulls_sol_get"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://GitHubRestAPIPulls/documentation/GitHubRestAPIPulls": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/GitHubRestAPIPulls\/documentation\/GitHubRestAPIPulls",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "GitHubRestAPIPulls",
  "type" : "topic",
  "url" : "\/documentation\/githubrestapipulls"
},
"doc://GitHubRestAPIPulls/documentation/GitHubRestAPIPulls/Operations": {
  "abstract" : [
    {
      "text" : "API operations, with input and output types, generated from ",
      "type" : "text"
    },
    {
      "code" : "#\/paths",
      "type" : "codeVoice"
    },
    {
      "text" : " in the OpenAPI document.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Operations"
    }
  ],
  "identifier" : "doc:\/\/GitHubRestAPIPulls\/documentation\/GitHubRestAPIPulls\/Operations",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Operations"
    }
  ],
  "role" : "symbol",
  "title" : "Operations",
  "type" : "topic",
  "url" : "\/documentation\/githubrestapipulls\/operations"
},
"doc://GitHubRestAPIPulls/documentation/GitHubRestAPIPulls/Operations/pulls_sol_get": {
  "abstract" : [
    {
      "text" : "Get a pull request",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "pulls_sol_get"
    }
  ],
  "identifier" : "doc:\/\/GitHubRestAPIPulls\/documentation\/GitHubRestAPIPulls\/Operations\/pulls_sol_get",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "pulls_sol_get"
    }
  ],
  "role" : "symbol",
  "title" : "Operations.pulls_sol_get",
  "type" : "topic",
  "url" : "\/documentation\/githubrestapipulls\/operations\/pulls_sol_get"
},
"doc://GitHubRestAPIPulls/documentation/GitHubRestAPIPulls/Operations/pulls_sol_get/AcceptableContentType": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AcceptableContentType"
    }
  ],
  "identifier" : "doc:\/\/GitHubRestAPIPulls\/documentation\/GitHubRestAPIPulls\/Operations\/pulls_sol_get\/AcceptableContentType",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AcceptableContentType"
    }
  ],
  "role" : "symbol",
  "title" : "Operations.pulls_sol_get.AcceptableContentType",
  "type" : "topic",
  "url" : "\/documentation\/githubrestapipulls\/operations\/pulls_sol_get\/acceptablecontenttype"
},
"doc://GitHubRestAPIPulls/documentation/GitHubRestAPIPulls/Operations/pulls_sol_get/Input": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Input"
    }
  ],
  "identifier" : "doc:\/\/GitHubRestAPIPulls\/documentation\/GitHubRestAPIPulls\/Operations\/pulls_sol_get\/Input",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Input"
    }
  ],
  "role" : "symbol",
  "title" : "Operations.pulls_sol_get.Input",
  "type" : "topic",
  "url" : "\/documentation\/githubrestapipulls\/operations\/pulls_sol_get\/input"
},
"doc://GitHubRestAPIPulls/documentation/GitHubRestAPIPulls/Operations/pulls_sol_get/Output": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Output"
    }
  ],
  "identifier" : "doc:\/\/GitHubRestAPIPulls\/documentation\/GitHubRestAPIPulls\/Operations\/pulls_sol_get\/Output",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Output"
    }
  ],
  "role" : "symbol",
  "title" : "Operations.pulls_sol_get.Output",
  "type" : "topic",
  "url" : "\/documentation\/githubrestapipulls\/operations\/pulls_sol_get\/output"
},
"doc://GitHubRestAPIPulls/documentation/GitHubRestAPIPulls/Operations/pulls_sol_get/id": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "id"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/GitHubRestAPIPulls\/documentation\/GitHubRestAPIPulls\/Operations\/pulls_sol_get\/id",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "id",
  "type" : "topic",
  "url" : "\/documentation\/githubrestapipulls\/operations\/pulls_sol_get\/id"
},
"https://docs.github.com/articles/about-merge-methods-on-github/": {
  "identifier" : "https:\/\/docs.github.com\/articles\/about-merge-methods-on-github\/",
  "title" : "merge commit",
  "titleInlineContent" : [
    {
      "text" : "merge commit",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.github.com\/articles\/about-merge-methods-on-github\/"
},
"https://docs.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits": {
  "identifier" : "https:\/\/docs.github.com\/articles\/about-merge-methods-on-github\/#rebasing-and-merging-your-commits",
  "title" : "rebased",
  "titleInlineContent" : [
    {
      "text" : "rebased",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.github.com\/articles\/about-merge-methods-on-github\/#rebasing-and-merging-your-commits"
},
"https://docs.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits": {
  "identifier" : "https:\/\/docs.github.com\/articles\/about-merge-methods-on-github\/#squashing-your-merge-commits",
  "title" : "squash",
  "titleInlineContent" : [
    {
      "text" : "squash",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.github.com\/articles\/about-merge-methods-on-github\/#squashing-your-merge-commits"
},
"https://docs.github.com/github/getting-started-with-github/githubs-products": {
  "identifier" : "https:\/\/docs.github.com\/github\/getting-started-with-github\/githubs-products",
  "title" : "GitHub’s products",
  "titleInlineContent" : [
    {
      "text" : "GitHub’s products",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.github.com\/github\/getting-started-with-github\/githubs-products"
},
"https://docs.github.com/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests": {
  "identifier" : "https:\/\/docs.github.com\/rest\/guides\/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests",
  "title" : "Checking mergeability of pull requests",
  "titleInlineContent" : [
    {
      "text" : "Checking mergeability of pull requests",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.github.com\/rest\/guides\/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests"
},
"https://docs.github.com/rest/pulls/pulls#update-a-pull-request": {
  "identifier" : "https:\/\/docs.github.com\/rest\/pulls\/pulls#update-a-pull-request",
  "title" : "edit",
  "titleInlineContent" : [
    {
      "text" : "edit",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.github.com\/rest\/pulls\/pulls#update-a-pull-request"
},
"https://docs.github.com/rest/pulls/pulls/#create-a-pull-request": {
  "identifier" : "https:\/\/docs.github.com\/rest\/pulls\/pulls\/#create-a-pull-request",
  "title" : "create",
  "titleInlineContent" : [
    {
      "text" : "create",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.github.com\/rest\/pulls\/pulls\/#create-a-pull-request"
},
"https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types": {
  "identifier" : "https:\/\/docs.github.com\/rest\/using-the-rest-api\/getting-started-with-the-rest-api#media-types",
  "title" : "media type",
  "titleInlineContent" : [
    {
      "text" : "media type",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.github.com\/rest\/using-the-rest-api\/getting-started-with-the-rest-api#media-types"
},
"https://git-scm.com/docs/git-diff": {
  "identifier" : "https:\/\/git-scm.com\/docs\/git-diff",
  "title" : "git-diff",
  "titleInlineContent" : [
    {
      "text" : "git-diff",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/git-scm.com\/docs\/git-diff"
},
"https://support.github.com/": {
  "identifier" : "https:\/\/support.github.com\/",
  "title" : "GitHub Support portal",
  "titleInlineContent" : [
    {
      "text" : "GitHub Support portal",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/support.github.com\/"
}
}
}