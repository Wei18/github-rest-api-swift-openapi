{
  "abstract" : [
    {
      "text" : "Create a deployment",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/GitHubRestAPIRepos\/documentation\/GitHubRestAPIRepos",
        "doc:\/\/GitHubRestAPIRepos\/documentation\/GitHubRestAPIRepos\/APIProtocol"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/GitHubRestAPIRepos\/documentation\/GitHubRestAPIRepos\/APIProtocol\/reposCreateDeployment(_:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:18GitHubRestAPIRepos11APIProtocolP21reposCreateDeploymentyAA10OperationsO05ReposgH0O6OutputOAH5InputVYaKF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "reposCreateDeployment"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:18GitHubRestAPIRepos10OperationsO",
        "text" : "Operations"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:18GitHubRestAPIRepos10OperationsO21ReposCreateDeploymentO",
        "text" : "ReposCreateDeployment"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:18GitHubRestAPIRepos10OperationsO21ReposCreateDeploymentO5InputV",
        "text" : "Input"
      },
      {
        "kind" : "text",
        "text" : ") "
      },
      {
        "kind" : "keyword",
        "text" : "async"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "throws"
      },
      {
        "kind" : "text",
        "text" : " -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:18GitHubRestAPIRepos10OperationsO",
        "text" : "Operations"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:18GitHubRestAPIRepos10OperationsO21ReposCreateDeploymentO",
        "text" : "ReposCreateDeployment"
      },
      {
        "kind" : "text",
        "text" : "."
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:18GitHubRestAPIRepos10OperationsO21ReposCreateDeploymentO6OutputO",
        "text" : "Output"
      }
    ],
    "modules" : [
      {
        "name" : "GitHubRestAPIRepos"
      }
    ],
    "remoteSource" : {
      "fileName" : "Types.swift",
      "url" : "https:\/\/github.com\/wei18\/github-rest-api-swift-openapi\/Sources\/repos\/Types.swift#L1042"
    },
    "required" : true,
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "reposCreateDeployment(_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "Linux"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "reposCreateDeployment"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "input"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/GitHubRestAPIRepos\/documentation\/GitHubRestAPIRepos\/Operations",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:18GitHubRestAPIRepos10OperationsO",
              "text" : "Operations"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "identifier" : "doc:\/\/GitHubRestAPIRepos\/documentation\/GitHubRestAPIRepos\/Operations\/ReposCreateDeployment",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:18GitHubRestAPIRepos10OperationsO21ReposCreateDeploymentO",
              "text" : "ReposCreateDeployment"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "identifier" : "doc:\/\/GitHubRestAPIRepos\/documentation\/GitHubRestAPIRepos\/Operations\/ReposCreateDeployment\/Input",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:18GitHubRestAPIRepos10OperationsO21ReposCreateDeploymentO5InputV",
              "text" : "Input"
            },
            {
              "kind" : "text",
              "text" : ") "
            },
            {
              "kind" : "keyword",
              "text" : "async"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "throws"
            },
            {
              "kind" : "text",
              "text" : " -> "
            },
            {
              "identifier" : "doc:\/\/GitHubRestAPIRepos\/documentation\/GitHubRestAPIRepos\/Operations",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:18GitHubRestAPIRepos10OperationsO",
              "text" : "Operations"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "identifier" : "doc:\/\/GitHubRestAPIRepos\/documentation\/GitHubRestAPIRepos\/Operations\/ReposCreateDeployment",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:18GitHubRestAPIRepos10OperationsO21ReposCreateDeploymentO",
              "text" : "ReposCreateDeployment"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "identifier" : "doc:\/\/GitHubRestAPIRepos\/documentation\/GitHubRestAPIRepos\/Operations\/ReposCreateDeployment\/Output",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:18GitHubRestAPIRepos10OperationsO21ReposCreateDeploymentO6OutputO",
              "text" : "Output"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Deployments offer a few configurable parameters with certain defaults.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The ",
              "type" : "text"
            },
            {
              "code" : "ref",
              "type" : "codeVoice"
            },
            {
              "text" : " parameter can be any named branch, tag, or SHA. At GitHub we often deploy branches and verify them",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "before we merge a pull request.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The ",
              "type" : "text"
            },
            {
              "code" : "environment",
              "type" : "codeVoice"
            },
            {
              "text" : " parameter allows deployments to be issued to different runtime environments. Teams often have",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "multiple environments for verifying their applications, such as ",
              "type" : "text"
            },
            {
              "code" : "production",
              "type" : "codeVoice"
            },
            {
              "text" : ", ",
              "type" : "text"
            },
            {
              "code" : "staging",
              "type" : "codeVoice"
            },
            {
              "text" : ", and ",
              "type" : "text"
            },
            {
              "code" : "qa",
              "type" : "codeVoice"
            },
            {
              "text" : ". This parameter",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "makes it easier to track which environments have requested deployments. The default environment is ",
              "type" : "text"
            },
            {
              "code" : "production",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The ",
              "type" : "text"
            },
            {
              "code" : "auto_merge",
              "type" : "codeVoice"
            },
            {
              "text" : " parameter is used to ensure that the requested ref is not behind the repositoryâ€™s default branch. If",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the ref ",
              "type" : "text"
            },
            {
              "inlineContent" : [
                {
                  "text" : "is",
                  "type" : "text"
                }
              ],
              "type" : "emphasis"
            },
            {
              "text" : " behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "return a failure response.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "By default, ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/docs.github.com\/rest\/commits\/statuses",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " for every submitted context must be in a ",
              "type" : "text"
            },
            {
              "code" : "success",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "state. The ",
              "type" : "text"
            },
            {
              "code" : "required_contexts",
              "type" : "codeVoice"
            },
            {
              "text" : " parameter allows you to specify a subset of contexts that must be ",
              "type" : "text"
            },
            {
              "code" : "success",
              "type" : "codeVoice"
            },
            {
              "text" : ", or to",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "specify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "not require any contexts or create any commit statuses, the deployment will always succeed.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The ",
              "type" : "text"
            },
            {
              "code" : "payload",
              "type" : "codeVoice"
            },
            {
              "text" : " parameter is available for any extra information that a deployment system might need. It is a JSON text",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "field that will be passed on when a deployment event is dispatched.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The ",
              "type" : "text"
            },
            {
              "code" : "task",
              "type" : "codeVoice"
            },
            {
              "text" : " parameter is used by the deployment system to allow different execution paths. In the web world this might",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "be ",
              "type" : "text"
            },
            {
              "code" : "deploy:migrations",
              "type" : "codeVoice"
            },
            {
              "text" : " to run schema changes on the system. In the compiled world this could be a flag to compile an",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "application with debugging enabled.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Merged branch response:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "You will see this response when GitHub automatically merges the base branch into the topic branch instead of creating",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "a deployment. This auto-merge happens when:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Auto-merge option is enabled in the repository",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Topic branch does not include the latest changes on the base branch, which is ",
                      "type" : "text"
                    },
                    {
                      "code" : "master",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " in the response example",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "There are no merge conflicts",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "inlineContent" : [
            {
              "text" : "If there are no new commits in the base branch, a new request to create a deployment should give a successful",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "response.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Merge conflict response:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "This error happens when the ",
              "type" : "text"
            },
            {
              "code" : "auto_merge",
              "type" : "codeVoice"
            },
            {
              "text" : " option is enabled and when the default branch (in this case ",
              "type" : "text"
            },
            {
              "code" : "master",
              "type" : "codeVoice"
            },
            {
              "text" : "), canâ€™t",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "be merged into the branch thatâ€™s being deployed (in this case ",
              "type" : "text"
            },
            {
              "code" : "topic-branch",
              "type" : "codeVoice"
            },
            {
              "text" : "), due to merge conflicts.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Failed commit status checks:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "This error happens when the ",
              "type" : "text"
            },
            {
              "code" : "required_contexts",
              "type" : "codeVoice"
            },
            {
              "text" : " parameter indicates that one or more contexts need to have a ",
              "type" : "text"
            },
            {
              "code" : "success",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "status for the commit to be deployed, but one or more of the required contexts do not have a state of ",
              "type" : "text"
            },
            {
              "code" : "success",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "OAuth app tokens and personal access tokens (classic) need the ",
              "type" : "text"
            },
            {
              "code" : "repo",
              "type" : "codeVoice"
            },
            {
              "text" : " or ",
              "type" : "text"
            },
            {
              "code" : "repo_deployment",
              "type" : "codeVoice"
            },
            {
              "text" : " scope to use this endpoint.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "HTTP ",
                  "type" : "text"
                },
                {
                  "code" : "POST \/repos\/{owner}\/{repo}\/deployments",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Remark",
          "style" : "note",
          "type" : "aside"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Generated from ",
                  "type" : "text"
                },
                {
                  "code" : "#\/paths\/\/repos\/{owner}\/{repo}\/deployments\/post(repos\/create-deployment)",
                  "type" : "codeVoice"
                },
                {
                  "text" : ".",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Remark",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/githubrestapirepos\/apiprotocol\/reposcreatedeployment(_:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://GitHubRestAPIRepos/documentation/GitHubRestAPIRepos": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/GitHubRestAPIRepos\/documentation\/GitHubRestAPIRepos",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "GitHubRestAPIRepos",
  "type" : "topic",
  "url" : "\/documentation\/githubrestapirepos"
},
"doc://GitHubRestAPIRepos/documentation/GitHubRestAPIRepos/APIProtocol": {
  "abstract" : [
    {
      "text" : "A type that performs HTTP operations defined by the OpenAPI document.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "APIProtocol"
    }
  ],
  "identifier" : "doc:\/\/GitHubRestAPIRepos\/documentation\/GitHubRestAPIRepos\/APIProtocol",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "APIProtocol"
    }
  ],
  "role" : "symbol",
  "title" : "APIProtocol",
  "type" : "topic",
  "url" : "\/documentation\/githubrestapirepos\/apiprotocol"
},
"doc://GitHubRestAPIRepos/documentation/GitHubRestAPIRepos/APIProtocol/reposCreateDeployment(_:)": {
  "abstract" : [
    {
      "text" : "Create a deployment",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "reposCreateDeployment"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18GitHubRestAPIRepos10OperationsO",
      "text" : "Operations"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18GitHubRestAPIRepos10OperationsO21ReposCreateDeploymentO",
      "text" : "ReposCreateDeployment"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18GitHubRestAPIRepos10OperationsO21ReposCreateDeploymentO5InputV",
      "text" : "Input"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18GitHubRestAPIRepos10OperationsO",
      "text" : "Operations"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18GitHubRestAPIRepos10OperationsO21ReposCreateDeploymentO",
      "text" : "ReposCreateDeployment"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:18GitHubRestAPIRepos10OperationsO21ReposCreateDeploymentO6OutputO",
      "text" : "Output"
    }
  ],
  "identifier" : "doc:\/\/GitHubRestAPIRepos\/documentation\/GitHubRestAPIRepos\/APIProtocol\/reposCreateDeployment(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "reposCreateDeployment(_:)",
  "type" : "topic",
  "url" : "\/documentation\/githubrestapirepos\/apiprotocol\/reposcreatedeployment(_:)"
},
"doc://GitHubRestAPIRepos/documentation/GitHubRestAPIRepos/Operations": {
  "abstract" : [
    {
      "text" : "API operations, with input and output types, generated from ",
      "type" : "text"
    },
    {
      "code" : "#\/paths",
      "type" : "codeVoice"
    },
    {
      "text" : " in the OpenAPI document.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Operations"
    }
  ],
  "identifier" : "doc:\/\/GitHubRestAPIRepos\/documentation\/GitHubRestAPIRepos\/Operations",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Operations"
    }
  ],
  "role" : "symbol",
  "title" : "Operations",
  "type" : "topic",
  "url" : "\/documentation\/githubrestapirepos\/operations"
},
"doc://GitHubRestAPIRepos/documentation/GitHubRestAPIRepos/Operations/ReposCreateDeployment": {
  "abstract" : [
    {
      "text" : "Create a deployment",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ReposCreateDeployment"
    }
  ],
  "identifier" : "doc:\/\/GitHubRestAPIRepos\/documentation\/GitHubRestAPIRepos\/Operations\/ReposCreateDeployment",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ReposCreateDeployment"
    }
  ],
  "role" : "symbol",
  "title" : "Operations.ReposCreateDeployment",
  "type" : "topic",
  "url" : "\/documentation\/githubrestapirepos\/operations\/reposcreatedeployment"
},
"doc://GitHubRestAPIRepos/documentation/GitHubRestAPIRepos/Operations/ReposCreateDeployment/Input": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Input"
    }
  ],
  "identifier" : "doc:\/\/GitHubRestAPIRepos\/documentation\/GitHubRestAPIRepos\/Operations\/ReposCreateDeployment\/Input",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Input"
    }
  ],
  "role" : "symbol",
  "title" : "Operations.ReposCreateDeployment.Input",
  "type" : "topic",
  "url" : "\/documentation\/githubrestapirepos\/operations\/reposcreatedeployment\/input"
},
"doc://GitHubRestAPIRepos/documentation/GitHubRestAPIRepos/Operations/ReposCreateDeployment/Output": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Output"
    }
  ],
  "identifier" : "doc:\/\/GitHubRestAPIRepos\/documentation\/GitHubRestAPIRepos\/Operations\/ReposCreateDeployment\/Output",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Output"
    }
  ],
  "role" : "symbol",
  "title" : "Operations.ReposCreateDeployment.Output",
  "type" : "topic",
  "url" : "\/documentation\/githubrestapirepos\/operations\/reposcreatedeployment\/output"
},
"https://docs.github.com/rest/commits/statuses": {
  "identifier" : "https:\/\/docs.github.com\/rest\/commits\/statuses",
  "title" : "commit statuses",
  "titleInlineContent" : [
    {
      "text" : "commit statuses",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/docs.github.com\/rest\/commits\/statuses"
}
}
}